"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@glideapps";
exports.ids = ["vendor-chunks/@glideapps"];
exports.modules = {

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/index.css":
/*!****************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/index.css ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"89dd529078dc\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9pbmRleC5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2luZGV4LmNzcz9hM2MwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiODlkZDUyOTA3OGRjXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/index.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/boolean-cell.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/boolean-cell.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   booleanCellRenderer: () => (/* binding */ booleanCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _data_editor_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data-editor/data-editor-fns.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-fns.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _internal_data_grid_render_draw_checkbox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid/render/draw-checkbox.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js\");\n\n\n\n\nconst defaultCellMaxSize = 20;\nconst booleanCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"false\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Boolean,\n    needsHover: true,\n    useLabel: false,\n    needsHoverPosition: true,\n    measure: () => 50,\n    draw: a => drawBoolean(a, a.cell.data, (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.booleanCellIsEditable)(a.cell), a.cell.maxSize ?? defaultCellMaxSize),\n    onDelete: c => ({\n        ...c,\n        data: false,\n    }),\n    onClick: e => {\n        const { cell, posX: pointerX, posY: pointerY, bounds, theme } = e;\n        const { width, height, x: cellX, y: cellY } = bounds;\n        const maxWidth = cell.maxSize ?? defaultCellMaxSize;\n        const cellCenterY = Math.floor(bounds.y + height / 2);\n        const checkBoxWidth = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSquareWidth)(maxWidth, height, theme.cellVerticalPadding);\n        const posX = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSquareXPosFromAlign)(cell.contentAlign ?? \"center\", cellX, width, theme.cellHorizontalPadding, checkBoxWidth);\n        const bb = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSquareBB)(posX, cellCenterY, checkBoxWidth);\n        const checkBoxClicked = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.pointIsWithinBB)(cellX + pointerX, cellY + pointerY, bb);\n        if ((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.booleanCellIsEditable)(cell) && checkBoxClicked) {\n            return {\n                ...cell,\n                data: (0,_data_editor_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_2__.toggleBoolean)(cell.data),\n            };\n        }\n        return undefined;\n    },\n    onPaste: (toPaste, cell) => {\n        let newVal = _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.BooleanEmpty;\n        if (toPaste.toLowerCase() === \"true\") {\n            newVal = true;\n        }\n        else if (toPaste.toLowerCase() === \"false\") {\n            newVal = false;\n        }\n        else if (toPaste.toLowerCase() === \"indeterminate\") {\n            newVal = _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.BooleanIndeterminate;\n        }\n        return newVal === cell.data\n            ? undefined\n            : {\n                ...cell,\n                data: newVal,\n            };\n    },\n};\nfunction drawBoolean(args, data, canEdit, maxSize) {\n    if (!canEdit && data === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.BooleanEmpty) {\n        return;\n    }\n    const { ctx, hoverAmount, theme, rect, highlighted, hoverX, hoverY, cell: { contentAlign }, } = args;\n    const { x, y, width: w, height: h } = rect;\n    const hoverEffect = 0.35;\n    let alpha = canEdit ? 1 - hoverEffect + hoverEffect * hoverAmount : 0.4;\n    if (data === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.BooleanEmpty) {\n        alpha *= hoverAmount;\n    }\n    if (alpha === 0) {\n        return;\n    }\n    ctx.globalAlpha = alpha;\n    (0,_internal_data_grid_render_draw_checkbox_js__WEBPACK_IMPORTED_MODULE_3__.drawCheckbox)(ctx, theme, data, x, y, w, h, highlighted, hoverX, hoverY, maxSize, contentAlign);\n    ctx.globalAlpha = 1;\n}\n//# sourceMappingURL=boolean-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvYm9vbGVhbi1jZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBHO0FBQ3hDO0FBQ2tFO0FBQ3ZEO0FBQzdFO0FBQ087QUFDUDtBQUNBLFVBQVUsZ0ZBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsNkZBQXFCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQixzREFBc0Q7QUFDdEUsZ0JBQWdCLG9DQUFvQztBQUNwRDtBQUNBO0FBQ0EsOEJBQThCLGdFQUFjO0FBQzVDLHFCQUFxQix3RUFBc0I7QUFDM0MsbUJBQW1CLDZEQUFXO0FBQzlCLGdDQUFnQyxpRUFBZTtBQUMvQyxZQUFZLDZGQUFxQjtBQUNqQztBQUNBO0FBQ0Esc0JBQXNCLDhFQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFCQUFxQixnRkFBWTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix3RkFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZCQUE2QixnRkFBWTtBQUN6QztBQUNBO0FBQ0EsWUFBWSxvRUFBb0UsY0FBYyxJQUFJO0FBQ2xHLFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQSxpQkFBaUIsZ0ZBQVk7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx5RkFBWTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jZWxscy9ib29sZWFuLWNlbGwuanM/ZTg3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTcXVhcmVXaWR0aCwgZ2V0U3F1YXJlWFBvc0Zyb21BbGlnbiwgZ2V0U3F1YXJlQkIsIHBvaW50SXNXaXRoaW5CQiB9IGZyb20gXCIuLi9jb21tb24vdXRpbHMuanNcIjtcbmltcG9ydCB7IHRvZ2dsZUJvb2xlYW4gfSBmcm9tIFwiLi4vZGF0YS1lZGl0b3IvZGF0YS1lZGl0b3ItZm5zLmpzXCI7XG5pbXBvcnQgeyBHcmlkQ2VsbEtpbmQsIGJvb2xlYW5DZWxsSXNFZGl0YWJsZSwgQm9vbGVhbkVtcHR5LCBCb29sZWFuSW5kZXRlcm1pbmF0ZSwgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL2RhdGEtZ3JpZC10eXBlcy5qc1wiO1xuaW1wb3J0IHsgZHJhd0NoZWNrYm94IH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9yZW5kZXIvZHJhdy1jaGVja2JveC5qc1wiO1xuY29uc3QgZGVmYXVsdENlbGxNYXhTaXplID0gMjA7XG5leHBvcnQgY29uc3QgYm9vbGVhbkNlbGxSZW5kZXJlciA9IHtcbiAgICBnZXRBY2Nlc3NpYmlsaXR5U3RyaW5nOiBjID0+IGMuZGF0YT8udG9TdHJpbmcoKSA/PyBcImZhbHNlXCIsXG4gICAga2luZDogR3JpZENlbGxLaW5kLkJvb2xlYW4sXG4gICAgbmVlZHNIb3ZlcjogdHJ1ZSxcbiAgICB1c2VMYWJlbDogZmFsc2UsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiB0cnVlLFxuICAgIG1lYXN1cmU6ICgpID0+IDUwLFxuICAgIGRyYXc6IGEgPT4gZHJhd0Jvb2xlYW4oYSwgYS5jZWxsLmRhdGEsIGJvb2xlYW5DZWxsSXNFZGl0YWJsZShhLmNlbGwpLCBhLmNlbGwubWF4U2l6ZSA/PyBkZWZhdWx0Q2VsbE1heFNpemUpLFxuICAgIG9uRGVsZXRlOiBjID0+ICh7XG4gICAgICAgIC4uLmMsXG4gICAgICAgIGRhdGE6IGZhbHNlLFxuICAgIH0pLFxuICAgIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICBjb25zdCB7IGNlbGwsIHBvc1g6IHBvaW50ZXJYLCBwb3NZOiBwb2ludGVyWSwgYm91bmRzLCB0aGVtZSB9ID0gZTtcbiAgICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCB4OiBjZWxsWCwgeTogY2VsbFkgfSA9IGJvdW5kcztcbiAgICAgICAgY29uc3QgbWF4V2lkdGggPSBjZWxsLm1heFNpemUgPz8gZGVmYXVsdENlbGxNYXhTaXplO1xuICAgICAgICBjb25zdCBjZWxsQ2VudGVyWSA9IE1hdGguZmxvb3IoYm91bmRzLnkgKyBoZWlnaHQgLyAyKTtcbiAgICAgICAgY29uc3QgY2hlY2tCb3hXaWR0aCA9IGdldFNxdWFyZVdpZHRoKG1heFdpZHRoLCBoZWlnaHQsIHRoZW1lLmNlbGxWZXJ0aWNhbFBhZGRpbmcpO1xuICAgICAgICBjb25zdCBwb3NYID0gZ2V0U3F1YXJlWFBvc0Zyb21BbGlnbihjZWxsLmNvbnRlbnRBbGlnbiA/PyBcImNlbnRlclwiLCBjZWxsWCwgd2lkdGgsIHRoZW1lLmNlbGxIb3Jpem9udGFsUGFkZGluZywgY2hlY2tCb3hXaWR0aCk7XG4gICAgICAgIGNvbnN0IGJiID0gZ2V0U3F1YXJlQkIocG9zWCwgY2VsbENlbnRlclksIGNoZWNrQm94V2lkdGgpO1xuICAgICAgICBjb25zdCBjaGVja0JveENsaWNrZWQgPSBwb2ludElzV2l0aGluQkIoY2VsbFggKyBwb2ludGVyWCwgY2VsbFkgKyBwb2ludGVyWSwgYmIpO1xuICAgICAgICBpZiAoYm9vbGVhbkNlbGxJc0VkaXRhYmxlKGNlbGwpICYmIGNoZWNrQm94Q2xpY2tlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5jZWxsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRvZ2dsZUJvb2xlYW4oY2VsbC5kYXRhKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICAgIG9uUGFzdGU6ICh0b1Bhc3RlLCBjZWxsKSA9PiB7XG4gICAgICAgIGxldCBuZXdWYWwgPSBCb29sZWFuRW1wdHk7XG4gICAgICAgIGlmICh0b1Bhc3RlLnRvTG93ZXJDYXNlKCkgPT09IFwidHJ1ZVwiKSB7XG4gICAgICAgICAgICBuZXdWYWwgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRvUGFzdGUudG9Mb3dlckNhc2UoKSA9PT0gXCJmYWxzZVwiKSB7XG4gICAgICAgICAgICBuZXdWYWwgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0b1Bhc3RlLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5kZXRlcm1pbmF0ZVwiKSB7XG4gICAgICAgICAgICBuZXdWYWwgPSBCb29sZWFuSW5kZXRlcm1pbmF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3VmFsID09PSBjZWxsLmRhdGFcbiAgICAgICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAuLi5jZWxsLFxuICAgICAgICAgICAgICAgIGRhdGE6IG5ld1ZhbCxcbiAgICAgICAgICAgIH07XG4gICAgfSxcbn07XG5mdW5jdGlvbiBkcmF3Qm9vbGVhbihhcmdzLCBkYXRhLCBjYW5FZGl0LCBtYXhTaXplKSB7XG4gICAgaWYgKCFjYW5FZGl0ICYmIGRhdGEgPT09IEJvb2xlYW5FbXB0eSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgY3R4LCBob3ZlckFtb3VudCwgdGhlbWUsIHJlY3QsIGhpZ2hsaWdodGVkLCBob3ZlclgsIGhvdmVyWSwgY2VsbDogeyBjb250ZW50QWxpZ24gfSwgfSA9IGFyZ3M7XG4gICAgY29uc3QgeyB4LCB5LCB3aWR0aDogdywgaGVpZ2h0OiBoIH0gPSByZWN0O1xuICAgIGNvbnN0IGhvdmVyRWZmZWN0ID0gMC4zNTtcbiAgICBsZXQgYWxwaGEgPSBjYW5FZGl0ID8gMSAtIGhvdmVyRWZmZWN0ICsgaG92ZXJFZmZlY3QgKiBob3ZlckFtb3VudCA6IDAuNDtcbiAgICBpZiAoZGF0YSA9PT0gQm9vbGVhbkVtcHR5KSB7XG4gICAgICAgIGFscGhhICo9IGhvdmVyQW1vdW50O1xuICAgIH1cbiAgICBpZiAoYWxwaGEgPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjdHguZ2xvYmFsQWxwaGEgPSBhbHBoYTtcbiAgICBkcmF3Q2hlY2tib3goY3R4LCB0aGVtZSwgZGF0YSwgeCwgeSwgdywgaCwgaGlnaGxpZ2h0ZWQsIGhvdmVyWCwgaG92ZXJZLCBtYXhTaXplLCBjb250ZW50QWxpZ24pO1xuICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ib29sZWFuLWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/boolean-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/bubble-cell.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/bubble-cell.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bubbleCellRenderer: () => (/* binding */ bubbleCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_overlay_editor_private_bubbles_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid-overlay-editor/private/bubbles-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* eslint-disable react/display-name */\n\n\n\n\n\nconst bubbleCellRenderer = {\n    getAccessibilityString: c => (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeAccessibilityStringForArray)(c.data),\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.GridCellKind.Bubble,\n    needsHover: false,\n    useLabel: false,\n    needsHoverPosition: false,\n    measure: (ctx, cell, t) => cell.data.reduce((acc, data) => ctx.measureText(data).width + acc + 20, 0) + 2 * t.cellHorizontalPadding - 4,\n    draw: a => drawBubbles(a, a.cell.data),\n    provideEditor: () => p => {\n        const { value } = p;\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_grid_overlay_editor_private_bubbles_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { bubbles: value.data });\n    },\n    onPaste: () => undefined,\n};\nconst itemMargin = 4;\nfunction drawBubbles(args, data) {\n    const { rect, theme, ctx, highlighted } = args;\n    const { x, y, width: w, height: h } = rect;\n    const bubbleHeight = 20;\n    const bubblePad = 8;\n    const bubbleMargin = itemMargin;\n    let renderX = x + theme.cellHorizontalPadding;\n    const renderBoxes = [];\n    for (const s of data) {\n        if (renderX > x + w)\n            break;\n        const textWidth = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.measureTextCached)(s, ctx, theme.baseFontFull).width;\n        renderBoxes.push({\n            x: renderX,\n            width: textWidth,\n        });\n        renderX += textWidth + bubblePad * 2 + bubbleMargin;\n    }\n    ctx.beginPath();\n    for (const rectInfo of renderBoxes) {\n        (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.roundedRect)(ctx, rectInfo.x, y + (h - bubbleHeight) / 2, rectInfo.width + bubblePad * 2, bubbleHeight, theme.roundingRadius ?? bubbleHeight / 2);\n    }\n    ctx.fillStyle = highlighted ? theme.bgBubbleSelected : theme.bgBubble;\n    ctx.fill();\n    for (const [i, rectInfo] of renderBoxes.entries()) {\n        ctx.beginPath();\n        ctx.fillStyle = theme.textBubble;\n        ctx.fillText(data[i], rectInfo.x + bubblePad, y + h / 2 + (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getMiddleCenterBias)(ctx, theme));\n    }\n}\n//# sourceMappingURL=bubble-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvYnViYmxlLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDMkU7QUFDVTtBQUM1QztBQUNIO0FBQzlEO0FBQ1AsaUNBQWlDLGlGQUErQjtBQUNoRSxVQUFVLGdGQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCLGVBQWUsZ0RBQW1CLENBQUMsNEdBQW9CLElBQUkscUJBQXFCO0FBQ2hGLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0NBQWdDO0FBQzVDLFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOEZBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0ZBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGdHQUFtQjtBQUNyRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jZWxscy9idWJibGUtY2VsbC5qcz82YTY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2Rpc3BsYXktbmFtZSAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQnViYmxlc092ZXJsYXlFZGl0b3IgZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL2J1YmJsZXMtb3ZlcmxheS1lZGl0b3IuanNcIjtcbmltcG9ydCB7IGdldE1pZGRsZUNlbnRlckJpYXMsIG1lYXN1cmVUZXh0Q2FjaGVkLCByb3VuZGVkUmVjdCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RhdGEtZ3JpZC1saWIuanNcIjtcbmltcG9ydCB7IEdyaWRDZWxsS2luZCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5pbXBvcnQgeyBtYWtlQWNjZXNzaWJpbGl0eVN0cmluZ0ZvckFycmF5IH0gZnJvbSBcIi4uL2NvbW1vbi91dGlscy5qc1wiO1xuZXhwb3J0IGNvbnN0IGJ1YmJsZUNlbGxSZW5kZXJlciA9IHtcbiAgICBnZXRBY2Nlc3NpYmlsaXR5U3RyaW5nOiBjID0+IG1ha2VBY2Nlc3NpYmlsaXR5U3RyaW5nRm9yQXJyYXkoYy5kYXRhKSxcbiAgICBraW5kOiBHcmlkQ2VsbEtpbmQuQnViYmxlLFxuICAgIG5lZWRzSG92ZXI6IGZhbHNlLFxuICAgIHVzZUxhYmVsOiBmYWxzZSxcbiAgICBuZWVkc0hvdmVyUG9zaXRpb246IGZhbHNlLFxuICAgIG1lYXN1cmU6IChjdHgsIGNlbGwsIHQpID0+IGNlbGwuZGF0YS5yZWR1Y2UoKGFjYywgZGF0YSkgPT4gY3R4Lm1lYXN1cmVUZXh0KGRhdGEpLndpZHRoICsgYWNjICsgMjAsIDApICsgMiAqIHQuY2VsbEhvcml6b250YWxQYWRkaW5nIC0gNCxcbiAgICBkcmF3OiBhID0+IGRyYXdCdWJibGVzKGEsIGEuY2VsbC5kYXRhKSxcbiAgICBwcm92aWRlRWRpdG9yOiAoKSA9PiBwID0+IHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gcDtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnViYmxlc092ZXJsYXlFZGl0b3IsIHsgYnViYmxlczogdmFsdWUuZGF0YSB9KTtcbiAgICB9LFxuICAgIG9uUGFzdGU6ICgpID0+IHVuZGVmaW5lZCxcbn07XG5jb25zdCBpdGVtTWFyZ2luID0gNDtcbmZ1bmN0aW9uIGRyYXdCdWJibGVzKGFyZ3MsIGRhdGEpIHtcbiAgICBjb25zdCB7IHJlY3QsIHRoZW1lLCBjdHgsIGhpZ2hsaWdodGVkIH0gPSBhcmdzO1xuICAgIGNvbnN0IHsgeCwgeSwgd2lkdGg6IHcsIGhlaWdodDogaCB9ID0gcmVjdDtcbiAgICBjb25zdCBidWJibGVIZWlnaHQgPSAyMDtcbiAgICBjb25zdCBidWJibGVQYWQgPSA4O1xuICAgIGNvbnN0IGJ1YmJsZU1hcmdpbiA9IGl0ZW1NYXJnaW47XG4gICAgbGV0IHJlbmRlclggPSB4ICsgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nO1xuICAgIGNvbnN0IHJlbmRlckJveGVzID0gW107XG4gICAgZm9yIChjb25zdCBzIG9mIGRhdGEpIHtcbiAgICAgICAgaWYgKHJlbmRlclggPiB4ICsgdylcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjb25zdCB0ZXh0V2lkdGggPSBtZWFzdXJlVGV4dENhY2hlZChzLCBjdHgsIHRoZW1lLmJhc2VGb250RnVsbCkud2lkdGg7XG4gICAgICAgIHJlbmRlckJveGVzLnB1c2goe1xuICAgICAgICAgICAgeDogcmVuZGVyWCxcbiAgICAgICAgICAgIHdpZHRoOiB0ZXh0V2lkdGgsXG4gICAgICAgIH0pO1xuICAgICAgICByZW5kZXJYICs9IHRleHRXaWR0aCArIGJ1YmJsZVBhZCAqIDIgKyBidWJibGVNYXJnaW47XG4gICAgfVxuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBmb3IgKGNvbnN0IHJlY3RJbmZvIG9mIHJlbmRlckJveGVzKSB7XG4gICAgICAgIHJvdW5kZWRSZWN0KGN0eCwgcmVjdEluZm8ueCwgeSArIChoIC0gYnViYmxlSGVpZ2h0KSAvIDIsIHJlY3RJbmZvLndpZHRoICsgYnViYmxlUGFkICogMiwgYnViYmxlSGVpZ2h0LCB0aGVtZS5yb3VuZGluZ1JhZGl1cyA/PyBidWJibGVIZWlnaHQgLyAyKTtcbiAgICB9XG4gICAgY3R4LmZpbGxTdHlsZSA9IGhpZ2hsaWdodGVkID8gdGhlbWUuYmdCdWJibGVTZWxlY3RlZCA6IHRoZW1lLmJnQnViYmxlO1xuICAgIGN0eC5maWxsKCk7XG4gICAgZm9yIChjb25zdCBbaSwgcmVjdEluZm9dIG9mIHJlbmRlckJveGVzLmVudHJpZXMoKSkge1xuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGVtZS50ZXh0QnViYmxlO1xuICAgICAgICBjdHguZmlsbFRleHQoZGF0YVtpXSwgcmVjdEluZm8ueCArIGJ1YmJsZVBhZCwgeSArIGggLyAyICsgZ2V0TWlkZGxlQ2VudGVyQmlhcyhjdHgsIHRoZW1lKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnViYmxlLWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/bubble-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/drilldown-cell.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/drilldown-cell.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drilldownCellRenderer: () => (/* binding */ drilldownCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_overlay_editor_private_drilldown_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid-overlay-editor/private/drilldown-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/drilldown-overlay-editor.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* eslint-disable react/display-name */\n\n\n\n\n\nconst drilldownCellRenderer = {\n    getAccessibilityString: c => (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeAccessibilityStringForArray)(c.data.map(d => d.text)),\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.GridCellKind.Drilldown,\n    needsHover: false,\n    useLabel: false,\n    needsHoverPosition: false,\n    measure: (ctx, cell, t) => cell.data.reduce((acc, data) => ctx.measureText(data.text).width + acc + 20 + (data.img !== undefined ? 18 : 0), 0) +\n        2 * t.cellHorizontalPadding -\n        4,\n    draw: a => drawDrilldownCell(a, a.cell.data),\n    provideEditor: () => p => {\n        const { value } = p;\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_grid_overlay_editor_private_drilldown_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { drilldowns: value.data });\n    },\n    onPaste: () => undefined,\n};\nconst itemMargin = 4;\nconst drilldownCache = {};\nfunction getAndCacheDrilldownBorder(bgCell, border, height, rounding) {\n    const dpr = Math.ceil(window.devicePixelRatio);\n    const shadowBlur = 5;\n    const targetHeight = height - shadowBlur * 2;\n    const middleWidth = 4;\n    const innerHeight = height * dpr;\n    const sideWidth = rounding + shadowBlur;\n    const targetWidth = rounding * 3;\n    const innerWidth = (targetWidth + shadowBlur * 2) * dpr;\n    const key = `${bgCell},${border},${dpr},${height}`;\n    if (drilldownCache[key] !== undefined) {\n        return {\n            el: drilldownCache[key],\n            height: innerHeight,\n            width: innerWidth,\n            middleWidth: middleWidth * dpr,\n            sideWidth: sideWidth * dpr,\n            padding: shadowBlur * dpr,\n            dpr,\n        };\n    }\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\"); // alpha needed\n    if (ctx === null)\n        return null;\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n    ctx.scale(dpr, dpr);\n    drilldownCache[key] = canvas;\n    ctx.beginPath();\n    (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.roundedRect)(ctx, shadowBlur, shadowBlur, targetWidth, targetHeight, rounding);\n    ctx.shadowColor = \"rgba(24, 25, 34, 0.4)\";\n    ctx.shadowBlur = 1;\n    ctx.fillStyle = bgCell;\n    ctx.fill();\n    ctx.shadowColor = \"rgba(24, 25, 34, 0.3)\";\n    ctx.shadowOffsetY = 1;\n    ctx.shadowBlur = 5;\n    ctx.fillStyle = bgCell;\n    ctx.fill();\n    ctx.shadowOffsetY = 0;\n    ctx.shadowBlur = 0;\n    ctx.shadowBlur = 0;\n    ctx.beginPath();\n    (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.roundedRect)(ctx, shadowBlur + 0.5, shadowBlur + 0.5, targetWidth, targetHeight, rounding);\n    ctx.strokeStyle = border;\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    return {\n        el: canvas,\n        height: innerHeight,\n        width: innerWidth,\n        sideWidth: sideWidth * dpr,\n        middleWidth: rounding * dpr,\n        padding: shadowBlur * dpr,\n        dpr,\n    };\n}\nfunction drawDrilldownCell(args, data) {\n    const { rect, theme, ctx, imageLoader, col, row } = args;\n    const { x, width: w } = rect;\n    const font = theme.baseFontFull;\n    const emHeight = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getEmHeight)(ctx, font);\n    const h = Math.min(rect.height, Math.max(16, Math.ceil(emHeight * theme.lineHeight) * 2));\n    const y = Math.floor(rect.y + (rect.height - h) / 2);\n    const bubbleHeight = h - 10;\n    const bubblePad = 8;\n    const bubbleMargin = itemMargin;\n    let renderX = x + theme.cellHorizontalPadding;\n    const rounding = theme.roundingRadius ?? 6;\n    const tileMap = getAndCacheDrilldownBorder(theme.bgCell, theme.drilldownBorder, h, rounding);\n    const renderBoxes = [];\n    for (const el of data) {\n        if (renderX > x + w)\n            break;\n        const textMetrics = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.measureTextCached)(el.text, ctx, font);\n        const textWidth = textMetrics.width;\n        let imgWidth = 0;\n        if (el.img !== undefined) {\n            const img = imageLoader.loadOrGetImage(el.img, col, row);\n            if (img !== undefined) {\n                imgWidth = bubbleHeight - 8 + 4;\n            }\n        }\n        const renderWidth = textWidth + imgWidth + bubblePad * 2;\n        renderBoxes.push({\n            x: renderX,\n            width: renderWidth,\n        });\n        renderX += renderWidth + bubbleMargin;\n    }\n    if (tileMap !== null) {\n        const { el, height, middleWidth, sideWidth, width, dpr, padding } = tileMap;\n        const outerSideWidth = sideWidth / dpr;\n        const outerPadding = padding / dpr;\n        for (const rectInfo of renderBoxes) {\n            const rx = Math.floor(rectInfo.x);\n            const rw = Math.floor(rectInfo.width);\n            const outerMiddleWidth = rw - (outerSideWidth - outerPadding) * 2;\n            ctx.imageSmoothingEnabled = false;\n            ctx.drawImage(el, 0, 0, sideWidth, height, rx - outerPadding, y, outerSideWidth, h);\n            if (outerMiddleWidth > 0)\n                ctx.drawImage(el, sideWidth, 0, middleWidth, height, rx + (outerSideWidth - outerPadding), y, outerMiddleWidth, h);\n            ctx.drawImage(el, width - sideWidth, 0, sideWidth, height, rx + rw - (outerSideWidth - outerPadding), y, outerSideWidth, h);\n            ctx.imageSmoothingEnabled = true;\n        }\n    }\n    ctx.beginPath();\n    for (const [i, rectInfo] of renderBoxes.entries()) {\n        const d = data[i];\n        let drawX = rectInfo.x + bubblePad;\n        if (d.img !== undefined) {\n            const img = imageLoader.loadOrGetImage(d.img, col, row);\n            if (img !== undefined) {\n                const imgSize = bubbleHeight - 8;\n                let srcX = 0;\n                let srcY = 0;\n                let srcWidth = img.width;\n                let srcHeight = img.height;\n                if (srcWidth > srcHeight) {\n                    // landscape\n                    srcX += (srcWidth - srcHeight) / 2;\n                    srcWidth = srcHeight;\n                }\n                else if (srcHeight > srcWidth) {\n                    //portrait\n                    srcY += (srcHeight - srcWidth) / 2;\n                    srcHeight = srcWidth;\n                }\n                ctx.beginPath();\n                (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.roundedRect)(ctx, drawX, y + h / 2 - imgSize / 2, imgSize, imgSize, theme.roundingRadius ?? 3);\n                ctx.save();\n                ctx.clip();\n                ctx.drawImage(img, srcX, srcY, srcWidth, srcHeight, drawX, y + h / 2 - imgSize / 2, imgSize, imgSize);\n                ctx.restore();\n                drawX += imgSize + 4;\n            }\n        }\n        ctx.beginPath();\n        ctx.fillStyle = theme.textBubble;\n        ctx.fillText(d.text, drawX, y + h / 2 + (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getMiddleCenterBias)(ctx, theme));\n    }\n}\n//# sourceMappingURL=drilldown-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/drilldown-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/image-cell.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/image-cell.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawImage: () => (/* binding */ drawImage),\n/* harmony export */   imageCellRenderer: () => (/* binding */ imageCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_overlay_editor_private_image_overlay_editor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid-overlay-editor/private/image-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* eslint-disable react/display-name */\n\n\n\n\nconst imageCellRenderer = {\n    getAccessibilityString: c => c.data.join(\", \"),\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Image,\n    needsHover: false,\n    useLabel: false,\n    needsHoverPosition: false,\n    draw: a => drawImage(a, a.cell.displayData ?? a.cell.data, a.cell.rounding ?? a.theme.roundingRadius ?? 4, a.cell.contentAlign),\n    measure: (_ctx, cell) => cell.data.length * 50,\n    onDelete: c => ({\n        ...c,\n        data: [],\n    }),\n    provideEditor: () => p => {\n        const { value, onFinishedEditing, imageEditorOverride } = p;\n        const ImageEditor = imageEditorOverride ?? _internal_data_grid_overlay_editor_private_image_overlay_editor_js__WEBPACK_IMPORTED_MODULE_2__.ImageOverlayEditor;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(ImageEditor, { urls: value.data, canWrite: value.readonly !== false, onCancel: onFinishedEditing, onChange: newImage => {\n                onFinishedEditing({\n                    ...value,\n                    data: [newImage],\n                });\n            } }));\n    },\n    onPaste: (toPaste, cell) => {\n        toPaste = toPaste.trim();\n        const fragments = toPaste.split(\",\");\n        const uris = fragments\n            .map(f => {\n            try {\n                new URL(f);\n                return f;\n            }\n            catch {\n                return undefined;\n            }\n        })\n            .filter(x => x !== undefined);\n        if (uris.length === cell.data.length && uris.every((u, i) => u === cell.data[i]))\n            return undefined;\n        return {\n            ...cell,\n            data: uris,\n        };\n    },\n};\nconst itemMargin = 4;\nfunction drawImage(args, data, rounding, contentAlign) {\n    const { rect, col, row, theme, ctx, imageLoader } = args;\n    const { x, y, height: h, width: w } = rect;\n    const imgHeight = h - theme.cellVerticalPadding * 2;\n    const images = [];\n    let totalWidth = 0;\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let index = 0; index < data.length; index++) {\n        const i = data[index];\n        if (i.length === 0)\n            continue;\n        const img = imageLoader.loadOrGetImage(i, col, row);\n        if (img !== undefined) {\n            images[index] = img;\n            const imgWidth = img.width * (imgHeight / img.height);\n            totalWidth += imgWidth + itemMargin;\n        }\n    }\n    if (totalWidth === 0)\n        return;\n    totalWidth -= itemMargin;\n    let drawX = x + theme.cellHorizontalPadding;\n    if (contentAlign === \"right\")\n        drawX = Math.floor(x + w - theme.cellHorizontalPadding - totalWidth);\n    else if (contentAlign === \"center\")\n        drawX = Math.floor(x + w / 2 - totalWidth / 2);\n    for (const img of images) {\n        if (img === undefined)\n            continue; //array is sparse\n        const imgWidth = img.width * (imgHeight / img.height);\n        if (rounding > 0) {\n            ctx.beginPath();\n            (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_3__.roundedRect)(ctx, drawX, y + theme.cellVerticalPadding, imgWidth, imgHeight, rounding);\n            ctx.save();\n            ctx.clip();\n        }\n        ctx.drawImage(img, drawX, y + theme.cellVerticalPadding, imgWidth, imgHeight);\n        if (rounding > 0) {\n            ctx.restore();\n        }\n        drawX += imgWidth + itemMargin;\n    }\n}\n//# sourceMappingURL=image-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvaW1hZ2UtY2VsbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUMyRTtBQUM5QjtBQUNKO0FBQ2pFO0FBQ1A7QUFDQSxVQUFVLGdGQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnQkFBZ0IsZ0RBQWdEO0FBQ2hFLG1EQUFtRCxrSEFBa0I7QUFDckUsZ0JBQWdCLGdEQUFtQixnQkFBZ0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQLFlBQVksMENBQTBDO0FBQ3RELFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0ZBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL2ltYWdlLWNlbGwuanM/YjkyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9kaXNwbGF5LW5hbWUgKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW1hZ2VPdmVybGF5RWRpdG9yIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL2ltYWdlLW92ZXJsYXktZWRpdG9yLmpzXCI7XG5pbXBvcnQgeyByb3VuZGVkUmVjdCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RhdGEtZ3JpZC1saWIuanNcIjtcbmltcG9ydCB7IEdyaWRDZWxsS2luZCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5leHBvcnQgY29uc3QgaW1hZ2VDZWxsUmVuZGVyZXIgPSB7XG4gICAgZ2V0QWNjZXNzaWJpbGl0eVN0cmluZzogYyA9PiBjLmRhdGEuam9pbihcIiwgXCIpLFxuICAgIGtpbmQ6IEdyaWRDZWxsS2luZC5JbWFnZSxcbiAgICBuZWVkc0hvdmVyOiBmYWxzZSxcbiAgICB1c2VMYWJlbDogZmFsc2UsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBkcmF3OiBhID0+IGRyYXdJbWFnZShhLCBhLmNlbGwuZGlzcGxheURhdGEgPz8gYS5jZWxsLmRhdGEsIGEuY2VsbC5yb3VuZGluZyA/PyBhLnRoZW1lLnJvdW5kaW5nUmFkaXVzID8/IDQsIGEuY2VsbC5jb250ZW50QWxpZ24pLFxuICAgIG1lYXN1cmU6IChfY3R4LCBjZWxsKSA9PiBjZWxsLmRhdGEubGVuZ3RoICogNTAsXG4gICAgb25EZWxldGU6IGMgPT4gKHtcbiAgICAgICAgLi4uYyxcbiAgICAgICAgZGF0YTogW10sXG4gICAgfSksXG4gICAgcHJvdmlkZUVkaXRvcjogKCkgPT4gcCA9PiB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUsIG9uRmluaXNoZWRFZGl0aW5nLCBpbWFnZUVkaXRvck92ZXJyaWRlIH0gPSBwO1xuICAgICAgICBjb25zdCBJbWFnZUVkaXRvciA9IGltYWdlRWRpdG9yT3ZlcnJpZGUgPz8gSW1hZ2VPdmVybGF5RWRpdG9yO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW1hZ2VFZGl0b3IsIHsgdXJsczogdmFsdWUuZGF0YSwgY2FuV3JpdGU6IHZhbHVlLnJlYWRvbmx5ICE9PSBmYWxzZSwgb25DYW5jZWw6IG9uRmluaXNoZWRFZGl0aW5nLCBvbkNoYW5nZTogbmV3SW1hZ2UgPT4ge1xuICAgICAgICAgICAgICAgIG9uRmluaXNoZWRFZGl0aW5nKHtcbiAgICAgICAgICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IFtuZXdJbWFnZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IH0pKTtcbiAgICB9LFxuICAgIG9uUGFzdGU6ICh0b1Bhc3RlLCBjZWxsKSA9PiB7XG4gICAgICAgIHRvUGFzdGUgPSB0b1Bhc3RlLnRyaW0oKTtcbiAgICAgICAgY29uc3QgZnJhZ21lbnRzID0gdG9QYXN0ZS5zcGxpdChcIixcIik7XG4gICAgICAgIGNvbnN0IHVyaXMgPSBmcmFnbWVudHNcbiAgICAgICAgICAgIC5tYXAoZiA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIG5ldyBVUkwoZik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGY7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5maWx0ZXIoeCA9PiB4ICE9PSB1bmRlZmluZWQpO1xuICAgICAgICBpZiAodXJpcy5sZW5ndGggPT09IGNlbGwuZGF0YS5sZW5ndGggJiYgdXJpcy5ldmVyeSgodSwgaSkgPT4gdSA9PT0gY2VsbC5kYXRhW2ldKSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5jZWxsLFxuICAgICAgICAgICAgZGF0YTogdXJpcyxcbiAgICAgICAgfTtcbiAgICB9LFxufTtcbmNvbnN0IGl0ZW1NYXJnaW4gPSA0O1xuZXhwb3J0IGZ1bmN0aW9uIGRyYXdJbWFnZShhcmdzLCBkYXRhLCByb3VuZGluZywgY29udGVudEFsaWduKSB7XG4gICAgY29uc3QgeyByZWN0LCBjb2wsIHJvdywgdGhlbWUsIGN0eCwgaW1hZ2VMb2FkZXIgfSA9IGFyZ3M7XG4gICAgY29uc3QgeyB4LCB5LCBoZWlnaHQ6IGgsIHdpZHRoOiB3IH0gPSByZWN0O1xuICAgIGNvbnN0IGltZ0hlaWdodCA9IGggLSB0aGVtZS5jZWxsVmVydGljYWxQYWRkaW5nICogMjtcbiAgICBjb25zdCBpbWFnZXMgPSBbXTtcbiAgICBsZXQgdG90YWxXaWR0aCA9IDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tZm9yLWxvb3BcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZGF0YS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgY29uc3QgaSA9IGRhdGFbaW5kZXhdO1xuICAgICAgICBpZiAoaS5sZW5ndGggPT09IDApXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgY29uc3QgaW1nID0gaW1hZ2VMb2FkZXIubG9hZE9yR2V0SW1hZ2UoaSwgY29sLCByb3cpO1xuICAgICAgICBpZiAoaW1nICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGltYWdlc1tpbmRleF0gPSBpbWc7XG4gICAgICAgICAgICBjb25zdCBpbWdXaWR0aCA9IGltZy53aWR0aCAqIChpbWdIZWlnaHQgLyBpbWcuaGVpZ2h0KTtcbiAgICAgICAgICAgIHRvdGFsV2lkdGggKz0gaW1nV2lkdGggKyBpdGVtTWFyZ2luO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh0b3RhbFdpZHRoID09PSAwKVxuICAgICAgICByZXR1cm47XG4gICAgdG90YWxXaWR0aCAtPSBpdGVtTWFyZ2luO1xuICAgIGxldCBkcmF3WCA9IHggKyB0aGVtZS5jZWxsSG9yaXpvbnRhbFBhZGRpbmc7XG4gICAgaWYgKGNvbnRlbnRBbGlnbiA9PT0gXCJyaWdodFwiKVxuICAgICAgICBkcmF3WCA9IE1hdGguZmxvb3IoeCArIHcgLSB0aGVtZS5jZWxsSG9yaXpvbnRhbFBhZGRpbmcgLSB0b3RhbFdpZHRoKTtcbiAgICBlbHNlIGlmIChjb250ZW50QWxpZ24gPT09IFwiY2VudGVyXCIpXG4gICAgICAgIGRyYXdYID0gTWF0aC5mbG9vcih4ICsgdyAvIDIgLSB0b3RhbFdpZHRoIC8gMik7XG4gICAgZm9yIChjb25zdCBpbWcgb2YgaW1hZ2VzKSB7XG4gICAgICAgIGlmIChpbWcgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIGNvbnRpbnVlOyAvL2FycmF5IGlzIHNwYXJzZVxuICAgICAgICBjb25zdCBpbWdXaWR0aCA9IGltZy53aWR0aCAqIChpbWdIZWlnaHQgLyBpbWcuaGVpZ2h0KTtcbiAgICAgICAgaWYgKHJvdW5kaW5nID4gMCkge1xuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgcm91bmRlZFJlY3QoY3R4LCBkcmF3WCwgeSArIHRoZW1lLmNlbGxWZXJ0aWNhbFBhZGRpbmcsIGltZ1dpZHRoLCBpbWdIZWlnaHQsIHJvdW5kaW5nKTtcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgICAgICBjdHguY2xpcCgpO1xuICAgICAgICB9XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCBkcmF3WCwgeSArIHRoZW1lLmNlbGxWZXJ0aWNhbFBhZGRpbmcsIGltZ1dpZHRoLCBpbWdIZWlnaHQpO1xuICAgICAgICBpZiAocm91bmRpbmcgPiAwKSB7XG4gICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgICAgIGRyYXdYICs9IGltZ1dpZHRoICsgaXRlbU1hcmdpbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZS1jZWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/image-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AllCellRenderers: () => (/* binding */ AllCellRenderers)\n/* harmony export */ });\n/* harmony import */ var _boolean_cell_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boolean-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/boolean-cell.js\");\n/* harmony import */ var _bubble_cell_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bubble-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/bubble-cell.js\");\n/* harmony import */ var _drilldown_cell_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drilldown-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/drilldown-cell.js\");\n/* harmony import */ var _image_cell_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./image-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/image-cell.js\");\n/* harmony import */ var _loading_cell_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loading-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/loading-cell.js\");\n/* harmony import */ var _markdown_cell_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./markdown-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/markdown-cell.js\");\n/* harmony import */ var _marker_cell_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marker-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/marker-cell.js\");\n/* harmony import */ var _new_row_cell_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./new-row-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/new-row-cell.js\");\n/* harmony import */ var _number_cell_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./number-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/number-cell.js\");\n/* harmony import */ var _protected_cell_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./protected-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/protected-cell.js\");\n/* harmony import */ var _row_id_cell_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./row-id-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/row-id-cell.js\");\n/* harmony import */ var _text_cell_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./text-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/text-cell.js\");\n/* harmony import */ var _uri_cell_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uri-cell.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/uri-cell.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst AllCellRenderers = [\n    _marker_cell_js__WEBPACK_IMPORTED_MODULE_0__.markerCellRenderer,\n    _new_row_cell_js__WEBPACK_IMPORTED_MODULE_1__.newRowCellRenderer,\n    _boolean_cell_js__WEBPACK_IMPORTED_MODULE_2__.booleanCellRenderer,\n    _bubble_cell_js__WEBPACK_IMPORTED_MODULE_3__.bubbleCellRenderer,\n    _drilldown_cell_js__WEBPACK_IMPORTED_MODULE_4__.drilldownCellRenderer,\n    _image_cell_js__WEBPACK_IMPORTED_MODULE_5__.imageCellRenderer,\n    _loading_cell_js__WEBPACK_IMPORTED_MODULE_6__.loadingCellRenderer,\n    _markdown_cell_js__WEBPACK_IMPORTED_MODULE_7__.markdownCellRenderer,\n    _number_cell_js__WEBPACK_IMPORTED_MODULE_8__.numberCellRenderer,\n    _protected_cell_js__WEBPACK_IMPORTED_MODULE_9__.protectedCellRenderer,\n    _row_id_cell_js__WEBPACK_IMPORTED_MODULE_10__.rowIDCellRenderer,\n    _text_cell_js__WEBPACK_IMPORTED_MODULE_11__.textCellRenderer,\n    _uri_cell_js__WEBPACK_IMPORTED_MODULE_12__.uriCellRenderer,\n];\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEQ7QUFDRjtBQUNGO0FBQ007QUFDUjtBQUNJO0FBQ0U7QUFDSjtBQUNDO0FBQ0Q7QUFDTTtBQUNQO0FBQ0g7QUFDRjtBQUN6QztBQUNQLElBQUksK0RBQWtCO0FBQ3RCLElBQUksZ0VBQWtCO0FBQ3RCLElBQUksaUVBQW1CO0FBQ3ZCLElBQUksK0RBQWtCO0FBQ3RCLElBQUkscUVBQXFCO0FBQ3pCLElBQUksNkRBQWlCO0FBQ3JCLElBQUksaUVBQW1CO0FBQ3ZCLElBQUksbUVBQW9CO0FBQ3hCLElBQUksK0RBQWtCO0FBQ3RCLElBQUkscUVBQXFCO0FBQ3pCLElBQUksK0RBQWlCO0FBQ3JCLElBQUksNERBQWdCO0FBQ3BCLElBQUksMERBQWU7QUFDbkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL2luZGV4LmpzPzhhM2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5pbXBvcnQgeyBib29sZWFuQ2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vYm9vbGVhbi1jZWxsLmpzXCI7XG5pbXBvcnQgeyBidWJibGVDZWxsUmVuZGVyZXIgfSBmcm9tIFwiLi9idWJibGUtY2VsbC5qc1wiO1xuaW1wb3J0IHsgZHJpbGxkb3duQ2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vZHJpbGxkb3duLWNlbGwuanNcIjtcbmltcG9ydCB7IGltYWdlQ2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vaW1hZ2UtY2VsbC5qc1wiO1xuaW1wb3J0IHsgbG9hZGluZ0NlbGxSZW5kZXJlciB9IGZyb20gXCIuL2xvYWRpbmctY2VsbC5qc1wiO1xuaW1wb3J0IHsgbWFya2Rvd25DZWxsUmVuZGVyZXIgfSBmcm9tIFwiLi9tYXJrZG93bi1jZWxsLmpzXCI7XG5pbXBvcnQgeyBtYXJrZXJDZWxsUmVuZGVyZXIgfSBmcm9tIFwiLi9tYXJrZXItY2VsbC5qc1wiO1xuaW1wb3J0IHsgbmV3Um93Q2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vbmV3LXJvdy1jZWxsLmpzXCI7XG5pbXBvcnQgeyBudW1iZXJDZWxsUmVuZGVyZXIgfSBmcm9tIFwiLi9udW1iZXItY2VsbC5qc1wiO1xuaW1wb3J0IHsgcHJvdGVjdGVkQ2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vcHJvdGVjdGVkLWNlbGwuanNcIjtcbmltcG9ydCB7IHJvd0lEQ2VsbFJlbmRlcmVyIH0gZnJvbSBcIi4vcm93LWlkLWNlbGwuanNcIjtcbmltcG9ydCB7IHRleHRDZWxsUmVuZGVyZXIgfSBmcm9tIFwiLi90ZXh0LWNlbGwuanNcIjtcbmltcG9ydCB7IHVyaUNlbGxSZW5kZXJlciB9IGZyb20gXCIuL3VyaS1jZWxsLmpzXCI7XG5leHBvcnQgY29uc3QgQWxsQ2VsbFJlbmRlcmVycyA9IFtcbiAgICBtYXJrZXJDZWxsUmVuZGVyZXIsXG4gICAgbmV3Um93Q2VsbFJlbmRlcmVyLFxuICAgIGJvb2xlYW5DZWxsUmVuZGVyZXIsXG4gICAgYnViYmxlQ2VsbFJlbmRlcmVyLFxuICAgIGRyaWxsZG93bkNlbGxSZW5kZXJlcixcbiAgICBpbWFnZUNlbGxSZW5kZXJlcixcbiAgICBsb2FkaW5nQ2VsbFJlbmRlcmVyLFxuICAgIG1hcmtkb3duQ2VsbFJlbmRlcmVyLFxuICAgIG51bWJlckNlbGxSZW5kZXJlcixcbiAgICBwcm90ZWN0ZWRDZWxsUmVuZGVyZXIsXG4gICAgcm93SURDZWxsUmVuZGVyZXIsXG4gICAgdGV4dENlbGxSZW5kZXJlcixcbiAgICB1cmlDZWxsUmVuZGVyZXIsXG5dO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/loading-cell.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/loading-cell.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadingCellRenderer: () => (/* binding */ loadingCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\n\n// returns a \"random\" number between -1 and 1\nfunction getRandomNumber(x, y) {\n    let seed = x * 49632 + y * 325176;\n    // Inline Xorshift algorithm\n    seed ^= seed << 13;\n    seed ^= seed >> 17;\n    seed ^= seed << 5;\n    // eslint-disable-next-line unicorn/number-literal-case\n    return (seed / 4294967295) * 2;\n}\nconst loadingCellRenderer = {\n    getAccessibilityString: () => \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Loading,\n    needsHover: false,\n    useLabel: false,\n    needsHoverPosition: false,\n    measure: () => 120,\n    draw: a => {\n        const { cell, col, row, ctx, rect, theme } = a;\n        if (cell.skeletonWidth === undefined || cell.skeletonWidth === 0) {\n            return;\n        }\n        let width = cell.skeletonWidth;\n        if (cell.skeletonWidthVariability !== undefined && cell.skeletonWidthVariability > 0) {\n            width += Math.round(getRandomNumber(col, row) * cell.skeletonWidthVariability);\n        }\n        const hpad = theme.cellHorizontalPadding;\n        const rectHeight = cell.skeletonHeight ?? Math.min(18, rect.height - 2 * theme.cellVerticalPadding);\n        (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.roundedRect)(ctx, rect.x + hpad, rect.y + (rect.height - rectHeight) / 2, width, rectHeight, theme.roundingRadius ?? 3);\n        ctx.fillStyle = (0,_internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_2__.withAlpha)(theme.textDark, 0.1);\n        ctx.fill();\n    },\n    onPaste: () => undefined,\n};\n//# sourceMappingURL=loading-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbG9hZGluZy1jZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0U7QUFDVTtBQUNKO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFVBQVUsZ0ZBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQ0FBbUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3RkFBVztBQUNuQix3QkFBd0IsOEVBQVM7QUFDakM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbG9hZGluZy1jZWxsLmpzPzY0NjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2l0aEFscGhhIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9jb2xvci1wYXJzZXIuanNcIjtcbmltcG9ydCB7IHJvdW5kZWRSZWN0IH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9yZW5kZXIvZGF0YS1ncmlkLWxpYi5qc1wiO1xuaW1wb3J0IHsgR3JpZENlbGxLaW5kIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbi8vIHJldHVybnMgYSBcInJhbmRvbVwiIG51bWJlciBiZXR3ZWVuIC0xIGFuZCAxXG5mdW5jdGlvbiBnZXRSYW5kb21OdW1iZXIoeCwgeSkge1xuICAgIGxldCBzZWVkID0geCAqIDQ5NjMyICsgeSAqIDMyNTE3NjtcbiAgICAvLyBJbmxpbmUgWG9yc2hpZnQgYWxnb3JpdGhtXG4gICAgc2VlZCBePSBzZWVkIDw8IDEzO1xuICAgIHNlZWQgXj0gc2VlZCA+PiAxNztcbiAgICBzZWVkIF49IHNlZWQgPDwgNTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9udW1iZXItbGl0ZXJhbC1jYXNlXG4gICAgcmV0dXJuIChzZWVkIC8gNDI5NDk2NzI5NSkgKiAyO1xufVxuZXhwb3J0IGNvbnN0IGxvYWRpbmdDZWxsUmVuZGVyZXIgPSB7XG4gICAgZ2V0QWNjZXNzaWJpbGl0eVN0cmluZzogKCkgPT4gXCJcIixcbiAgICBraW5kOiBHcmlkQ2VsbEtpbmQuTG9hZGluZyxcbiAgICBuZWVkc0hvdmVyOiBmYWxzZSxcbiAgICB1c2VMYWJlbDogZmFsc2UsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBtZWFzdXJlOiAoKSA9PiAxMjAsXG4gICAgZHJhdzogYSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY2VsbCwgY29sLCByb3csIGN0eCwgcmVjdCwgdGhlbWUgfSA9IGE7XG4gICAgICAgIGlmIChjZWxsLnNrZWxldG9uV2lkdGggPT09IHVuZGVmaW5lZCB8fCBjZWxsLnNrZWxldG9uV2lkdGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgd2lkdGggPSBjZWxsLnNrZWxldG9uV2lkdGg7XG4gICAgICAgIGlmIChjZWxsLnNrZWxldG9uV2lkdGhWYXJpYWJpbGl0eSAhPT0gdW5kZWZpbmVkICYmIGNlbGwuc2tlbGV0b25XaWR0aFZhcmlhYmlsaXR5ID4gMCkge1xuICAgICAgICAgICAgd2lkdGggKz0gTWF0aC5yb3VuZChnZXRSYW5kb21OdW1iZXIoY29sLCByb3cpICogY2VsbC5za2VsZXRvbldpZHRoVmFyaWFiaWxpdHkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhwYWQgPSB0aGVtZS5jZWxsSG9yaXpvbnRhbFBhZGRpbmc7XG4gICAgICAgIGNvbnN0IHJlY3RIZWlnaHQgPSBjZWxsLnNrZWxldG9uSGVpZ2h0ID8/IE1hdGgubWluKDE4LCByZWN0LmhlaWdodCAtIDIgKiB0aGVtZS5jZWxsVmVydGljYWxQYWRkaW5nKTtcbiAgICAgICAgcm91bmRlZFJlY3QoY3R4LCByZWN0LnggKyBocGFkLCByZWN0LnkgKyAocmVjdC5oZWlnaHQgLSByZWN0SGVpZ2h0KSAvIDIsIHdpZHRoLCByZWN0SGVpZ2h0LCB0aGVtZS5yb3VuZGluZ1JhZGl1cyA/PyAzKTtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHdpdGhBbHBoYSh0aGVtZS50ZXh0RGFyaywgMC4xKTtcbiAgICAgICAgY3R4LmZpbGwoKTtcbiAgICB9LFxuICAgIG9uUGFzdGU6ICgpID0+IHVuZGVmaW5lZCxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkaW5nLWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/loading-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/markdown-cell.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/markdown-cell.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   markdownCellRenderer: () => (/* binding */ markdownCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_overlay_editor_private_markdown_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid-overlay-editor/private/markdown-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* eslint-disable react/display-name */\n\n\n\n\nconst markdownCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Markdown,\n    needsHover: false,\n    needsHoverPosition: false,\n    drawPrep: _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.prepTextCell,\n    measure: (ctx, cell, t) => {\n        const firstLine = cell.data.split(\"\\n\")[0];\n        return ctx.measureText(firstLine).width + 2 * t.cellHorizontalPadding;\n    },\n    draw: a => (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)(a, a.cell.data, a.cell.contentAlign),\n    onDelete: c => ({\n        ...c,\n        data: \"\",\n    }),\n    provideEditor: () => p => {\n        const { onChange, value, target, onFinishedEditing, markdownDivCreateNode, forceEditMode, validatedSelection } = p;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_grid_overlay_editor_private_markdown_overlay_editor_js__WEBPACK_IMPORTED_MODULE_3__.MarkdownOverlayEditor, { onFinish: onFinishedEditing, targetRect: target, value: value, validatedSelection: validatedSelection, onChange: e => onChange({\n                ...value,\n                data: e.target.value,\n            }), forceEditMode: forceEditMode, createNode: markdownDivCreateNode }));\n    },\n    onPaste: (toPaste, cell) => (toPaste === cell.data ? undefined : { ...cell, data: toPaste }),\n};\n//# sourceMappingURL=markdown-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbWFya2Rvd24tY2VsbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQytCO0FBQ2lGO0FBQ3JCO0FBQ25CO0FBQ2pFO0FBQ1A7QUFDQSxVQUFVLGdGQUFZO0FBQ3RCO0FBQ0E7QUFDQSxjQUFjLHFGQUFZO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLHlGQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQix1R0FBdUc7QUFDdkgsZ0JBQWdCLGdEQUFtQixDQUFDLHdIQUFxQixJQUFJO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLG9FQUFvRTtBQUNqRixLQUFLO0FBQ0wsdUVBQXVFLHdCQUF3QjtBQUMvRjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbWFya2Rvd24tY2VsbC5qcz9hZmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2Rpc3BsYXktbmFtZSAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBNYXJrZG93bk92ZXJsYXlFZGl0b3IgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbWFya2Rvd24tb3ZlcmxheS1lZGl0b3IuanNcIjtcbmltcG9ydCB7IGRyYXdUZXh0Q2VsbCwgcHJlcFRleHRDZWxsIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9yZW5kZXIvZGF0YS1ncmlkLWxpYi5qc1wiO1xuaW1wb3J0IHsgR3JpZENlbGxLaW5kIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbmV4cG9ydCBjb25zdCBtYXJrZG93bkNlbGxSZW5kZXJlciA9IHtcbiAgICBnZXRBY2Nlc3NpYmlsaXR5U3RyaW5nOiBjID0+IGMuZGF0YT8udG9TdHJpbmcoKSA/PyBcIlwiLFxuICAgIGtpbmQ6IEdyaWRDZWxsS2luZC5NYXJrZG93bixcbiAgICBuZWVkc0hvdmVyOiBmYWxzZSxcbiAgICBuZWVkc0hvdmVyUG9zaXRpb246IGZhbHNlLFxuICAgIGRyYXdQcmVwOiBwcmVwVGV4dENlbGwsXG4gICAgbWVhc3VyZTogKGN0eCwgY2VsbCwgdCkgPT4ge1xuICAgICAgICBjb25zdCBmaXJzdExpbmUgPSBjZWxsLmRhdGEuc3BsaXQoXCJcXG5cIilbMF07XG4gICAgICAgIHJldHVybiBjdHgubWVhc3VyZVRleHQoZmlyc3RMaW5lKS53aWR0aCArIDIgKiB0LmNlbGxIb3Jpem9udGFsUGFkZGluZztcbiAgICB9LFxuICAgIGRyYXc6IGEgPT4gZHJhd1RleHRDZWxsKGEsIGEuY2VsbC5kYXRhLCBhLmNlbGwuY29udGVudEFsaWduKSxcbiAgICBvbkRlbGV0ZTogYyA9PiAoe1xuICAgICAgICAuLi5jLFxuICAgICAgICBkYXRhOiBcIlwiLFxuICAgIH0pLFxuICAgIHByb3ZpZGVFZGl0b3I6ICgpID0+IHAgPT4ge1xuICAgICAgICBjb25zdCB7IG9uQ2hhbmdlLCB2YWx1ZSwgdGFyZ2V0LCBvbkZpbmlzaGVkRWRpdGluZywgbWFya2Rvd25EaXZDcmVhdGVOb2RlLCBmb3JjZUVkaXRNb2RlLCB2YWxpZGF0ZWRTZWxlY3Rpb24gfSA9IHA7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChNYXJrZG93bk92ZXJsYXlFZGl0b3IsIHsgb25GaW5pc2g6IG9uRmluaXNoZWRFZGl0aW5nLCB0YXJnZXRSZWN0OiB0YXJnZXQsIHZhbHVlOiB2YWx1ZSwgdmFsaWRhdGVkU2VsZWN0aW9uOiB2YWxpZGF0ZWRTZWxlY3Rpb24sIG9uQ2hhbmdlOiBlID0+IG9uQ2hhbmdlKHtcbiAgICAgICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICAgICAgICBkYXRhOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgIH0pLCBmb3JjZUVkaXRNb2RlOiBmb3JjZUVkaXRNb2RlLCBjcmVhdGVOb2RlOiBtYXJrZG93bkRpdkNyZWF0ZU5vZGUgfSkpO1xuICAgIH0sXG4gICAgb25QYXN0ZTogKHRvUGFzdGUsIGNlbGwpID0+ICh0b1Bhc3RlID09PSBjZWxsLmRhdGEgPyB1bmRlZmluZWQgOiB7IC4uLmNlbGwsIGRhdGE6IHRvUGFzdGUgfSksXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFya2Rvd24tY2VsbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/markdown-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/marker-cell.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/marker-cell.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   markerCellRenderer: () => (/* binding */ markerCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _internal_data_grid_render_draw_checkbox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/render/draw-checkbox.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js\");\n\n\n\nconst markerCellRenderer = {\n    getAccessibilityString: c => c.row.toString(),\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.InnerGridCellKind.Marker,\n    needsHover: true,\n    needsHoverPosition: false,\n    drawPrep: prepMarkerRowCell,\n    measure: () => 44,\n    draw: a => drawMarkerRowCell(a, a.cell.row, a.cell.checked, a.cell.markerKind, a.cell.drawHandle, a.cell.checkboxStyle),\n    onClick: e => {\n        const { bounds, cell, posX: x, posY: y } = e;\n        const { width, height } = bounds;\n        const centerX = cell.drawHandle ? 7 + (width - 7) / 2 : width / 2;\n        const centerY = height / 2;\n        if (Math.abs(x - centerX) <= 10 && Math.abs(y - centerY) <= 10) {\n            return {\n                ...cell,\n                checked: !cell.checked,\n            };\n        }\n        return undefined;\n    },\n    onPaste: () => undefined,\n};\nfunction prepMarkerRowCell(args, lastPrep) {\n    const { ctx, theme } = args;\n    const newFont = theme.markerFontFull;\n    const result = lastPrep ?? {};\n    if (result?.font !== newFont) {\n        ctx.font = newFont;\n        result.font = newFont;\n    }\n    result.deprep = deprepMarkerRowCell;\n    ctx.textAlign = \"center\";\n    return result;\n}\nfunction deprepMarkerRowCell(args) {\n    const { ctx } = args;\n    ctx.textAlign = \"start\";\n}\nfunction drawMarkerRowCell(args, index, checked, markerKind, drawHandle, style) {\n    const { ctx, rect, hoverAmount, theme } = args;\n    const { x, y, width, height } = rect;\n    const checkedboxAlpha = checked ? 1 : markerKind === \"checkbox-visible\" ? 0.6 + 0.4 * hoverAmount : hoverAmount;\n    if (markerKind !== \"number\" && checkedboxAlpha > 0) {\n        ctx.globalAlpha = checkedboxAlpha;\n        const offsetAmount = 7 * (checked ? hoverAmount : 1);\n        (0,_internal_data_grid_render_draw_checkbox_js__WEBPACK_IMPORTED_MODULE_1__.drawCheckbox)(ctx, theme, checked, drawHandle ? x + offsetAmount : x, y, drawHandle ? width - offsetAmount : width, height, true, undefined, undefined, 18, \"center\", style);\n        if (drawHandle) {\n            ctx.globalAlpha = hoverAmount;\n            ctx.beginPath();\n            for (const xOffset of [3, 6]) {\n                for (const yOffset of [-5, -1, 3]) {\n                    ctx.rect(x + xOffset, y + height / 2 + yOffset, 2, 2);\n                }\n            }\n            ctx.fillStyle = theme.textLight;\n            ctx.fill();\n            ctx.beginPath();\n        }\n        ctx.globalAlpha = 1;\n    }\n    if (markerKind === \"number\" || (markerKind === \"both\" && !checked)) {\n        const text = index.toString();\n        const fontStyle = theme.markerFontFull;\n        const start = x + width / 2;\n        if (markerKind === \"both\" && hoverAmount !== 0) {\n            ctx.globalAlpha = 1 - hoverAmount;\n        }\n        ctx.fillStyle = theme.textLight;\n        ctx.font = fontStyle;\n        ctx.fillText(text, start, y + height / 2 + (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getMiddleCenterBias)(ctx, fontStyle));\n        if (hoverAmount !== 0) {\n            ctx.globalAlpha = 1;\n        }\n    }\n}\n//# sourceMappingURL=marker-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbWFya2VyLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRjtBQUNQO0FBQ0E7QUFDdEU7QUFDUDtBQUNBLFVBQVUscUZBQWlCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQ0FBaUM7QUFDakQsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQ0FBZ0M7QUFDNUMsWUFBWSxzQkFBc0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlGQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsZ0dBQW1CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL21hcmtlci1jZWxsLmpzPzgwOTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TWlkZGxlQ2VudGVyQmlhcyB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RhdGEtZ3JpZC1saWIuanNcIjtcbmltcG9ydCB7IElubmVyR3JpZENlbGxLaW5kIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbmltcG9ydCB7IGRyYXdDaGVja2JveCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RyYXctY2hlY2tib3guanNcIjtcbmV4cG9ydCBjb25zdCBtYXJrZXJDZWxsUmVuZGVyZXIgPSB7XG4gICAgZ2V0QWNjZXNzaWJpbGl0eVN0cmluZzogYyA9PiBjLnJvdy50b1N0cmluZygpLFxuICAgIGtpbmQ6IElubmVyR3JpZENlbGxLaW5kLk1hcmtlcixcbiAgICBuZWVkc0hvdmVyOiB0cnVlLFxuICAgIG5lZWRzSG92ZXJQb3NpdGlvbjogZmFsc2UsXG4gICAgZHJhd1ByZXA6IHByZXBNYXJrZXJSb3dDZWxsLFxuICAgIG1lYXN1cmU6ICgpID0+IDQ0LFxuICAgIGRyYXc6IGEgPT4gZHJhd01hcmtlclJvd0NlbGwoYSwgYS5jZWxsLnJvdywgYS5jZWxsLmNoZWNrZWQsIGEuY2VsbC5tYXJrZXJLaW5kLCBhLmNlbGwuZHJhd0hhbmRsZSwgYS5jZWxsLmNoZWNrYm94U3R5bGUpLFxuICAgIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICBjb25zdCB7IGJvdW5kcywgY2VsbCwgcG9zWDogeCwgcG9zWTogeSB9ID0gZTtcbiAgICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBib3VuZHM7XG4gICAgICAgIGNvbnN0IGNlbnRlclggPSBjZWxsLmRyYXdIYW5kbGUgPyA3ICsgKHdpZHRoIC0gNykgLyAyIDogd2lkdGggLyAyO1xuICAgICAgICBjb25zdCBjZW50ZXJZID0gaGVpZ2h0IC8gMjtcbiAgICAgICAgaWYgKE1hdGguYWJzKHggLSBjZW50ZXJYKSA8PSAxMCAmJiBNYXRoLmFicyh5IC0gY2VudGVyWSkgPD0gMTApIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uY2VsbCxcbiAgICAgICAgICAgICAgICBjaGVja2VkOiAhY2VsbC5jaGVja2VkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gICAgb25QYXN0ZTogKCkgPT4gdW5kZWZpbmVkLFxufTtcbmZ1bmN0aW9uIHByZXBNYXJrZXJSb3dDZWxsKGFyZ3MsIGxhc3RQcmVwKSB7XG4gICAgY29uc3QgeyBjdHgsIHRoZW1lIH0gPSBhcmdzO1xuICAgIGNvbnN0IG5ld0ZvbnQgPSB0aGVtZS5tYXJrZXJGb250RnVsbDtcbiAgICBjb25zdCByZXN1bHQgPSBsYXN0UHJlcCA/PyB7fTtcbiAgICBpZiAocmVzdWx0Py5mb250ICE9PSBuZXdGb250KSB7XG4gICAgICAgIGN0eC5mb250ID0gbmV3Rm9udDtcbiAgICAgICAgcmVzdWx0LmZvbnQgPSBuZXdGb250O1xuICAgIH1cbiAgICByZXN1bHQuZGVwcmVwID0gZGVwcmVwTWFya2VyUm93Q2VsbDtcbiAgICBjdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZGVwcmVwTWFya2VyUm93Q2VsbChhcmdzKSB7XG4gICAgY29uc3QgeyBjdHggfSA9IGFyZ3M7XG4gICAgY3R4LnRleHRBbGlnbiA9IFwic3RhcnRcIjtcbn1cbmZ1bmN0aW9uIGRyYXdNYXJrZXJSb3dDZWxsKGFyZ3MsIGluZGV4LCBjaGVja2VkLCBtYXJrZXJLaW5kLCBkcmF3SGFuZGxlLCBzdHlsZSkge1xuICAgIGNvbnN0IHsgY3R4LCByZWN0LCBob3ZlckFtb3VudCwgdGhlbWUgfSA9IGFyZ3M7XG4gICAgY29uc3QgeyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH0gPSByZWN0O1xuICAgIGNvbnN0IGNoZWNrZWRib3hBbHBoYSA9IGNoZWNrZWQgPyAxIDogbWFya2VyS2luZCA9PT0gXCJjaGVja2JveC12aXNpYmxlXCIgPyAwLjYgKyAwLjQgKiBob3ZlckFtb3VudCA6IGhvdmVyQW1vdW50O1xuICAgIGlmIChtYXJrZXJLaW5kICE9PSBcIm51bWJlclwiICYmIGNoZWNrZWRib3hBbHBoYSA+IDApIHtcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gY2hlY2tlZGJveEFscGhhO1xuICAgICAgICBjb25zdCBvZmZzZXRBbW91bnQgPSA3ICogKGNoZWNrZWQgPyBob3ZlckFtb3VudCA6IDEpO1xuICAgICAgICBkcmF3Q2hlY2tib3goY3R4LCB0aGVtZSwgY2hlY2tlZCwgZHJhd0hhbmRsZSA/IHggKyBvZmZzZXRBbW91bnQgOiB4LCB5LCBkcmF3SGFuZGxlID8gd2lkdGggLSBvZmZzZXRBbW91bnQgOiB3aWR0aCwgaGVpZ2h0LCB0cnVlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgMTgsIFwiY2VudGVyXCIsIHN0eWxlKTtcbiAgICAgICAgaWYgKGRyYXdIYW5kbGUpIHtcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IGhvdmVyQW1vdW50O1xuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgZm9yIChjb25zdCB4T2Zmc2V0IG9mIFszLCA2XSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgeU9mZnNldCBvZiBbLTUsIC0xLCAzXSkge1xuICAgICAgICAgICAgICAgICAgICBjdHgucmVjdCh4ICsgeE9mZnNldCwgeSArIGhlaWdodCAvIDIgKyB5T2Zmc2V0LCAyLCAyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhlbWUudGV4dExpZ2h0O1xuICAgICAgICAgICAgY3R4LmZpbGwoKTtcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgfVxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xuICAgIH1cbiAgICBpZiAobWFya2VyS2luZCA9PT0gXCJudW1iZXJcIiB8fCAobWFya2VyS2luZCA9PT0gXCJib3RoXCIgJiYgIWNoZWNrZWQpKSB7XG4gICAgICAgIGNvbnN0IHRleHQgPSBpbmRleC50b1N0cmluZygpO1xuICAgICAgICBjb25zdCBmb250U3R5bGUgPSB0aGVtZS5tYXJrZXJGb250RnVsbDtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSB4ICsgd2lkdGggLyAyO1xuICAgICAgICBpZiAobWFya2VyS2luZCA9PT0gXCJib3RoXCIgJiYgaG92ZXJBbW91bnQgIT09IDApIHtcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDEgLSBob3ZlckFtb3VudDtcbiAgICAgICAgfVxuICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhlbWUudGV4dExpZ2h0O1xuICAgICAgICBjdHguZm9udCA9IGZvbnRTdHlsZTtcbiAgICAgICAgY3R4LmZpbGxUZXh0KHRleHQsIHN0YXJ0LCB5ICsgaGVpZ2h0IC8gMiArIGdldE1pZGRsZUNlbnRlckJpYXMoY3R4LCBmb250U3R5bGUpKTtcbiAgICAgICAgaWYgKGhvdmVyQW1vdW50ICE9PSAwKSB7XG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFya2VyLWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/marker-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/new-row-cell.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/new-row-cell.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newRowCellRenderer: () => (/* binding */ newRowCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\nconst newRowCellRenderer = {\n    getAccessibilityString: () => \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.InnerGridCellKind.NewRow,\n    needsHover: true,\n    needsHoverPosition: false,\n    measure: () => 200,\n    draw: a => drawNewRowCell(a, a.cell.hint, a.cell.icon),\n    onPaste: () => undefined,\n};\nfunction drawNewRowCell(args, data, icon) {\n    const { ctx, rect, hoverAmount, theme, spriteManager } = args;\n    const { x, y, width: w, height: h } = rect;\n    ctx.beginPath();\n    ctx.globalAlpha = hoverAmount;\n    ctx.rect(x + 1, y + 1, w, h - 2);\n    ctx.fillStyle = theme.bgHeaderHovered;\n    ctx.fill();\n    ctx.globalAlpha = 1;\n    ctx.beginPath();\n    const alwaysShowIcon = data !== \"\";\n    let textX = 0;\n    if (icon !== undefined) {\n        const padding = 8;\n        const size = h - padding;\n        const px = x + padding / 2;\n        const py = y + padding / 2;\n        spriteManager.drawSprite(icon, \"normal\", ctx, px, py, size, theme, alwaysShowIcon ? 1 : hoverAmount);\n        textX = size;\n    }\n    else {\n        textX = 24;\n        const finalLineSize = 12;\n        const lineSize = alwaysShowIcon ? finalLineSize : hoverAmount * finalLineSize;\n        const xTranslate = alwaysShowIcon ? 0 : (1 - hoverAmount) * finalLineSize * 0.5;\n        const padPlus = theme.cellHorizontalPadding + 4;\n        if (lineSize > 0) {\n            ctx.moveTo(x + padPlus + xTranslate, y + h / 2);\n            ctx.lineTo(x + padPlus + xTranslate + lineSize, y + h / 2);\n            ctx.moveTo(x + padPlus + xTranslate + lineSize * 0.5, y + h / 2 - lineSize * 0.5);\n            ctx.lineTo(x + padPlus + xTranslate + lineSize * 0.5, y + h / 2 + lineSize * 0.5);\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = theme.bgIconHeader;\n            ctx.lineCap = \"round\";\n            ctx.stroke();\n        }\n    }\n    ctx.fillStyle = theme.textMedium;\n    ctx.fillText(data, textX + x + theme.cellHorizontalPadding + 0.5, y + h / 2 + (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.getMiddleCenterBias)(ctx, theme));\n    ctx.beginPath();\n}\n//# sourceMappingURL=new-row-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbmV3LXJvdy1jZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRjtBQUNQO0FBQ3RFO0FBQ1A7QUFDQSxVQUFVLHFGQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0NBQStDO0FBQzNELFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRkFBa0YsZ0dBQW1CO0FBQ3JHO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL25ldy1yb3ctY2VsbC5qcz82ZTc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE1pZGRsZUNlbnRlckJpYXMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL3JlbmRlci9kYXRhLWdyaWQtbGliLmpzXCI7XG5pbXBvcnQgeyBJbm5lckdyaWRDZWxsS2luZCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5leHBvcnQgY29uc3QgbmV3Um93Q2VsbFJlbmRlcmVyID0ge1xuICAgIGdldEFjY2Vzc2liaWxpdHlTdHJpbmc6ICgpID0+IFwiXCIsXG4gICAga2luZDogSW5uZXJHcmlkQ2VsbEtpbmQuTmV3Um93LFxuICAgIG5lZWRzSG92ZXI6IHRydWUsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBtZWFzdXJlOiAoKSA9PiAyMDAsXG4gICAgZHJhdzogYSA9PiBkcmF3TmV3Um93Q2VsbChhLCBhLmNlbGwuaGludCwgYS5jZWxsLmljb24pLFxuICAgIG9uUGFzdGU6ICgpID0+IHVuZGVmaW5lZCxcbn07XG5mdW5jdGlvbiBkcmF3TmV3Um93Q2VsbChhcmdzLCBkYXRhLCBpY29uKSB7XG4gICAgY29uc3QgeyBjdHgsIHJlY3QsIGhvdmVyQW1vdW50LCB0aGVtZSwgc3ByaXRlTWFuYWdlciB9ID0gYXJncztcbiAgICBjb25zdCB7IHgsIHksIHdpZHRoOiB3LCBoZWlnaHQ6IGggfSA9IHJlY3Q7XG4gICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgIGN0eC5nbG9iYWxBbHBoYSA9IGhvdmVyQW1vdW50O1xuICAgIGN0eC5yZWN0KHggKyAxLCB5ICsgMSwgdywgaCAtIDIpO1xuICAgIGN0eC5maWxsU3R5bGUgPSB0aGVtZS5iZ0hlYWRlckhvdmVyZWQ7XG4gICAgY3R4LmZpbGwoKTtcbiAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjb25zdCBhbHdheXNTaG93SWNvbiA9IGRhdGEgIT09IFwiXCI7XG4gICAgbGV0IHRleHRYID0gMDtcbiAgICBpZiAoaWNvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IHBhZGRpbmcgPSA4O1xuICAgICAgICBjb25zdCBzaXplID0gaCAtIHBhZGRpbmc7XG4gICAgICAgIGNvbnN0IHB4ID0geCArIHBhZGRpbmcgLyAyO1xuICAgICAgICBjb25zdCBweSA9IHkgKyBwYWRkaW5nIC8gMjtcbiAgICAgICAgc3ByaXRlTWFuYWdlci5kcmF3U3ByaXRlKGljb24sIFwibm9ybWFsXCIsIGN0eCwgcHgsIHB5LCBzaXplLCB0aGVtZSwgYWx3YXlzU2hvd0ljb24gPyAxIDogaG92ZXJBbW91bnQpO1xuICAgICAgICB0ZXh0WCA9IHNpemU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0ZXh0WCA9IDI0O1xuICAgICAgICBjb25zdCBmaW5hbExpbmVTaXplID0gMTI7XG4gICAgICAgIGNvbnN0IGxpbmVTaXplID0gYWx3YXlzU2hvd0ljb24gPyBmaW5hbExpbmVTaXplIDogaG92ZXJBbW91bnQgKiBmaW5hbExpbmVTaXplO1xuICAgICAgICBjb25zdCB4VHJhbnNsYXRlID0gYWx3YXlzU2hvd0ljb24gPyAwIDogKDEgLSBob3ZlckFtb3VudCkgKiBmaW5hbExpbmVTaXplICogMC41O1xuICAgICAgICBjb25zdCBwYWRQbHVzID0gdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nICsgNDtcbiAgICAgICAgaWYgKGxpbmVTaXplID4gMCkge1xuICAgICAgICAgICAgY3R4Lm1vdmVUbyh4ICsgcGFkUGx1cyArIHhUcmFuc2xhdGUsIHkgKyBoIC8gMik7XG4gICAgICAgICAgICBjdHgubGluZVRvKHggKyBwYWRQbHVzICsgeFRyYW5zbGF0ZSArIGxpbmVTaXplLCB5ICsgaCAvIDIpO1xuICAgICAgICAgICAgY3R4Lm1vdmVUbyh4ICsgcGFkUGx1cyArIHhUcmFuc2xhdGUgKyBsaW5lU2l6ZSAqIDAuNSwgeSArIGggLyAyIC0gbGluZVNpemUgKiAwLjUpO1xuICAgICAgICAgICAgY3R4LmxpbmVUbyh4ICsgcGFkUGx1cyArIHhUcmFuc2xhdGUgKyBsaW5lU2l6ZSAqIDAuNSwgeSArIGggLyAyICsgbGluZVNpemUgKiAwLjUpO1xuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDI7XG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGVtZS5iZ0ljb25IZWFkZXI7XG4gICAgICAgICAgICBjdHgubGluZUNhcCA9IFwicm91bmRcIjtcbiAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjdHguZmlsbFN0eWxlID0gdGhlbWUudGV4dE1lZGl1bTtcbiAgICBjdHguZmlsbFRleHQoZGF0YSwgdGV4dFggKyB4ICsgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nICsgMC41LCB5ICsgaCAvIDIgKyBnZXRNaWRkbGVDZW50ZXJCaWFzKGN0eCwgdGhlbWUpKTtcbiAgICBjdHguYmVnaW5QYXRoKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXctcm93LWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/new-row-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/number-cell.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/number-cell.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   numberCellRenderer: () => (/* binding */ numberCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* eslint-disable react/display-name */\n\n\n\nconst NumberOverlayEditor = react__WEBPACK_IMPORTED_MODULE_0__.lazy(async () => await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@glideapps\"), __webpack_require__.e(\"vendor-chunks/react-number-format\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../internal/data-grid-overlay-editor/private/number-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor.js\")));\nconst numberCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Number,\n    needsHover: false,\n    needsHoverPosition: false,\n    useLabel: true,\n    drawPrep: _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.prepTextCell,\n    draw: a => (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)(a, a.cell.displayData, a.cell.contentAlign),\n    measure: (ctx, cell, theme) => ctx.measureText(cell.displayData).width + theme.cellHorizontalPadding * 2,\n    onDelete: c => ({\n        ...c,\n        data: undefined,\n    }),\n    provideEditor: () => p => {\n        const { isHighlighted, onChange, value, validatedSelection } = p;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, { fallback: null },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(NumberOverlayEditor, { highlight: isHighlighted, disabled: value.readonly === true, value: value.data, fixedDecimals: value.fixedDecimals, allowNegative: value.allowNegative, thousandSeparator: value.thousandSeparator, decimalSeparator: value.decimalSeparator, validatedSelection: validatedSelection, onChange: x => onChange({\n                    ...value,\n                    data: Number.isNaN(x.floatValue ?? 0) ? 0 : x.floatValue,\n                }) })));\n    },\n    onPaste: (toPaste, cell, details) => {\n        const newNumber = typeof details.rawValue === \"number\"\n            ? details.rawValue\n            : Number.parseFloat(typeof details.rawValue === \"string\" ? details.rawValue : toPaste);\n        if (Number.isNaN(newNumber) || cell.data === newNumber)\n            return undefined;\n        return { ...cell, data: newNumber, displayData: details.formattedString ?? cell.displayData };\n    },\n};\n//# sourceMappingURL=number-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvbnVtYmVyLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQytCO0FBQzREO0FBQ25CO0FBQ3hFLDRCQUE0Qix1Q0FBVSxtQkFBbUIsMllBQStFO0FBQ2pJO0FBQ1A7QUFDQSxVQUFVLGdGQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUZBQVk7QUFDMUIsZUFBZSx5RkFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQixxREFBcUQ7QUFDckUsZ0JBQWdCLGdEQUFtQixDQUFDLDJDQUFjLElBQUksZ0JBQWdCO0FBQ3RFLFlBQVksZ0RBQW1CLHdCQUF3QjtBQUN2RDtBQUNBO0FBQ0EsaUJBQWlCLEdBQUc7QUFDcEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL251bWJlci1jZWxsLmpzP2FlMzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcmVhY3QvZGlzcGxheS1uYW1lICovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGRyYXdUZXh0Q2VsbCwgcHJlcFRleHRDZWxsIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9yZW5kZXIvZGF0YS1ncmlkLWxpYi5qc1wiO1xuaW1wb3J0IHsgR3JpZENlbGxLaW5kIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbmNvbnN0IE51bWJlck92ZXJsYXlFZGl0b3IgPSBSZWFjdC5sYXp5KGFzeW5jICgpID0+IGF3YWl0IGltcG9ydChcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL251bWJlci1vdmVybGF5LWVkaXRvci5qc1wiKSk7XG5leHBvcnQgY29uc3QgbnVtYmVyQ2VsbFJlbmRlcmVyID0ge1xuICAgIGdldEFjY2Vzc2liaWxpdHlTdHJpbmc6IGMgPT4gYy5kYXRhPy50b1N0cmluZygpID8/IFwiXCIsXG4gICAga2luZDogR3JpZENlbGxLaW5kLk51bWJlcixcbiAgICBuZWVkc0hvdmVyOiBmYWxzZSxcbiAgICBuZWVkc0hvdmVyUG9zaXRpb246IGZhbHNlLFxuICAgIHVzZUxhYmVsOiB0cnVlLFxuICAgIGRyYXdQcmVwOiBwcmVwVGV4dENlbGwsXG4gICAgZHJhdzogYSA9PiBkcmF3VGV4dENlbGwoYSwgYS5jZWxsLmRpc3BsYXlEYXRhLCBhLmNlbGwuY29udGVudEFsaWduKSxcbiAgICBtZWFzdXJlOiAoY3R4LCBjZWxsLCB0aGVtZSkgPT4gY3R4Lm1lYXN1cmVUZXh0KGNlbGwuZGlzcGxheURhdGEpLndpZHRoICsgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nICogMixcbiAgICBvbkRlbGV0ZTogYyA9PiAoe1xuICAgICAgICAuLi5jLFxuICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgfSksXG4gICAgcHJvdmlkZUVkaXRvcjogKCkgPT4gcCA9PiB7XG4gICAgICAgIGNvbnN0IHsgaXNIaWdobGlnaHRlZCwgb25DaGFuZ2UsIHZhbHVlLCB2YWxpZGF0ZWRTZWxlY3Rpb24gfSA9IHA7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5TdXNwZW5zZSwgeyBmYWxsYmFjazogbnVsbCB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChOdW1iZXJPdmVybGF5RWRpdG9yLCB7IGhpZ2hsaWdodDogaXNIaWdobGlnaHRlZCwgZGlzYWJsZWQ6IHZhbHVlLnJlYWRvbmx5ID09PSB0cnVlLCB2YWx1ZTogdmFsdWUuZGF0YSwgZml4ZWREZWNpbWFsczogdmFsdWUuZml4ZWREZWNpbWFscywgYWxsb3dOZWdhdGl2ZTogdmFsdWUuYWxsb3dOZWdhdGl2ZSwgdGhvdXNhbmRTZXBhcmF0b3I6IHZhbHVlLnRob3VzYW5kU2VwYXJhdG9yLCBkZWNpbWFsU2VwYXJhdG9yOiB2YWx1ZS5kZWNpbWFsU2VwYXJhdG9yLCB2YWxpZGF0ZWRTZWxlY3Rpb246IHZhbGlkYXRlZFNlbGVjdGlvbiwgb25DaGFuZ2U6IHggPT4gb25DaGFuZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogTnVtYmVyLmlzTmFOKHguZmxvYXRWYWx1ZSA/PyAwKSA/IDAgOiB4LmZsb2F0VmFsdWUsXG4gICAgICAgICAgICAgICAgfSkgfSkpKTtcbiAgICB9LFxuICAgIG9uUGFzdGU6ICh0b1Bhc3RlLCBjZWxsLCBkZXRhaWxzKSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld051bWJlciA9IHR5cGVvZiBkZXRhaWxzLnJhd1ZhbHVlID09PSBcIm51bWJlclwiXG4gICAgICAgICAgICA/IGRldGFpbHMucmF3VmFsdWVcbiAgICAgICAgICAgIDogTnVtYmVyLnBhcnNlRmxvYXQodHlwZW9mIGRldGFpbHMucmF3VmFsdWUgPT09IFwic3RyaW5nXCIgPyBkZXRhaWxzLnJhd1ZhbHVlIDogdG9QYXN0ZSk7XG4gICAgICAgIGlmIChOdW1iZXIuaXNOYU4obmV3TnVtYmVyKSB8fCBjZWxsLmRhdGEgPT09IG5ld051bWJlcilcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiB7IC4uLmNlbGwsIGRhdGE6IG5ld051bWJlciwgZGlzcGxheURhdGE6IGRldGFpbHMuZm9ybWF0dGVkU3RyaW5nID8/IGNlbGwuZGlzcGxheURhdGEgfTtcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW51bWJlci1jZWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/number-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/protected-cell.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/protected-cell.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protectedCellRenderer: () => (/* binding */ protectedCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\nconst protectedCellRenderer = {\n    getAccessibilityString: () => \"\",\n    measure: () => 108,\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Protected,\n    needsHover: false,\n    needsHoverPosition: false,\n    draw: drawProtectedCell,\n    onPaste: () => undefined,\n};\nfunction drawProtectedCell(args) {\n    const { ctx, theme, rect } = args;\n    const { x, y, height: h } = rect;\n    ctx.beginPath();\n    const radius = 2.5;\n    let xStart = x + theme.cellHorizontalPadding + radius;\n    const center = y + h / 2;\n    const p = Math.cos((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(30)) * radius;\n    const q = Math.sin((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.degreesToRadians)(30)) * radius;\n    for (let i = 0; i < 12; i++) {\n        ctx.moveTo(xStart, center - radius);\n        ctx.lineTo(xStart, center + radius);\n        ctx.moveTo(xStart + p, center - q);\n        ctx.lineTo(xStart - p, center + q);\n        ctx.moveTo(xStart - p, center - q);\n        ctx.lineTo(xStart + p, center + q);\n        xStart += 8;\n    }\n    ctx.lineWidth = 1.1;\n    ctx.lineCap = \"square\";\n    ctx.strokeStyle = theme.textLight;\n    ctx.stroke();\n}\n//# sourceMappingURL=protected-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvcHJvdGVjdGVkLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQ2tCO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBLFVBQVUsZ0ZBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0VBQWdCO0FBQ3ZDLHVCQUF1QixrRUFBZ0I7QUFDdkMsb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NlbGxzL3Byb3RlY3RlZC1jZWxsLmpzP2E4YTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVncmVlc1RvUmFkaWFucyB9IGZyb20gXCIuLi9jb21tb24vdXRpbHMuanNcIjtcbmltcG9ydCB7IEdyaWRDZWxsS2luZCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5leHBvcnQgY29uc3QgcHJvdGVjdGVkQ2VsbFJlbmRlcmVyID0ge1xuICAgIGdldEFjY2Vzc2liaWxpdHlTdHJpbmc6ICgpID0+IFwiXCIsXG4gICAgbWVhc3VyZTogKCkgPT4gMTA4LFxuICAgIGtpbmQ6IEdyaWRDZWxsS2luZC5Qcm90ZWN0ZWQsXG4gICAgbmVlZHNIb3ZlcjogZmFsc2UsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBkcmF3OiBkcmF3UHJvdGVjdGVkQ2VsbCxcbiAgICBvblBhc3RlOiAoKSA9PiB1bmRlZmluZWQsXG59O1xuZnVuY3Rpb24gZHJhd1Byb3RlY3RlZENlbGwoYXJncykge1xuICAgIGNvbnN0IHsgY3R4LCB0aGVtZSwgcmVjdCB9ID0gYXJncztcbiAgICBjb25zdCB7IHgsIHksIGhlaWdodDogaCB9ID0gcmVjdDtcbiAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgY29uc3QgcmFkaXVzID0gMi41O1xuICAgIGxldCB4U3RhcnQgPSB4ICsgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nICsgcmFkaXVzO1xuICAgIGNvbnN0IGNlbnRlciA9IHkgKyBoIC8gMjtcbiAgICBjb25zdCBwID0gTWF0aC5jb3MoZGVncmVlc1RvUmFkaWFucygzMCkpICogcmFkaXVzO1xuICAgIGNvbnN0IHEgPSBNYXRoLnNpbihkZWdyZWVzVG9SYWRpYW5zKDMwKSkgKiByYWRpdXM7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gICAgICAgIGN0eC5tb3ZlVG8oeFN0YXJ0LCBjZW50ZXIgLSByYWRpdXMpO1xuICAgICAgICBjdHgubGluZVRvKHhTdGFydCwgY2VudGVyICsgcmFkaXVzKTtcbiAgICAgICAgY3R4Lm1vdmVUbyh4U3RhcnQgKyBwLCBjZW50ZXIgLSBxKTtcbiAgICAgICAgY3R4LmxpbmVUbyh4U3RhcnQgLSBwLCBjZW50ZXIgKyBxKTtcbiAgICAgICAgY3R4Lm1vdmVUbyh4U3RhcnQgLSBwLCBjZW50ZXIgLSBxKTtcbiAgICAgICAgY3R4LmxpbmVUbyh4U3RhcnQgKyBwLCBjZW50ZXIgKyBxKTtcbiAgICAgICAgeFN0YXJ0ICs9IDg7XG4gICAgfVxuICAgIGN0eC5saW5lV2lkdGggPSAxLjE7XG4gICAgY3R4LmxpbmVDYXAgPSBcInNxdWFyZVwiO1xuICAgIGN0eC5zdHJva2VTdHlsZSA9IHRoZW1lLnRleHRMaWdodDtcbiAgICBjdHguc3Ryb2tlKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90ZWN0ZWQtY2VsbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/protected-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/row-id-cell.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/row-id-cell.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rowIDCellRenderer: () => (/* binding */ rowIDCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/growing-entry/growing-entry.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\n\n\nconst rowIDCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.RowID,\n    needsHover: false,\n    needsHoverPosition: false,\n    drawPrep: (a, b) => (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.prepTextCell)(a, b, a.theme.textLight),\n    draw: a => (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)(a, a.cell.data, a.cell.contentAlign),\n    measure: (ctx, cell, theme) => ctx.measureText(cell.data).width + theme.cellHorizontalPadding * 2,\n    // eslint-disable-next-line react/display-name\n    provideEditor: () => p => {\n        const { isHighlighted, onChange, value, validatedSelection } = p;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_3__.GrowingEntry, { highlight: isHighlighted, autoFocus: value.readonly !== true, disabled: value.readonly !== false, value: value.data, validatedSelection: validatedSelection, onChange: e => onChange({\n                ...value,\n                data: e.target.value,\n            }) }));\n    },\n    onPaste: () => undefined,\n};\n//# sourceMappingURL=row-id-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvcm93LWlkLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEI7QUFDZ0Q7QUFDaUI7QUFDbkI7QUFDakU7QUFDUDtBQUNBLFVBQVUsZ0ZBQVk7QUFDdEI7QUFDQTtBQUNBLHdCQUF3Qix5RkFBWTtBQUNwQyxlQUFlLHlGQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBcUQ7QUFDckUsZ0JBQWdCLGdEQUFtQixDQUFDLGtGQUFZLElBQUk7QUFDcEQ7QUFDQTtBQUNBLGFBQWEsR0FBRztBQUNoQixLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvcm93LWlkLWNlbGwuanM/MzlhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHcm93aW5nRW50cnkgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZ3Jvd2luZy1lbnRyeS9ncm93aW5nLWVudHJ5LmpzXCI7XG5pbXBvcnQgeyBkcmF3VGV4dENlbGwsIHByZXBUZXh0Q2VsbCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RhdGEtZ3JpZC1saWIuanNcIjtcbmltcG9ydCB7IEdyaWRDZWxsS2luZCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5leHBvcnQgY29uc3Qgcm93SURDZWxsUmVuZGVyZXIgPSB7XG4gICAgZ2V0QWNjZXNzaWJpbGl0eVN0cmluZzogYyA9PiBjLmRhdGE/LnRvU3RyaW5nKCkgPz8gXCJcIixcbiAgICBraW5kOiBHcmlkQ2VsbEtpbmQuUm93SUQsXG4gICAgbmVlZHNIb3ZlcjogZmFsc2UsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBkcmF3UHJlcDogKGEsIGIpID0+IHByZXBUZXh0Q2VsbChhLCBiLCBhLnRoZW1lLnRleHRMaWdodCksXG4gICAgZHJhdzogYSA9PiBkcmF3VGV4dENlbGwoYSwgYS5jZWxsLmRhdGEsIGEuY2VsbC5jb250ZW50QWxpZ24pLFxuICAgIG1lYXN1cmU6IChjdHgsIGNlbGwsIHRoZW1lKSA9PiBjdHgubWVhc3VyZVRleHQoY2VsbC5kYXRhKS53aWR0aCArIHRoZW1lLmNlbGxIb3Jpem9udGFsUGFkZGluZyAqIDIsXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2Rpc3BsYXktbmFtZVxuICAgIHByb3ZpZGVFZGl0b3I6ICgpID0+IHAgPT4ge1xuICAgICAgICBjb25zdCB7IGlzSGlnaGxpZ2h0ZWQsIG9uQ2hhbmdlLCB2YWx1ZSwgdmFsaWRhdGVkU2VsZWN0aW9uIH0gPSBwO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoR3Jvd2luZ0VudHJ5LCB7IGhpZ2hsaWdodDogaXNIaWdobGlnaHRlZCwgYXV0b0ZvY3VzOiB2YWx1ZS5yZWFkb25seSAhPT0gdHJ1ZSwgZGlzYWJsZWQ6IHZhbHVlLnJlYWRvbmx5ICE9PSBmYWxzZSwgdmFsdWU6IHZhbHVlLmRhdGEsIHZhbGlkYXRlZFNlbGVjdGlvbjogdmFsaWRhdGVkU2VsZWN0aW9uLCBvbkNoYW5nZTogZSA9PiBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAgICAgZGF0YTogZS50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICB9KSB9KSk7XG4gICAgfSxcbiAgICBvblBhc3RlOiAoKSA9PiB1bmRlZmluZWQsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm93LWlkLWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/row-id-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/text-cell.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/text-cell.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   textCellRenderer: () => (/* binding */ textCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/growing-entry/growing-entry.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/data-grid/color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* eslint-disable react/display-name */\n\n\n\n\n\nconst textCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Text,\n    needsHover: textCell => textCell.hoverEffect === true,\n    needsHoverPosition: false,\n    drawPrep: _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.prepTextCell,\n    useLabel: true,\n    draw: a => {\n        const { cell, hoverAmount, hyperWrapping, ctx, rect, theme, overrideCursor } = a;\n        const { displayData, contentAlign, hoverEffect, allowWrapping } = cell;\n        if (hoverEffect === true && hoverAmount > 0) {\n            ctx.textBaseline = \"alphabetic\";\n            const padX = theme.cellHorizontalPadding;\n            const padY = theme.cellVerticalPadding;\n            const m = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.measureTextCached)(displayData, ctx, theme.baseFontFull, \"alphabetic\");\n            const maxH = rect.height - padY;\n            const h = Math.min(maxH, m.actualBoundingBoxAscent * 2.5);\n            ctx.beginPath();\n            (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.roundedRect)(ctx, rect.x + padX / 2, rect.y + (rect.height - h) / 2 + 1, m.width + padX * 3, h - 1, theme.roundingRadius ?? 4);\n            ctx.globalAlpha = hoverAmount;\n            ctx.fillStyle = (0,_internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_3__.withAlpha)(theme.textDark, 0.1);\n            ctx.fill();\n            // restore\n            ctx.globalAlpha = 1;\n            ctx.fillStyle = theme.textDark;\n            ctx.textBaseline = \"middle\";\n            overrideCursor?.(\"text\");\n        }\n        (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)(a, displayData, contentAlign, allowWrapping, hyperWrapping);\n    },\n    measure: (ctx, cell, t) => {\n        const lines = cell.displayData.split(\"\\n\", cell.allowWrapping === true ? undefined : 1);\n        let maxLineWidth = 0;\n        for (const line of lines) {\n            maxLineWidth = Math.max(maxLineWidth, ctx.measureText(line).width);\n        }\n        return maxLineWidth + 2 * t.cellHorizontalPadding;\n    },\n    onDelete: c => ({\n        ...c,\n        data: \"\",\n    }),\n    provideEditor: cell => ({\n        disablePadding: cell.allowWrapping === true,\n        editor: p => {\n            const { isHighlighted, onChange, value, validatedSelection } = p;\n            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_4__.GrowingEntry, { style: cell.allowWrapping === true ? { padding: \"3px 8.5px\" } : undefined, highlight: isHighlighted, autoFocus: value.readonly !== true, disabled: value.readonly === true, altNewline: true, value: value.data, validatedSelection: validatedSelection, onChange: e => onChange({\n                    ...value,\n                    data: e.target.value,\n                }) }));\n        },\n    }),\n    onPaste: (toPaste, cell, details) => toPaste === cell.data\n        ? undefined\n        : { ...cell, data: toPaste, displayData: details.formattedString ?? cell.displayData },\n};\n//# sourceMappingURL=text-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvdGV4dC1jZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQytCO0FBQzJDO0FBQ2tEO0FBQ3BEO0FBQ047QUFDM0Q7QUFDUDtBQUNBLFVBQVUsZ0ZBQVk7QUFDdEI7QUFDQTtBQUNBLGNBQWMscUZBQVk7QUFDMUI7QUFDQTtBQUNBLGdCQUFnQixxRUFBcUU7QUFDckYsZ0JBQWdCLHdEQUF3RDtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4RkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3RkFBVztBQUN2QjtBQUNBLDRCQUE0Qiw4RUFBUztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseUZBQVk7QUFDcEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscURBQXFEO0FBQ3pFLG9CQUFvQixnREFBbUIsQ0FBQyxrRkFBWSxJQUFJLHVDQUF1Qyx1QkFBdUI7QUFDdEg7QUFDQTtBQUNBLGlCQUFpQixHQUFHO0FBQ3BCLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVksa0ZBQWtGO0FBQzlGO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jZWxscy90ZXh0LWNlbGwuanM/NzdjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9kaXNwbGF5LW5hbWUgKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgR3Jvd2luZ0VudHJ5IH0gZnJvbSBcIi4uL2ludGVybmFsL2dyb3dpbmctZW50cnkvZ3Jvd2luZy1lbnRyeS5qc1wiO1xuaW1wb3J0IHsgZHJhd1RleHRDZWxsLCBtZWFzdXJlVGV4dENhY2hlZCwgcHJlcFRleHRDZWxsLCByb3VuZGVkUmVjdCwgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL3JlbmRlci9kYXRhLWdyaWQtbGliLmpzXCI7XG5pbXBvcnQgeyBHcmlkQ2VsbEtpbmQgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL2RhdGEtZ3JpZC10eXBlcy5qc1wiO1xuaW1wb3J0IHsgd2l0aEFscGhhIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9jb2xvci1wYXJzZXIuanNcIjtcbmV4cG9ydCBjb25zdCB0ZXh0Q2VsbFJlbmRlcmVyID0ge1xuICAgIGdldEFjY2Vzc2liaWxpdHlTdHJpbmc6IGMgPT4gYy5kYXRhPy50b1N0cmluZygpID8/IFwiXCIsXG4gICAga2luZDogR3JpZENlbGxLaW5kLlRleHQsXG4gICAgbmVlZHNIb3ZlcjogdGV4dENlbGwgPT4gdGV4dENlbGwuaG92ZXJFZmZlY3QgPT09IHRydWUsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiBmYWxzZSxcbiAgICBkcmF3UHJlcDogcHJlcFRleHRDZWxsLFxuICAgIHVzZUxhYmVsOiB0cnVlLFxuICAgIGRyYXc6IGEgPT4ge1xuICAgICAgICBjb25zdCB7IGNlbGwsIGhvdmVyQW1vdW50LCBoeXBlcldyYXBwaW5nLCBjdHgsIHJlY3QsIHRoZW1lLCBvdmVycmlkZUN1cnNvciB9ID0gYTtcbiAgICAgICAgY29uc3QgeyBkaXNwbGF5RGF0YSwgY29udGVudEFsaWduLCBob3ZlckVmZmVjdCwgYWxsb3dXcmFwcGluZyB9ID0gY2VsbDtcbiAgICAgICAgaWYgKGhvdmVyRWZmZWN0ID09PSB0cnVlICYmIGhvdmVyQW1vdW50ID4gMCkge1xuICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9IFwiYWxwaGFiZXRpY1wiO1xuICAgICAgICAgICAgY29uc3QgcGFkWCA9IHRoZW1lLmNlbGxIb3Jpem9udGFsUGFkZGluZztcbiAgICAgICAgICAgIGNvbnN0IHBhZFkgPSB0aGVtZS5jZWxsVmVydGljYWxQYWRkaW5nO1xuICAgICAgICAgICAgY29uc3QgbSA9IG1lYXN1cmVUZXh0Q2FjaGVkKGRpc3BsYXlEYXRhLCBjdHgsIHRoZW1lLmJhc2VGb250RnVsbCwgXCJhbHBoYWJldGljXCIpO1xuICAgICAgICAgICAgY29uc3QgbWF4SCA9IHJlY3QuaGVpZ2h0IC0gcGFkWTtcbiAgICAgICAgICAgIGNvbnN0IGggPSBNYXRoLm1pbihtYXhILCBtLmFjdHVhbEJvdW5kaW5nQm94QXNjZW50ICogMi41KTtcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIHJvdW5kZWRSZWN0KGN0eCwgcmVjdC54ICsgcGFkWCAvIDIsIHJlY3QueSArIChyZWN0LmhlaWdodCAtIGgpIC8gMiArIDEsIG0ud2lkdGggKyBwYWRYICogMywgaCAtIDEsIHRoZW1lLnJvdW5kaW5nUmFkaXVzID8/IDQpO1xuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gaG92ZXJBbW91bnQ7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gd2l0aEFscGhhKHRoZW1lLnRleHREYXJrLCAwLjEpO1xuICAgICAgICAgICAgY3R4LmZpbGwoKTtcbiAgICAgICAgICAgIC8vIHJlc3RvcmVcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhlbWUudGV4dERhcms7XG4gICAgICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcbiAgICAgICAgICAgIG92ZXJyaWRlQ3Vyc29yPy4oXCJ0ZXh0XCIpO1xuICAgICAgICB9XG4gICAgICAgIGRyYXdUZXh0Q2VsbChhLCBkaXNwbGF5RGF0YSwgY29udGVudEFsaWduLCBhbGxvd1dyYXBwaW5nLCBoeXBlcldyYXBwaW5nKTtcbiAgICB9LFxuICAgIG1lYXN1cmU6IChjdHgsIGNlbGwsIHQpID0+IHtcbiAgICAgICAgY29uc3QgbGluZXMgPSBjZWxsLmRpc3BsYXlEYXRhLnNwbGl0KFwiXFxuXCIsIGNlbGwuYWxsb3dXcmFwcGluZyA9PT0gdHJ1ZSA/IHVuZGVmaW5lZCA6IDEpO1xuICAgICAgICBsZXQgbWF4TGluZVdpZHRoID0gMDtcbiAgICAgICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgICAgICAgICBtYXhMaW5lV2lkdGggPSBNYXRoLm1heChtYXhMaW5lV2lkdGgsIGN0eC5tZWFzdXJlVGV4dChsaW5lKS53aWR0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1heExpbmVXaWR0aCArIDIgKiB0LmNlbGxIb3Jpem9udGFsUGFkZGluZztcbiAgICB9LFxuICAgIG9uRGVsZXRlOiBjID0+ICh7XG4gICAgICAgIC4uLmMsXG4gICAgICAgIGRhdGE6IFwiXCIsXG4gICAgfSksXG4gICAgcHJvdmlkZUVkaXRvcjogY2VsbCA9PiAoe1xuICAgICAgICBkaXNhYmxlUGFkZGluZzogY2VsbC5hbGxvd1dyYXBwaW5nID09PSB0cnVlLFxuICAgICAgICBlZGl0b3I6IHAgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBpc0hpZ2hsaWdodGVkLCBvbkNoYW5nZSwgdmFsdWUsIHZhbGlkYXRlZFNlbGVjdGlvbiB9ID0gcDtcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChHcm93aW5nRW50cnksIHsgc3R5bGU6IGNlbGwuYWxsb3dXcmFwcGluZyA9PT0gdHJ1ZSA/IHsgcGFkZGluZzogXCIzcHggOC41cHhcIiB9IDogdW5kZWZpbmVkLCBoaWdobGlnaHQ6IGlzSGlnaGxpZ2h0ZWQsIGF1dG9Gb2N1czogdmFsdWUucmVhZG9ubHkgIT09IHRydWUsIGRpc2FibGVkOiB2YWx1ZS5yZWFkb25seSA9PT0gdHJ1ZSwgYWx0TmV3bGluZTogdHJ1ZSwgdmFsdWU6IHZhbHVlLmRhdGEsIHZhbGlkYXRlZFNlbGVjdGlvbjogdmFsaWRhdGVkU2VsZWN0aW9uLCBvbkNoYW5nZTogZSA9PiBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICB9KSB9KSk7XG4gICAgICAgIH0sXG4gICAgfSksXG4gICAgb25QYXN0ZTogKHRvUGFzdGUsIGNlbGwsIGRldGFpbHMpID0+IHRvUGFzdGUgPT09IGNlbGwuZGF0YVxuICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICA6IHsgLi4uY2VsbCwgZGF0YTogdG9QYXN0ZSwgZGlzcGxheURhdGE6IGRldGFpbHMuZm9ybWF0dGVkU3RyaW5nID8/IGNlbGwuZGlzcGxheURhdGEgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0LWNlbGwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/text-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/uri-cell.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/cells/uri-cell.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uriCellRenderer: () => (/* binding */ uriCellRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_overlay_editor_private_uri_overlay_editor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/data-grid-overlay-editor/private/uri-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* eslint-disable react/display-name */\n\n\n\n\n\nfunction getTextRect(metrics, rect, theme, contentAlign) {\n    let x = theme.cellHorizontalPadding;\n    const y = rect.height / 2 - metrics.actualBoundingBoxAscent / 2;\n    const width = metrics.width;\n    const height = metrics.actualBoundingBoxAscent;\n    if (contentAlign === \"right\") {\n        x = rect.width - width - theme.cellHorizontalPadding;\n    }\n    else if (contentAlign === \"center\") {\n        x = rect.width / 2 - width / 2;\n    }\n    return { x, y, width, height };\n}\nconst uriCellRenderer = {\n    getAccessibilityString: c => c.data?.toString() ?? \"\",\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Uri,\n    needsHover: uriCell => uriCell.hoverEffect === true,\n    needsHoverPosition: true,\n    useLabel: true,\n    drawPrep: _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.prepTextCell,\n    draw: a => {\n        const { cell, theme, overrideCursor, hoverX, hoverY, rect, ctx } = a;\n        const txt = cell.displayData ?? cell.data;\n        const isLinky = cell.hoverEffect === true;\n        if (overrideCursor !== undefined && isLinky && hoverX !== undefined && hoverY !== undefined) {\n            const m = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.measureTextCached)(txt, ctx, theme.baseFontFull);\n            const textRect = getTextRect(m, rect, theme, cell.contentAlign);\n            const { x, y, width: w, height: h } = textRect;\n            // check if hoverX and hoverY inside the box\n            if (hoverX >= x - 4 && hoverX <= x - 4 + w + 8 && hoverY >= y - 4 && hoverY <= y - 4 + h + 8) {\n                const middleCenterBias = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getMiddleCenterBias)(ctx, theme.baseFontFull);\n                overrideCursor(\"pointer\");\n                const underlineOffset = 5;\n                const drawY = y - middleCenterBias;\n                ctx.beginPath();\n                ctx.moveTo(rect.x + x, Math.floor(rect.y + drawY + h + underlineOffset) + 0.5);\n                ctx.lineTo(rect.x + x + w, Math.floor(rect.y + drawY + h + underlineOffset) + 0.5);\n                ctx.strokeStyle = theme.linkColor;\n                ctx.stroke();\n                ctx.save();\n                ctx.fillStyle = a.cellFillColor;\n                (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)({ ...a, rect: { ...rect, x: rect.x - 1 } }, txt, cell.contentAlign);\n                (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)({ ...a, rect: { ...rect, x: rect.x - 2 } }, txt, cell.contentAlign);\n                (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)({ ...a, rect: { ...rect, x: rect.x + 1 } }, txt, cell.contentAlign);\n                (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)({ ...a, rect: { ...rect, x: rect.x + 2 } }, txt, cell.contentAlign);\n                ctx.restore();\n            }\n        }\n        ctx.fillStyle = isLinky ? theme.linkColor : theme.textDark;\n        (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawTextCell)(a, txt, cell.contentAlign);\n    },\n    onClick: a => {\n        const { cell, bounds, posX, posY, theme } = a;\n        const txt = cell.displayData ?? cell.data;\n        if (cell.hoverEffect !== true || cell.onClickUri === undefined)\n            return;\n        const m = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getMeasuredTextCache)(txt, theme.baseFontFull);\n        if (m === undefined)\n            return;\n        const textRect = getTextRect(m, bounds, theme, cell.contentAlign);\n        const didClick = (0,_common_math_js__WEBPACK_IMPORTED_MODULE_3__.pointInRect)({\n            x: textRect.x - 4,\n            y: textRect.y - 4,\n            width: textRect.width + 8,\n            height: textRect.height + 8,\n        }, posX, posY);\n        if (didClick) {\n            cell.onClickUri(a);\n        }\n        return undefined;\n    },\n    measure: (ctx, cell, theme) => ctx.measureText(cell.displayData ?? cell.data).width + theme.cellHorizontalPadding * 2,\n    onDelete: c => ({\n        ...c,\n        data: \"\",\n    }),\n    provideEditor: cell => p => {\n        const { onChange, value, forceEditMode, validatedSelection } = p;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_grid_overlay_editor_private_uri_overlay_editor_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { forceEditMode: value.readonly !== true &&\n                (forceEditMode || (cell.hoverEffect === true && cell.onClickUri !== undefined)), uri: value.data, preview: value.displayData ?? value.data, validatedSelection: validatedSelection, readonly: value.readonly === true, onChange: e => onChange({\n                ...value,\n                data: e.target.value,\n            }) }));\n    },\n    onPaste: (toPaste, cell, details) => toPaste === cell.data\n        ? undefined\n        : { ...cell, data: toPaste, displayData: details.formattedString ?? cell.displayData },\n};\n//# sourceMappingURL=uri-cell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvdXJpLWNlbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDbUU7QUFDd0Q7QUFDakY7QUFDekI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSxVQUFVLGdGQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUZBQVk7QUFDMUI7QUFDQSxnQkFBZ0IseURBQXlEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4RkFBaUI7QUFDdkM7QUFDQSxvQkFBb0IsNEJBQTRCO0FBQ2hEO0FBQ0E7QUFDQSx5Q0FBeUMsZ0dBQW1CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlGQUFZLEdBQUcsY0FBYywwQkFBMEI7QUFDdkUsZ0JBQWdCLHlGQUFZLEdBQUcsY0FBYywwQkFBMEI7QUFDdkUsZ0JBQWdCLHlGQUFZLEdBQUcsY0FBYywwQkFBMEI7QUFDdkUsZ0JBQWdCLHlGQUFZLEdBQUcsY0FBYywwQkFBMEI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlGQUFZO0FBQ3BCLEtBQUs7QUFDTDtBQUNBLGdCQUFnQixrQ0FBa0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlHQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnQkFBZ0IscURBQXFEO0FBQ3JFLGdCQUFnQixnREFBbUIsQ0FBQyx3R0FBZ0IsSUFBSTtBQUN4RDtBQUNBO0FBQ0E7QUFDQSxhQUFhLEdBQUc7QUFDaEIsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZLGtGQUFrRjtBQUM5RjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY2VsbHMvdXJpLWNlbGwuanM/YzhjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9kaXNwbGF5LW5hbWUgKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFVyaU92ZXJsYXlFZGl0b3IgZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL3VyaS1vdmVybGF5LWVkaXRvci5qc1wiO1xuaW1wb3J0IHsgZHJhd1RleHRDZWxsLCBnZXRNZWFzdXJlZFRleHRDYWNoZSwgZ2V0TWlkZGxlQ2VudGVyQmlhcywgbWVhc3VyZVRleHRDYWNoZWQsIHByZXBUZXh0Q2VsbCwgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL3JlbmRlci9kYXRhLWdyaWQtbGliLmpzXCI7XG5pbXBvcnQgeyBHcmlkQ2VsbEtpbmQsIH0gZnJvbSBcIi4uL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbmltcG9ydCB7IHBvaW50SW5SZWN0IH0gZnJvbSBcIi4uL2NvbW1vbi9tYXRoLmpzXCI7XG5mdW5jdGlvbiBnZXRUZXh0UmVjdChtZXRyaWNzLCByZWN0LCB0aGVtZSwgY29udGVudEFsaWduKSB7XG4gICAgbGV0IHggPSB0aGVtZS5jZWxsSG9yaXpvbnRhbFBhZGRpbmc7XG4gICAgY29uc3QgeSA9IHJlY3QuaGVpZ2h0IC8gMiAtIG1ldHJpY3MuYWN0dWFsQm91bmRpbmdCb3hBc2NlbnQgLyAyO1xuICAgIGNvbnN0IHdpZHRoID0gbWV0cmljcy53aWR0aDtcbiAgICBjb25zdCBoZWlnaHQgPSBtZXRyaWNzLmFjdHVhbEJvdW5kaW5nQm94QXNjZW50O1xuICAgIGlmIChjb250ZW50QWxpZ24gPT09IFwicmlnaHRcIikge1xuICAgICAgICB4ID0gcmVjdC53aWR0aCAtIHdpZHRoIC0gdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZW50QWxpZ24gPT09IFwiY2VudGVyXCIpIHtcbiAgICAgICAgeCA9IHJlY3Qud2lkdGggLyAyIC0gd2lkdGggLyAyO1xuICAgIH1cbiAgICByZXR1cm4geyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH07XG59XG5leHBvcnQgY29uc3QgdXJpQ2VsbFJlbmRlcmVyID0ge1xuICAgIGdldEFjY2Vzc2liaWxpdHlTdHJpbmc6IGMgPT4gYy5kYXRhPy50b1N0cmluZygpID8/IFwiXCIsXG4gICAga2luZDogR3JpZENlbGxLaW5kLlVyaSxcbiAgICBuZWVkc0hvdmVyOiB1cmlDZWxsID0+IHVyaUNlbGwuaG92ZXJFZmZlY3QgPT09IHRydWUsXG4gICAgbmVlZHNIb3ZlclBvc2l0aW9uOiB0cnVlLFxuICAgIHVzZUxhYmVsOiB0cnVlLFxuICAgIGRyYXdQcmVwOiBwcmVwVGV4dENlbGwsXG4gICAgZHJhdzogYSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY2VsbCwgdGhlbWUsIG92ZXJyaWRlQ3Vyc29yLCBob3ZlclgsIGhvdmVyWSwgcmVjdCwgY3R4IH0gPSBhO1xuICAgICAgICBjb25zdCB0eHQgPSBjZWxsLmRpc3BsYXlEYXRhID8/IGNlbGwuZGF0YTtcbiAgICAgICAgY29uc3QgaXNMaW5reSA9IGNlbGwuaG92ZXJFZmZlY3QgPT09IHRydWU7XG4gICAgICAgIGlmIChvdmVycmlkZUN1cnNvciAhPT0gdW5kZWZpbmVkICYmIGlzTGlua3kgJiYgaG92ZXJYICE9PSB1bmRlZmluZWQgJiYgaG92ZXJZICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG0gPSBtZWFzdXJlVGV4dENhY2hlZCh0eHQsIGN0eCwgdGhlbWUuYmFzZUZvbnRGdWxsKTtcbiAgICAgICAgICAgIGNvbnN0IHRleHRSZWN0ID0gZ2V0VGV4dFJlY3QobSwgcmVjdCwgdGhlbWUsIGNlbGwuY29udGVudEFsaWduKTtcbiAgICAgICAgICAgIGNvbnN0IHsgeCwgeSwgd2lkdGg6IHcsIGhlaWdodDogaCB9ID0gdGV4dFJlY3Q7XG4gICAgICAgICAgICAvLyBjaGVjayBpZiBob3ZlclggYW5kIGhvdmVyWSBpbnNpZGUgdGhlIGJveFxuICAgICAgICAgICAgaWYgKGhvdmVyWCA+PSB4IC0gNCAmJiBob3ZlclggPD0geCAtIDQgKyB3ICsgOCAmJiBob3ZlclkgPj0geSAtIDQgJiYgaG92ZXJZIDw9IHkgLSA0ICsgaCArIDgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtaWRkbGVDZW50ZXJCaWFzID0gZ2V0TWlkZGxlQ2VudGVyQmlhcyhjdHgsIHRoZW1lLmJhc2VGb250RnVsbCk7XG4gICAgICAgICAgICAgICAgb3ZlcnJpZGVDdXJzb3IoXCJwb2ludGVyXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHVuZGVybGluZU9mZnNldCA9IDU7XG4gICAgICAgICAgICAgICAgY29uc3QgZHJhd1kgPSB5IC0gbWlkZGxlQ2VudGVyQmlhcztcbiAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhyZWN0LnggKyB4LCBNYXRoLmZsb29yKHJlY3QueSArIGRyYXdZICsgaCArIHVuZGVybGluZU9mZnNldCkgKyAwLjUpO1xuICAgICAgICAgICAgICAgIGN0eC5saW5lVG8ocmVjdC54ICsgeCArIHcsIE1hdGguZmxvb3IocmVjdC55ICsgZHJhd1kgKyBoICsgdW5kZXJsaW5lT2Zmc2V0KSArIDAuNSk7XG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gdGhlbWUubGlua0NvbG9yO1xuICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgICAgICAgICBjdHguc2F2ZSgpO1xuICAgICAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSBhLmNlbGxGaWxsQ29sb3I7XG4gICAgICAgICAgICAgICAgZHJhd1RleHRDZWxsKHsgLi4uYSwgcmVjdDogeyAuLi5yZWN0LCB4OiByZWN0LnggLSAxIH0gfSwgdHh0LCBjZWxsLmNvbnRlbnRBbGlnbik7XG4gICAgICAgICAgICAgICAgZHJhd1RleHRDZWxsKHsgLi4uYSwgcmVjdDogeyAuLi5yZWN0LCB4OiByZWN0LnggLSAyIH0gfSwgdHh0LCBjZWxsLmNvbnRlbnRBbGlnbik7XG4gICAgICAgICAgICAgICAgZHJhd1RleHRDZWxsKHsgLi4uYSwgcmVjdDogeyAuLi5yZWN0LCB4OiByZWN0LnggKyAxIH0gfSwgdHh0LCBjZWxsLmNvbnRlbnRBbGlnbik7XG4gICAgICAgICAgICAgICAgZHJhd1RleHRDZWxsKHsgLi4uYSwgcmVjdDogeyAuLi5yZWN0LCB4OiByZWN0LnggKyAyIH0gfSwgdHh0LCBjZWxsLmNvbnRlbnRBbGlnbik7XG4gICAgICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjdHguZmlsbFN0eWxlID0gaXNMaW5reSA/IHRoZW1lLmxpbmtDb2xvciA6IHRoZW1lLnRleHREYXJrO1xuICAgICAgICBkcmF3VGV4dENlbGwoYSwgdHh0LCBjZWxsLmNvbnRlbnRBbGlnbik7XG4gICAgfSxcbiAgICBvbkNsaWNrOiBhID0+IHtcbiAgICAgICAgY29uc3QgeyBjZWxsLCBib3VuZHMsIHBvc1gsIHBvc1ksIHRoZW1lIH0gPSBhO1xuICAgICAgICBjb25zdCB0eHQgPSBjZWxsLmRpc3BsYXlEYXRhID8/IGNlbGwuZGF0YTtcbiAgICAgICAgaWYgKGNlbGwuaG92ZXJFZmZlY3QgIT09IHRydWUgfHwgY2VsbC5vbkNsaWNrVXJpID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IG0gPSBnZXRNZWFzdXJlZFRleHRDYWNoZSh0eHQsIHRoZW1lLmJhc2VGb250RnVsbCk7XG4gICAgICAgIGlmIChtID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHRleHRSZWN0ID0gZ2V0VGV4dFJlY3QobSwgYm91bmRzLCB0aGVtZSwgY2VsbC5jb250ZW50QWxpZ24pO1xuICAgICAgICBjb25zdCBkaWRDbGljayA9IHBvaW50SW5SZWN0KHtcbiAgICAgICAgICAgIHg6IHRleHRSZWN0LnggLSA0LFxuICAgICAgICAgICAgeTogdGV4dFJlY3QueSAtIDQsXG4gICAgICAgICAgICB3aWR0aDogdGV4dFJlY3Qud2lkdGggKyA4LFxuICAgICAgICAgICAgaGVpZ2h0OiB0ZXh0UmVjdC5oZWlnaHQgKyA4LFxuICAgICAgICB9LCBwb3NYLCBwb3NZKTtcbiAgICAgICAgaWYgKGRpZENsaWNrKSB7XG4gICAgICAgICAgICBjZWxsLm9uQ2xpY2tVcmkoYSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICAgIG1lYXN1cmU6IChjdHgsIGNlbGwsIHRoZW1lKSA9PiBjdHgubWVhc3VyZVRleHQoY2VsbC5kaXNwbGF5RGF0YSA/PyBjZWxsLmRhdGEpLndpZHRoICsgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nICogMixcbiAgICBvbkRlbGV0ZTogYyA9PiAoe1xuICAgICAgICAuLi5jLFxuICAgICAgICBkYXRhOiBcIlwiLFxuICAgIH0pLFxuICAgIHByb3ZpZGVFZGl0b3I6IGNlbGwgPT4gcCA9PiB7XG4gICAgICAgIGNvbnN0IHsgb25DaGFuZ2UsIHZhbHVlLCBmb3JjZUVkaXRNb2RlLCB2YWxpZGF0ZWRTZWxlY3Rpb24gfSA9IHA7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChVcmlPdmVybGF5RWRpdG9yLCB7IGZvcmNlRWRpdE1vZGU6IHZhbHVlLnJlYWRvbmx5ICE9PSB0cnVlICYmXG4gICAgICAgICAgICAgICAgKGZvcmNlRWRpdE1vZGUgfHwgKGNlbGwuaG92ZXJFZmZlY3QgPT09IHRydWUgJiYgY2VsbC5vbkNsaWNrVXJpICE9PSB1bmRlZmluZWQpKSwgdXJpOiB2YWx1ZS5kYXRhLCBwcmV2aWV3OiB2YWx1ZS5kaXNwbGF5RGF0YSA/PyB2YWx1ZS5kYXRhLCB2YWxpZGF0ZWRTZWxlY3Rpb246IHZhbGlkYXRlZFNlbGVjdGlvbiwgcmVhZG9ubHk6IHZhbHVlLnJlYWRvbmx5ID09PSB0cnVlLCBvbkNoYW5nZTogZSA9PiBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAgICAgZGF0YTogZS50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICB9KSB9KSk7XG4gICAgfSxcbiAgICBvblBhc3RlOiAodG9QYXN0ZSwgY2VsbCwgZGV0YWlscykgPT4gdG9QYXN0ZSA9PT0gY2VsbC5kYXRhXG4gICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgIDogeyAuLi5jZWxsLCBkYXRhOiB0b1Bhc3RlLCBkaXNwbGF5RGF0YTogZGV0YWlscy5mb3JtYXR0ZWRTdHJpbmcgPz8gY2VsbC5kaXNwbGF5RGF0YSB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVyaS1jZWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/uri-cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   browserIsFirefox: () => (/* binding */ browserIsFirefox),\n/* harmony export */   browserIsOSX: () => (/* binding */ browserIsOSX),\n/* harmony export */   browserIsSafari: () => (/* binding */ browserIsSafari)\n/* harmony export */ });\nclass Lazy {\n    fn;\n    val;\n    constructor(fn) {\n        this.fn = fn;\n    }\n    get value() {\n        return this.val ?? (this.val = this.fn());\n    }\n}\nfunction lazy(fn) {\n    return new Lazy(fn);\n}\n// next.js apps don't have window available at import time, so this will fail if its not lazy.\nconst browserIsFirefox = lazy(() => window.navigator.userAgent.includes(\"Firefox\"));\nconst browserIsSafari = lazy(() => window.navigator.userAgent.includes(\"Mac OS\") &&\n    window.navigator.userAgent.includes(\"Safari\") &&\n    !window.navigator.userAgent.includes(\"Chrome\"));\nconst browserIsOSX = lazy(() => window.navigator.platform.toLowerCase().startsWith(\"mac\"));\n//# sourceMappingURL=browser-detect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL2Jyb3dzZXItZGV0ZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jb21tb24vYnJvd3Nlci1kZXRlY3QuanM/MjhkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBMYXp5IHtcbiAgICBmbjtcbiAgICB2YWw7XG4gICAgY29uc3RydWN0b3IoZm4pIHtcbiAgICAgICAgdGhpcy5mbiA9IGZuO1xuICAgIH1cbiAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbCA/PyAodGhpcy52YWwgPSB0aGlzLmZuKCkpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGxhenkoZm4pIHtcbiAgICByZXR1cm4gbmV3IExhenkoZm4pO1xufVxuLy8gbmV4dC5qcyBhcHBzIGRvbid0IGhhdmUgd2luZG93IGF2YWlsYWJsZSBhdCBpbXBvcnQgdGltZSwgc28gdGhpcyB3aWxsIGZhaWwgaWYgaXRzIG5vdCBsYXp5LlxuZXhwb3J0IGNvbnN0IGJyb3dzZXJJc0ZpcmVmb3ggPSBsYXp5KCgpID0+IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluY2x1ZGVzKFwiRmlyZWZveFwiKSk7XG5leHBvcnQgY29uc3QgYnJvd3NlcklzU2FmYXJpID0gbGF6eSgoKSA9PiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmNsdWRlcyhcIk1hYyBPU1wiKSAmJlxuICAgIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluY2x1ZGVzKFwiU2FmYXJpXCIpICYmXG4gICAgIXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluY2x1ZGVzKFwiQ2hyb21lXCIpKTtcbmV4cG9ydCBjb25zdCBicm93c2VySXNPU1ggPSBsYXp5KCgpID0+IHdpbmRvdy5uYXZpZ2F0b3IucGxhdGZvcm0udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwibWFjXCIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXItZGV0ZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/image-window-loader.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/image-window-loader.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _internal_data_grid_cell_set_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/data-grid/cell-set.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js\");\n/* harmony import */ var lodash_throttle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/throttle.js */ \"(ssr)/./node_modules/lodash/throttle.js\");\n/* harmony import */ var _render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render-state-provider.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js\");\n\n\n\nconst imgPool = [];\nclass ImageWindowLoaderImpl extends _render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.WindowingTrackerBase {\n    imageLoaded = () => undefined;\n    loadedLocations = [];\n    cache = {};\n    setCallback(imageLoaded) {\n        this.imageLoaded = imageLoaded;\n    }\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    sendLoaded = lodash_throttle_js__WEBPACK_IMPORTED_MODULE_0__(() => {\n        this.imageLoaded(new _internal_data_grid_cell_set_js__WEBPACK_IMPORTED_MODULE_2__.CellSet(this.loadedLocations));\n        this.loadedLocations = [];\n    }, 20);\n    clearOutOfWindow = () => {\n        const keys = Object.keys(this.cache);\n        for (const key of keys) {\n            const obj = this.cache[key];\n            let keep = false;\n            for (let j = 0; j < obj.cells.length; j++) {\n                const packed = obj.cells[j];\n                if (this.isInWindow(packed)) {\n                    keep = true;\n                    break;\n                }\n            }\n            if (keep) {\n                obj.cells = obj.cells.filter(this.isInWindow);\n            }\n            else {\n                obj.cancel();\n                delete this.cache[key];\n            }\n        }\n    };\n    loadImage(url, col, row, key) {\n        let loaded = false;\n        const img = imgPool.pop() ?? new Image();\n        let canceled = false;\n        const result = {\n            img: undefined,\n            cells: [(0,_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.packColRowToNumber)(col, row)],\n            url,\n            cancel: () => {\n                if (canceled)\n                    return;\n                canceled = true;\n                if (imgPool.length < 12) {\n                    imgPool.unshift(img); // never retain more than 12\n                }\n                else if (!loaded) {\n                    img.src = \"\";\n                }\n            },\n        };\n        const loadPromise = new Promise(r => img.addEventListener(\"load\", () => r(null)));\n        // use request animation time to avoid paying src set costs during draw calls\n        requestAnimationFrame(async () => {\n            try {\n                img.src = url;\n                await loadPromise;\n                await img.decode();\n                const toWrite = this.cache[key];\n                if (toWrite !== undefined && !canceled) {\n                    toWrite.img = img;\n                    for (const packed of toWrite.cells) {\n                        this.loadedLocations.push((0,_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.unpackNumberToColRow)(packed));\n                    }\n                    loaded = true;\n                    this.sendLoaded();\n                }\n            }\n            catch {\n                result.cancel();\n            }\n        });\n        this.cache[key] = result;\n    }\n    loadOrGetImage(url, col, row) {\n        const key = url;\n        const current = this.cache[key];\n        if (current !== undefined) {\n            const packed = (0,_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.packColRowToNumber)(col, row);\n            if (!current.cells.includes(packed)) {\n                current.cells.push(packed);\n            }\n            return current.img;\n        }\n        else {\n            this.loadImage(url, col, row, key);\n        }\n        return undefined;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageWindowLoaderImpl);\n//# sourceMappingURL=image-window-loader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL2ltYWdlLXdpbmRvdy1sb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0RDtBQUNsQjtBQUNrRTtBQUM1RztBQUNBLG9DQUFvQywyRUFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0NBQVE7QUFDekIsNkJBQTZCLG9FQUFPO0FBQ3BDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsc0JBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2RUFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCwrRUFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsNkVBQWtCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxxQkFBcUIsRUFBQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NvbW1vbi9pbWFnZS13aW5kb3ctbG9hZGVyLmpzPzZhNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2VsbFNldCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvY2VsbC1zZXQuanNcIjtcbmltcG9ydCB0aHJvdHRsZSBmcm9tIFwibG9kYXNoL3Rocm90dGxlLmpzXCI7XG5pbXBvcnQgeyBwYWNrQ29sUm93VG9OdW1iZXIsIHVucGFja051bWJlclRvQ29sUm93LCBXaW5kb3dpbmdUcmFja2VyQmFzZSB9IGZyb20gXCIuL3JlbmRlci1zdGF0ZS1wcm92aWRlci5qc1wiO1xuY29uc3QgaW1nUG9vbCA9IFtdO1xuY2xhc3MgSW1hZ2VXaW5kb3dMb2FkZXJJbXBsIGV4dGVuZHMgV2luZG93aW5nVHJhY2tlckJhc2Uge1xuICAgIGltYWdlTG9hZGVkID0gKCkgPT4gdW5kZWZpbmVkO1xuICAgIGxvYWRlZExvY2F0aW9ucyA9IFtdO1xuICAgIGNhY2hlID0ge307XG4gICAgc2V0Q2FsbGJhY2soaW1hZ2VMb2FkZWQpIHtcbiAgICAgICAgdGhpcy5pbWFnZUxvYWRlZCA9IGltYWdlTG9hZGVkO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9jb25zaXN0ZW50LWZ1bmN0aW9uLXNjb3BpbmdcbiAgICBzZW5kTG9hZGVkID0gdGhyb3R0bGUoKCkgPT4ge1xuICAgICAgICB0aGlzLmltYWdlTG9hZGVkKG5ldyBDZWxsU2V0KHRoaXMubG9hZGVkTG9jYXRpb25zKSk7XG4gICAgICAgIHRoaXMubG9hZGVkTG9jYXRpb25zID0gW107XG4gICAgfSwgMjApO1xuICAgIGNsZWFyT3V0T2ZXaW5kb3cgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmNhY2hlKTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgICAgICAgY29uc3Qgb2JqID0gdGhpcy5jYWNoZVtrZXldO1xuICAgICAgICAgICAgbGV0IGtlZXAgPSBmYWxzZTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgb2JqLmNlbGxzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFja2VkID0gb2JqLmNlbGxzW2pdO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzSW5XaW5kb3cocGFja2VkKSkge1xuICAgICAgICAgICAgICAgICAgICBrZWVwID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtlZXApIHtcbiAgICAgICAgICAgICAgICBvYmouY2VsbHMgPSBvYmouY2VsbHMuZmlsdGVyKHRoaXMuaXNJbldpbmRvdyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvYmouY2FuY2VsKCk7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuY2FjaGVba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgbG9hZEltYWdlKHVybCwgY29sLCByb3csIGtleSkge1xuICAgICAgICBsZXQgbG9hZGVkID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IGltZyA9IGltZ1Bvb2wucG9wKCkgPz8gbmV3IEltYWdlKCk7XG4gICAgICAgIGxldCBjYW5jZWxlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICBpbWc6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGNlbGxzOiBbcGFja0NvbFJvd1RvTnVtYmVyKGNvbCwgcm93KV0sXG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICBjYW5jZWw6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY2FuY2VsZWQpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjYW5jZWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKGltZ1Bvb2wubGVuZ3RoIDwgMTIpIHtcbiAgICAgICAgICAgICAgICAgICAgaW1nUG9vbC51bnNoaWZ0KGltZyk7IC8vIG5ldmVyIHJldGFpbiBtb3JlIHRoYW4gMTJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIWxvYWRlZCkge1xuICAgICAgICAgICAgICAgICAgICBpbWcuc3JjID0gXCJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBsb2FkUHJvbWlzZSA9IG5ldyBQcm9taXNlKHIgPT4gaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHIobnVsbCkpKTtcbiAgICAgICAgLy8gdXNlIHJlcXVlc3QgYW5pbWF0aW9uIHRpbWUgdG8gYXZvaWQgcGF5aW5nIHNyYyBzZXQgY29zdHMgZHVyaW5nIGRyYXcgY2FsbHNcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaW1nLnNyYyA9IHVybDtcbiAgICAgICAgICAgICAgICBhd2FpdCBsb2FkUHJvbWlzZTtcbiAgICAgICAgICAgICAgICBhd2FpdCBpbWcuZGVjb2RlKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdG9Xcml0ZSA9IHRoaXMuY2FjaGVba2V5XTtcbiAgICAgICAgICAgICAgICBpZiAodG9Xcml0ZSAhPT0gdW5kZWZpbmVkICYmICFjYW5jZWxlZCkge1xuICAgICAgICAgICAgICAgICAgICB0b1dyaXRlLmltZyA9IGltZztcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwYWNrZWQgb2YgdG9Xcml0ZS5jZWxscykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkZWRMb2NhdGlvbnMucHVzaCh1bnBhY2tOdW1iZXJUb0NvbFJvdyhwYWNrZWQpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsb2FkZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbmRMb2FkZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmNhbmNlbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jYWNoZVtrZXldID0gcmVzdWx0O1xuICAgIH1cbiAgICBsb2FkT3JHZXRJbWFnZSh1cmwsIGNvbCwgcm93KSB7XG4gICAgICAgIGNvbnN0IGtleSA9IHVybDtcbiAgICAgICAgY29uc3QgY3VycmVudCA9IHRoaXMuY2FjaGVba2V5XTtcbiAgICAgICAgaWYgKGN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgcGFja2VkID0gcGFja0NvbFJvd1RvTnVtYmVyKGNvbCwgcm93KTtcbiAgICAgICAgICAgIGlmICghY3VycmVudC5jZWxscy5pbmNsdWRlcyhwYWNrZWQpKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudC5jZWxscy5wdXNoKHBhY2tlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudC5pbWc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRJbWFnZSh1cmwsIGNvbCwgcm93LCBrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgSW1hZ2VXaW5kb3dMb2FkZXJJbXBsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2Utd2luZG93LWxvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/image-window-loader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/is-hotkey.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/is-hotkey.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHotkey: () => (/* binding */ isHotkey)\n/* harmony export */ });\n/* harmony import */ var _browser_detect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser-detect.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\");\n\n// brain dead syntax, find your deps, and make buggy replacements with 5 times the effort\n// all lower case\n// ctrl+shift+alt+d or ctrl+x or shift+c or shift+Backspace or alt+_53\n// you get it, last one is always event.key, nothing fancy\n// special: primary === ctrl on windows, meta on mac\n// no to lower, its a waste, we're the only consumer, don't use caps\n// and before you ask, yes space is \" \", e.g. \"ctrl+alt+ \", whatacountry.gif\n// load bearing whitespace, it's basically python\n// if the char starts with a _ it is the event.keycode instead\nfunction checkKey(key, args) {\n    if (key === undefined)\n        return false;\n    if (key.length > 1 && key.startsWith(\"_\")) {\n        const keycode = Number.parseInt(key.slice(1));\n        return keycode === args.keyCode;\n    }\n    if (key.length === 1 && key >= \"a\" && key <= \"z\") {\n        return key.toUpperCase().codePointAt(0) === args.keyCode;\n    }\n    return key === args.key;\n}\nfunction isHotkey(hotkey, args, details) {\n    const result = isHotkeyInner(hotkey, args);\n    if (result)\n        details.didMatch = true;\n    return result;\n}\nfunction isHotkeyInner(hotkey, args) {\n    if (hotkey.length === 0)\n        return false;\n    if (hotkey.includes(\"|\")) {\n        const parts = hotkey.split(\"|\");\n        for (const part of parts) {\n            if (isHotkeyInner(part, args))\n                return true;\n        }\n        return false;\n    }\n    let wantCtrl = false;\n    let wantShift = false;\n    let wantAlt = false;\n    let wantMeta = false;\n    const split = hotkey.split(\"+\");\n    const key = split.pop();\n    if (!checkKey(key, args))\n        return false;\n    if (split[0] === \"any\")\n        return true;\n    for (const accel of split) {\n        switch (accel) {\n            case \"ctrl\":\n                wantCtrl = true;\n                break;\n            case \"shift\":\n                wantShift = true;\n                break;\n            case \"alt\":\n                wantAlt = true;\n                break;\n            case \"meta\":\n                wantMeta = true;\n                break;\n            case \"primary\":\n                if (_browser_detect_js__WEBPACK_IMPORTED_MODULE_0__.browserIsOSX.value) {\n                    wantMeta = true;\n                }\n                else {\n                    wantCtrl = true;\n                }\n                break;\n        }\n    }\n    return (args.altKey === wantAlt && args.ctrlKey === wantCtrl && args.shiftKey === wantShift && args.metaKey === wantMeta);\n}\n//# sourceMappingURL=is-hotkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL2lzLWhvdGtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNERBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NvbW1vbi9pcy1ob3RrZXkuanM/MmE4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBicm93c2VySXNPU1ggfSBmcm9tIFwiLi9icm93c2VyLWRldGVjdC5qc1wiO1xuLy8gYnJhaW4gZGVhZCBzeW50YXgsIGZpbmQgeW91ciBkZXBzLCBhbmQgbWFrZSBidWdneSByZXBsYWNlbWVudHMgd2l0aCA1IHRpbWVzIHRoZSBlZmZvcnRcbi8vIGFsbCBsb3dlciBjYXNlXG4vLyBjdHJsK3NoaWZ0K2FsdCtkIG9yIGN0cmwreCBvciBzaGlmdCtjIG9yIHNoaWZ0K0JhY2tzcGFjZSBvciBhbHQrXzUzXG4vLyB5b3UgZ2V0IGl0LCBsYXN0IG9uZSBpcyBhbHdheXMgZXZlbnQua2V5LCBub3RoaW5nIGZhbmN5XG4vLyBzcGVjaWFsOiBwcmltYXJ5ID09PSBjdHJsIG9uIHdpbmRvd3MsIG1ldGEgb24gbWFjXG4vLyBubyB0byBsb3dlciwgaXRzIGEgd2FzdGUsIHdlJ3JlIHRoZSBvbmx5IGNvbnN1bWVyLCBkb24ndCB1c2UgY2Fwc1xuLy8gYW5kIGJlZm9yZSB5b3UgYXNrLCB5ZXMgc3BhY2UgaXMgXCIgXCIsIGUuZy4gXCJjdHJsK2FsdCsgXCIsIHdoYXRhY291bnRyeS5naWZcbi8vIGxvYWQgYmVhcmluZyB3aGl0ZXNwYWNlLCBpdCdzIGJhc2ljYWxseSBweXRob25cbi8vIGlmIHRoZSBjaGFyIHN0YXJ0cyB3aXRoIGEgXyBpdCBpcyB0aGUgZXZlbnQua2V5Y29kZSBpbnN0ZWFkXG5mdW5jdGlvbiBjaGVja0tleShrZXksIGFyZ3MpIHtcbiAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoa2V5Lmxlbmd0aCA+IDEgJiYga2V5LnN0YXJ0c1dpdGgoXCJfXCIpKSB7XG4gICAgICAgIGNvbnN0IGtleWNvZGUgPSBOdW1iZXIucGFyc2VJbnQoa2V5LnNsaWNlKDEpKTtcbiAgICAgICAgcmV0dXJuIGtleWNvZGUgPT09IGFyZ3Mua2V5Q29kZTtcbiAgICB9XG4gICAgaWYgKGtleS5sZW5ndGggPT09IDEgJiYga2V5ID49IFwiYVwiICYmIGtleSA8PSBcInpcIikge1xuICAgICAgICByZXR1cm4ga2V5LnRvVXBwZXJDYXNlKCkuY29kZVBvaW50QXQoMCkgPT09IGFyZ3Mua2V5Q29kZTtcbiAgICB9XG4gICAgcmV0dXJuIGtleSA9PT0gYXJncy5rZXk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIb3RrZXkoaG90a2V5LCBhcmdzLCBkZXRhaWxzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gaXNIb3RrZXlJbm5lcihob3RrZXksIGFyZ3MpO1xuICAgIGlmIChyZXN1bHQpXG4gICAgICAgIGRldGFpbHMuZGlkTWF0Y2ggPSB0cnVlO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBpc0hvdGtleUlubmVyKGhvdGtleSwgYXJncykge1xuICAgIGlmIChob3RrZXkubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGhvdGtleS5pbmNsdWRlcyhcInxcIikpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBob3RrZXkuc3BsaXQoXCJ8XCIpO1xuICAgICAgICBmb3IgKGNvbnN0IHBhcnQgb2YgcGFydHMpIHtcbiAgICAgICAgICAgIGlmIChpc0hvdGtleUlubmVyKHBhcnQsIGFyZ3MpKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHdhbnRDdHJsID0gZmFsc2U7XG4gICAgbGV0IHdhbnRTaGlmdCA9IGZhbHNlO1xuICAgIGxldCB3YW50QWx0ID0gZmFsc2U7XG4gICAgbGV0IHdhbnRNZXRhID0gZmFsc2U7XG4gICAgY29uc3Qgc3BsaXQgPSBob3RrZXkuc3BsaXQoXCIrXCIpO1xuICAgIGNvbnN0IGtleSA9IHNwbGl0LnBvcCgpO1xuICAgIGlmICghY2hlY2tLZXkoa2V5LCBhcmdzKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChzcGxpdFswXSA9PT0gXCJhbnlcIilcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgZm9yIChjb25zdCBhY2NlbCBvZiBzcGxpdCkge1xuICAgICAgICBzd2l0Y2ggKGFjY2VsKSB7XG4gICAgICAgICAgICBjYXNlIFwiY3RybFwiOlxuICAgICAgICAgICAgICAgIHdhbnRDdHJsID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzaGlmdFwiOlxuICAgICAgICAgICAgICAgIHdhbnRTaGlmdCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiYWx0XCI6XG4gICAgICAgICAgICAgICAgd2FudEFsdCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWV0YVwiOlxuICAgICAgICAgICAgICAgIHdhbnRNZXRhID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJwcmltYXJ5XCI6XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXJJc09TWC52YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB3YW50TWV0YSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB3YW50Q3RybCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoYXJncy5hbHRLZXkgPT09IHdhbnRBbHQgJiYgYXJncy5jdHJsS2V5ID09PSB3YW50Q3RybCAmJiBhcmdzLnNoaWZ0S2V5ID09PSB3YW50U2hpZnQgJiYgYXJncy5tZXRhS2V5ID09PSB3YW50TWV0YSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1ob3RrZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/is-hotkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combineRects: () => (/* binding */ combineRects),\n/* harmony export */   getClosestRect: () => (/* binding */ getClosestRect),\n/* harmony export */   hugRectToTarget: () => (/* binding */ hugRectToTarget),\n/* harmony export */   intersectRect: () => (/* binding */ intersectRect),\n/* harmony export */   pointInRect: () => (/* binding */ pointInRect),\n/* harmony export */   rectContains: () => (/* binding */ rectContains),\n/* harmony export */   splitRectIntoRegions: () => (/* binding */ splitRectIntoRegions)\n/* harmony export */ });\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* eslint-disable unicorn/prefer-ternary */\n\nfunction getClosestRect(rect, px, py, allowedDirections) {\n    if (allowedDirections === \"any\")\n        return combineRects(rect, { x: px, y: py, width: 1, height: 1 });\n    if (allowedDirections === \"vertical\")\n        px = rect.x;\n    if (allowedDirections === \"horizontal\")\n        py = rect.y;\n    // Check if the point is inside the rectangle\n    if ((0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.itemIsInRect)([px, py], rect)) {\n        return undefined;\n    }\n    // Calculate distances to the closest edges\n    const distanceToLeft = px - rect.x;\n    const distanceToRight = rect.x + rect.width - px;\n    const distanceToTop = py - rect.y + 1;\n    const distanceToBottom = rect.y + rect.height - py;\n    // Find the minimum distance\n    const minDistance = Math.min(allowedDirections === \"vertical\" ? Number.MAX_SAFE_INTEGER : distanceToLeft, allowedDirections === \"vertical\" ? Number.MAX_SAFE_INTEGER : distanceToRight, allowedDirections === \"horizontal\" ? Number.MAX_SAFE_INTEGER : distanceToTop, allowedDirections === \"horizontal\" ? Number.MAX_SAFE_INTEGER : distanceToBottom);\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (minDistance === distanceToBottom) {\n        return { x: rect.x, y: rect.y + rect.height, width: rect.width, height: py - rect.y - rect.height + 1 };\n    }\n    else if (minDistance === distanceToTop) {\n        return { x: rect.x, y: py, width: rect.width, height: rect.y - py };\n    }\n    else if (minDistance === distanceToRight) {\n        return { x: rect.x + rect.width, y: rect.y, width: px - rect.x - rect.width + 1, height: rect.height };\n    }\n    else {\n        return { x: px, y: rect.y, width: rect.x - px, height: rect.height };\n    }\n}\nfunction intersectRect(x1, y1, w1, h1, x2, y2, w2, h2) {\n    return x1 <= x2 + w2 && x2 <= x1 + w1 && y1 <= y2 + h2 && y2 <= y1 + h1;\n}\nfunction pointInRect(rect, x, y) {\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n}\nfunction combineRects(a, b) {\n    const x = Math.min(a.x, b.x);\n    const y = Math.min(a.y, b.y);\n    const width = Math.max(a.x + a.width, b.x + b.width) - x;\n    const height = Math.max(a.y + a.height, b.y + b.height) - y;\n    return { x, y, width, height };\n}\nfunction rectContains(a, b) {\n    return a.x <= b.x && a.y <= b.y && a.x + a.width >= b.x + b.width && a.y + a.height >= b.y + b.height;\n}\n/**\n * This function is absolutely critical for the performance of the fill handle and highlight regions. If you don't\n * hug rectanges when they are dashed and they are huge you will get giant GPU stalls. The reason for the mod is\n * if you don't respect the dash stroke size you will get weird artificts as the rectangle changes sizes (the dashes\n * won't line up from one frame to the next)\n */\nfunction hugRectToTarget(rect, width, height, mod) {\n    // Combine checks for early return\n    if (rect.x > width ||\n        rect.y > height ||\n        (rect.x < 0 && rect.y < 0 && rect.x + rect.width > width && rect.y + rect.height > height)) {\n        return undefined;\n    }\n    // Direct return if the rectangle is completely within bounds\n    if (rect.x >= 0 && rect.y >= 0 && rect.x + rect.width <= width && rect.y + rect.height <= height) {\n        return rect;\n    }\n    // Pre-compute constants for boundaries, we are giving ourselves slop here because we don't want to have weird\n    // issues when scaling is applied. 4px is more than enough slop.\n    const leftMax = -4;\n    const topMax = -4;\n    const rightMax = width + 4;\n    const bottomMax = height + 4;\n    // Pre-compute boundary overflows\n    const leftOverflow = leftMax - rect.x;\n    const rightOverflow = rect.x + rect.width - rightMax;\n    const topOverflow = topMax - rect.y;\n    const bottomOverflow = rect.y + rect.height - bottomMax;\n    // Adjust if necessary, using simplified calculations\n    const left = leftOverflow > 0 ? rect.x + Math.floor(leftOverflow / mod) * mod : rect.x;\n    const right = rightOverflow > 0 ? rect.x + rect.width - Math.floor(rightOverflow / mod) * mod : rect.x + rect.width;\n    const top = topOverflow > 0 ? rect.y + Math.floor(topOverflow / mod) * mod : rect.y;\n    const bottom = bottomOverflow > 0 ? rect.y + rect.height - Math.floor(bottomOverflow / mod) * mod : rect.y + rect.height;\n    return { x: left, y: top, width: right - left, height: bottom - top };\n}\nfunction splitRectIntoRegions(rect, splitIndicies, width, height, splitLocations) {\n    const [lSplit, tSplit, rSplit, bSplit] = splitIndicies;\n    const [lClip, tClip, rClip, bClip] = splitLocations;\n    const { x: inX, y: inY, width: inW, height: inH } = rect;\n    const result = [];\n    if (inW <= 0 || inH <= 0)\n        return result;\n    const inRight = inX + inW;\n    const inBottom = inY + inH;\n    // The goal is to split the inbound rect into up to 9 regions based on the provided split indicies which are\n    // more or less cut lines. The cut lines are whole numbers as is the rect. We are dividing cells on a table.\n    // In theory there can be up to 9 regions returned, so we need to be careful to make sure we get them all and\n    // not return any empty regions.\n    // compute some handy values\n    const isOverLeft = inX < lSplit;\n    const isOverTop = inY < tSplit;\n    const isOverRight = inX + inW > rSplit;\n    const isOverBottom = inY + inH > bSplit;\n    const isOverCenterVert = (inX >= lSplit && inX < rSplit) ||\n        (inRight > lSplit && inRight <= rSplit) ||\n        (inX < lSplit && inRight > rSplit);\n    const isOverCenterHoriz = (inY >= tSplit && inY < bSplit) ||\n        (inBottom > tSplit && inBottom <= bSplit) ||\n        (inY < tSplit && inBottom > bSplit);\n    const isOverCenter = isOverCenterVert && isOverCenterHoriz;\n    // center\n    if (isOverCenter) {\n        const x = Math.max(inX, lSplit);\n        const y = Math.max(inY, tSplit);\n        const right = Math.min(inRight, rSplit);\n        const bottom = Math.min(inBottom, bSplit);\n        result.push({\n            rect: { x, y, width: right - x, height: bottom - y },\n            clip: {\n                x: lClip,\n                y: tClip,\n                width: rClip - lClip + 1,\n                height: bClip - tClip + 1,\n            },\n        });\n    }\n    // top left\n    if (isOverLeft && isOverTop) {\n        const x = inX;\n        const y = inY;\n        const right = Math.min(inRight, lSplit);\n        const bottom = Math.min(inBottom, tSplit);\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: 0,\n                y: 0,\n                width: lClip + 1,\n                height: tClip + 1,\n            },\n        });\n    }\n    // top center\n    if (isOverTop && isOverCenterVert) {\n        const x = Math.max(inX, lSplit);\n        const y = inY;\n        const right = Math.min(inRight, rSplit);\n        const bottom = Math.min(inBottom, tSplit);\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: lClip,\n                y: 0,\n                width: rClip - lClip + 1,\n                height: tClip + 1,\n            },\n        });\n    }\n    // top right\n    if (isOverTop && isOverRight) {\n        const x = Math.max(inX, rSplit);\n        const y = inY;\n        const right = inRight;\n        const bottom = Math.min(inBottom, tSplit);\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: rClip,\n                y: 0,\n                width: width - rClip + 1,\n                height: tClip + 1,\n            },\n        });\n    }\n    // center left\n    if (isOverLeft && isOverCenterHoriz) {\n        const x = inX;\n        const y = Math.max(inY, tSplit);\n        const right = Math.min(inRight, lSplit);\n        const bottom = Math.min(inBottom, bSplit);\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: 0,\n                y: tClip,\n                width: lClip + 1,\n                height: bClip - tClip + 1,\n            },\n        });\n    }\n    // center right\n    if (isOverRight && isOverCenterHoriz) {\n        const x = Math.max(inX, rSplit);\n        const y = Math.max(inY, tSplit);\n        const right = inRight;\n        const bottom = Math.min(inBottom, bSplit);\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: rClip,\n                y: tClip,\n                width: width - rClip + 1,\n                height: bClip - tClip + 1,\n            },\n        });\n    }\n    // bottom left\n    if (isOverLeft && isOverBottom) {\n        const x = inX;\n        const y = Math.max(inY, bSplit);\n        const right = Math.min(inRight, lSplit);\n        const bottom = inBottom;\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: 0,\n                y: bClip,\n                width: lClip + 1,\n                height: height - bClip + 1,\n            },\n        });\n    }\n    // bottom center\n    if (isOverBottom && isOverCenterVert) {\n        const x = Math.max(inX, lSplit);\n        const y = Math.max(inY, bSplit);\n        const right = Math.min(inRight, rSplit);\n        const bottom = inBottom;\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: lClip,\n                y: bClip,\n                width: rClip - lClip + 1,\n                height: height - bClip + 1,\n            },\n        });\n    }\n    // bottom right\n    if (isOverRight && isOverBottom) {\n        const x = Math.max(inX, rSplit);\n        const y = Math.max(inY, bSplit);\n        const right = inRight;\n        const bottom = inBottom;\n        result.push({\n            rect: {\n                x,\n                y,\n                width: right - x,\n                height: bottom - y,\n            },\n            clip: {\n                x: rClip,\n                y: bClip,\n                width: width - rClip + 1,\n                height: height - bClip + 1,\n            },\n        });\n    }\n    return result;\n}\n//# sourceMappingURL=math.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderStateProvider: () => (/* binding */ RenderStateProvider),\n/* harmony export */   WindowingTrackerBase: () => (/* binding */ WindowingTrackerBase),\n/* harmony export */   packColRowToNumber: () => (/* binding */ packColRowToNumber),\n/* harmony export */   unpackCol: () => (/* binding */ unpackCol),\n/* harmony export */   unpackNumberToColRow: () => (/* binding */ unpackNumberToColRow),\n/* harmony export */   unpackRow: () => (/* binding */ unpackRow)\n/* harmony export */ });\n/* harmony import */ var _support_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n\n// max safe int 2^53 - 1 (minus 1 omitted from here on)\n// max safe columns is 2^21 or 2,097,151\n// max safe rows is 2^32 or 4,294,967,295\n// If 3 rows render as an inch, then the max safe height is 1,431,655,765 inches or 22,426,868 miles\n// the distance to the moon is 238,900 miles, so this would give you a data grid that goes to the moon and back 94 times\n// seems fine\nconst rowShift = 1 << 21;\nfunction packColRowToNumber(col, row) {\n    return (row + 2) * rowShift + col;\n}\nfunction unpackCol(packed) {\n    return packed % rowShift;\n}\nfunction unpackRow(packed) {\n    return Math.floor(packed / rowShift) - 2;\n}\nfunction unpackNumberToColRow(packed) {\n    const col = unpackCol(packed);\n    const row = unpackRow(packed);\n    return [col, row];\n}\nclass WindowingTrackerBase {\n    visibleWindow = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n    freezeCols = 0;\n    freezeRows = [];\n    isInWindow = (packed) => {\n        const col = unpackCol(packed);\n        const row = unpackRow(packed);\n        const w = this.visibleWindow;\n        const colInWindow = (col >= w.x && col <= w.x + w.width) || col < this.freezeCols;\n        const rowInWindow = (row >= w.y && row <= w.y + w.height) || this.freezeRows.includes(row);\n        return colInWindow && rowInWindow;\n    };\n    setWindow(newWindow, freezeCols, freezeRows) {\n        if (this.visibleWindow.x === newWindow.x &&\n            this.visibleWindow.y === newWindow.y &&\n            this.visibleWindow.width === newWindow.width &&\n            this.visibleWindow.height === newWindow.height &&\n            this.freezeCols === freezeCols &&\n            (0,_support_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(this.freezeRows, freezeRows))\n            return;\n        this.visibleWindow = newWindow;\n        this.freezeCols = freezeCols;\n        this.freezeRows = freezeRows;\n        this.clearOutOfWindow();\n    }\n}\nclass RenderStateProvider extends WindowingTrackerBase {\n    cache = new Map();\n    setValue = (location, state) => {\n        this.cache.set(packColRowToNumber(location[0], location[1]), state);\n    };\n    getValue = (location) => {\n        return this.cache.get(packColRowToNumber(location[0], location[1]));\n    };\n    clearOutOfWindow = () => {\n        for (const [key] of this.cache.entries()) {\n            if (!this.isInWindow(key)) {\n                this.cache.delete(key);\n            }\n        }\n    };\n}\n//# sourceMappingURL=render-state-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL3JlbmRlci1zdGF0ZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2NvbW1vbi9yZW5kZXItc3RhdGUtcHJvdmlkZXIuanM/NGM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWVwRXF1YWwgfSBmcm9tIFwiLi9zdXBwb3J0LmpzXCI7XG4vLyBtYXggc2FmZSBpbnQgMl41MyAtIDEgKG1pbnVzIDEgb21pdHRlZCBmcm9tIGhlcmUgb24pXG4vLyBtYXggc2FmZSBjb2x1bW5zIGlzIDJeMjEgb3IgMiwwOTcsMTUxXG4vLyBtYXggc2FmZSByb3dzIGlzIDJeMzIgb3IgNCwyOTQsOTY3LDI5NVxuLy8gSWYgMyByb3dzIHJlbmRlciBhcyBhbiBpbmNoLCB0aGVuIHRoZSBtYXggc2FmZSBoZWlnaHQgaXMgMSw0MzEsNjU1LDc2NSBpbmNoZXMgb3IgMjIsNDI2LDg2OCBtaWxlc1xuLy8gdGhlIGRpc3RhbmNlIHRvIHRoZSBtb29uIGlzIDIzOCw5MDAgbWlsZXMsIHNvIHRoaXMgd291bGQgZ2l2ZSB5b3UgYSBkYXRhIGdyaWQgdGhhdCBnb2VzIHRvIHRoZSBtb29uIGFuZCBiYWNrIDk0IHRpbWVzXG4vLyBzZWVtcyBmaW5lXG5jb25zdCByb3dTaGlmdCA9IDEgPDwgMjE7XG5leHBvcnQgZnVuY3Rpb24gcGFja0NvbFJvd1RvTnVtYmVyKGNvbCwgcm93KSB7XG4gICAgcmV0dXJuIChyb3cgKyAyKSAqIHJvd1NoaWZ0ICsgY29sO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVucGFja0NvbChwYWNrZWQpIHtcbiAgICByZXR1cm4gcGFja2VkICUgcm93U2hpZnQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5wYWNrUm93KHBhY2tlZCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKHBhY2tlZCAvIHJvd1NoaWZ0KSAtIDI7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5wYWNrTnVtYmVyVG9Db2xSb3cocGFja2VkKSB7XG4gICAgY29uc3QgY29sID0gdW5wYWNrQ29sKHBhY2tlZCk7XG4gICAgY29uc3Qgcm93ID0gdW5wYWNrUm93KHBhY2tlZCk7XG4gICAgcmV0dXJuIFtjb2wsIHJvd107XG59XG5leHBvcnQgY2xhc3MgV2luZG93aW5nVHJhY2tlckJhc2Uge1xuICAgIHZpc2libGVXaW5kb3cgPSB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIHdpZHRoOiAwLFxuICAgICAgICBoZWlnaHQ6IDAsXG4gICAgfTtcbiAgICBmcmVlemVDb2xzID0gMDtcbiAgICBmcmVlemVSb3dzID0gW107XG4gICAgaXNJbldpbmRvdyA9IChwYWNrZWQpID0+IHtcbiAgICAgICAgY29uc3QgY29sID0gdW5wYWNrQ29sKHBhY2tlZCk7XG4gICAgICAgIGNvbnN0IHJvdyA9IHVucGFja1JvdyhwYWNrZWQpO1xuICAgICAgICBjb25zdCB3ID0gdGhpcy52aXNpYmxlV2luZG93O1xuICAgICAgICBjb25zdCBjb2xJbldpbmRvdyA9IChjb2wgPj0gdy54ICYmIGNvbCA8PSB3LnggKyB3LndpZHRoKSB8fCBjb2wgPCB0aGlzLmZyZWV6ZUNvbHM7XG4gICAgICAgIGNvbnN0IHJvd0luV2luZG93ID0gKHJvdyA+PSB3LnkgJiYgcm93IDw9IHcueSArIHcuaGVpZ2h0KSB8fCB0aGlzLmZyZWV6ZVJvd3MuaW5jbHVkZXMocm93KTtcbiAgICAgICAgcmV0dXJuIGNvbEluV2luZG93ICYmIHJvd0luV2luZG93O1xuICAgIH07XG4gICAgc2V0V2luZG93KG5ld1dpbmRvdywgZnJlZXplQ29scywgZnJlZXplUm93cykge1xuICAgICAgICBpZiAodGhpcy52aXNpYmxlV2luZG93LnggPT09IG5ld1dpbmRvdy54ICYmXG4gICAgICAgICAgICB0aGlzLnZpc2libGVXaW5kb3cueSA9PT0gbmV3V2luZG93LnkgJiZcbiAgICAgICAgICAgIHRoaXMudmlzaWJsZVdpbmRvdy53aWR0aCA9PT0gbmV3V2luZG93LndpZHRoICYmXG4gICAgICAgICAgICB0aGlzLnZpc2libGVXaW5kb3cuaGVpZ2h0ID09PSBuZXdXaW5kb3cuaGVpZ2h0ICYmXG4gICAgICAgICAgICB0aGlzLmZyZWV6ZUNvbHMgPT09IGZyZWV6ZUNvbHMgJiZcbiAgICAgICAgICAgIGRlZXBFcXVhbCh0aGlzLmZyZWV6ZVJvd3MsIGZyZWV6ZVJvd3MpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnZpc2libGVXaW5kb3cgPSBuZXdXaW5kb3c7XG4gICAgICAgIHRoaXMuZnJlZXplQ29scyA9IGZyZWV6ZUNvbHM7XG4gICAgICAgIHRoaXMuZnJlZXplUm93cyA9IGZyZWV6ZVJvd3M7XG4gICAgICAgIHRoaXMuY2xlYXJPdXRPZldpbmRvdygpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW5kZXJTdGF0ZVByb3ZpZGVyIGV4dGVuZHMgV2luZG93aW5nVHJhY2tlckJhc2Uge1xuICAgIGNhY2hlID0gbmV3IE1hcCgpO1xuICAgIHNldFZhbHVlID0gKGxvY2F0aW9uLCBzdGF0ZSkgPT4ge1xuICAgICAgICB0aGlzLmNhY2hlLnNldChwYWNrQ29sUm93VG9OdW1iZXIobG9jYXRpb25bMF0sIGxvY2F0aW9uWzFdKSwgc3RhdGUpO1xuICAgIH07XG4gICAgZ2V0VmFsdWUgPSAobG9jYXRpb24pID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuZ2V0KHBhY2tDb2xSb3dUb051bWJlcihsb2NhdGlvblswXSwgbG9jYXRpb25bMV0pKTtcbiAgICB9O1xuICAgIGNsZWFyT3V0T2ZXaW5kb3cgPSAoKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleV0gb2YgdGhpcy5jYWNoZS5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pc0luV2luZG93KGtleSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbmRlci1zdGF0ZS1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/resize-detector.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/resize-detector.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useResizeDetector: () => (/* binding */ useResizeDetector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\n\nfunction useResizeDetector(initialSize) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        width: initialSize?.[0],\n        height: initialSize?.[1],\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n        const resizeCallback = entries => {\n            for (const entry of entries) {\n                const { width, height } = (entry && entry.contentRect) || {};\n                setSize(cv => (cv.width === width && cv.height === height ? cv : { width, height }));\n            }\n        };\n        const resizeObserver = new window.ResizeObserver(resizeCallback);\n        if (ref.current) {\n            resizeObserver.observe(ref.current, undefined);\n        }\n        return () => {\n            resizeObserver.disconnect();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ref.current]);\n    return { ref, ...size };\n}\n//# sourceMappingURL=resize-detector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL3Jlc2l6ZS1kZXRlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQzBEO0FBQ25EO0FBQ1AsZ0JBQWdCLDZDQUFNO0FBQ3RCLDRCQUE0QiwrQ0FBUTtBQUNwQztBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksc0RBQWU7QUFDbkI7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEMsbUZBQW1GLGVBQWU7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jb21tb24vcmVzaXplLWRldGVjdG9yLmpzP2M4ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L3N0cmljdC1ib29sZWFuLWV4cHJlc3Npb25zICovXG5pbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZXNpemVEZXRlY3Rvcihpbml0aWFsU2l6ZSkge1xuICAgIGNvbnN0IHJlZiA9IHVzZVJlZihudWxsKTtcbiAgICBjb25zdCBbc2l6ZSwgc2V0U2l6ZV0gPSB1c2VTdGF0ZSh7XG4gICAgICAgIHdpZHRoOiBpbml0aWFsU2l6ZT8uWzBdLFxuICAgICAgICBoZWlnaHQ6IGluaXRpYWxTaXplPy5bMV0sXG4gICAgfSk7XG4gICAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzaXplQ2FsbGJhY2sgPSBlbnRyaWVzID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgZW50cmllcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gKGVudHJ5ICYmIGVudHJ5LmNvbnRlbnRSZWN0KSB8fCB7fTtcbiAgICAgICAgICAgICAgICBzZXRTaXplKGN2ID0+IChjdi53aWR0aCA9PT0gd2lkdGggJiYgY3YuaGVpZ2h0ID09PSBoZWlnaHQgPyBjdiA6IHsgd2lkdGgsIGhlaWdodCB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlc2l6ZU9ic2VydmVyID0gbmV3IHdpbmRvdy5SZXNpemVPYnNlcnZlcihyZXNpemVDYWxsYmFjayk7XG4gICAgICAgIGlmIChyZWYuY3VycmVudCkge1xuICAgICAgICAgICAgcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZShyZWYuY3VycmVudCwgdW5kZWZpbmVkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgcmVzaXplT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgfSwgW3JlZi5jdXJyZW50XSk7XG4gICAgcmV0dXJuIHsgcmVmLCAuLi5zaXplIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNpemUtZGV0ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/resize-detector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeContext: () => (/* binding */ ThemeContext),\n/* harmony export */   getDataEditorTheme: () => (/* binding */ getDataEditorTheme),\n/* harmony export */   makeCSSStyle: () => (/* binding */ makeCSSStyle),\n/* harmony export */   mergeAndRealizeTheme: () => (/* binding */ mergeAndRealizeTheme),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n\n\n// theme variable precidence\n/** @category Theme */\nfunction makeCSSStyle(theme) {\n    return {\n        \"--gdg-accent-color\": theme.accentColor,\n        \"--gdg-accent-fg\": theme.accentFg,\n        \"--gdg-accent-light\": theme.accentLight,\n        \"--gdg-text-dark\": theme.textDark,\n        \"--gdg-text-medium\": theme.textMedium,\n        \"--gdg-text-light\": theme.textLight,\n        \"--gdg-text-bubble\": theme.textBubble,\n        \"--gdg-bg-icon-header\": theme.bgIconHeader,\n        \"--gdg-fg-icon-header\": theme.fgIconHeader,\n        \"--gdg-text-header\": theme.textHeader,\n        \"--gdg-text-group-header\": theme.textGroupHeader ?? theme.textHeader,\n        \"--gdg-text-header-selected\": theme.textHeaderSelected,\n        \"--gdg-bg-cell\": theme.bgCell,\n        \"--gdg-bg-cell-medium\": theme.bgCellMedium,\n        \"--gdg-bg-header\": theme.bgHeader,\n        \"--gdg-bg-header-has-focus\": theme.bgHeaderHasFocus,\n        \"--gdg-bg-header-hovered\": theme.bgHeaderHovered,\n        \"--gdg-bg-bubble\": theme.bgBubble,\n        \"--gdg-bg-bubble-selected\": theme.bgBubbleSelected,\n        \"--gdg-bg-search-result\": theme.bgSearchResult,\n        \"--gdg-border-color\": theme.borderColor,\n        \"--gdg-horizontal-border-color\": theme.horizontalBorderColor ?? theme.borderColor,\n        \"--gdg-drilldown-border\": theme.drilldownBorder,\n        \"--gdg-link-color\": theme.linkColor,\n        \"--gdg-cell-horizontal-padding\": `${theme.cellHorizontalPadding}px`,\n        \"--gdg-cell-vertical-padding\": `${theme.cellVerticalPadding}px`,\n        \"--gdg-header-font-style\": theme.headerFontStyle,\n        \"--gdg-base-font-style\": theme.baseFontStyle,\n        \"--gdg-marker-font-style\": theme.markerFontStyle,\n        \"--gdg-font-family\": theme.fontFamily,\n        \"--gdg-editor-font-size\": theme.editorFontSize,\n        ...(theme.resizeIndicatorColor === undefined\n            ? {}\n            : { \"--gdg-resize-indicator-color\": theme.resizeIndicatorColor }),\n        ...(theme.headerBottomBorderColor === undefined\n            ? {}\n            : { \"--gdg-header-bottom-border-color\": theme.headerBottomBorderColor }),\n        ...(theme.roundingRadius === undefined ? {} : { \"--gdg-rounding-radius\": `${theme.roundingRadius}px` }),\n    };\n}\nconst dataEditorBaseTheme = {\n    accentColor: \"#4F5DFF\",\n    accentFg: \"#FFFFFF\",\n    accentLight: \"rgba(62, 116, 253, 0.1)\",\n    textDark: \"#313139\",\n    textMedium: \"#737383\",\n    textLight: \"#B2B2C0\",\n    textBubble: \"#313139\",\n    bgIconHeader: \"#737383\",\n    fgIconHeader: \"#FFFFFF\",\n    textHeader: \"#313139\",\n    textGroupHeader: \"#313139BB\",\n    textHeaderSelected: \"#FFFFFF\",\n    bgCell: \"#FFFFFF\",\n    bgCellMedium: \"#FAFAFB\",\n    bgHeader: \"#F7F7F8\",\n    bgHeaderHasFocus: \"#E9E9EB\",\n    bgHeaderHovered: \"#EFEFF1\",\n    bgBubble: \"#EDEDF3\",\n    bgBubbleSelected: \"#FFFFFF\",\n    bgSearchResult: \"#fff9e3\",\n    borderColor: \"rgba(115, 116, 131, 0.16)\",\n    drilldownBorder: \"rgba(0, 0, 0, 0)\",\n    linkColor: \"#353fb5\",\n    cellHorizontalPadding: 8,\n    cellVerticalPadding: 3,\n    headerIconSize: 18,\n    headerFontStyle: \"600 13px\",\n    baseFontStyle: \"13px\",\n    markerFontStyle: \"9px\",\n    fontFamily: \"Inter, Roboto, -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Ubuntu, noto, arial, sans-serif\",\n    editorFontSize: \"13px\",\n    lineHeight: 1.4, //unitless scaler depends on your font\n};\n/** @category Theme */\nfunction getDataEditorTheme() {\n    return dataEditorBaseTheme;\n}\n/** @category Theme */\nconst ThemeContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(dataEditorBaseTheme);\n/** @category Hooks */\nfunction useTheme() {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ThemeContext);\n}\nfunction mergeAndRealizeTheme(theme, ...overlays) {\n    const merged = { ...theme };\n    for (const overlay of overlays) {\n        if (overlay !== undefined) {\n            for (const key in overlay) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (overlay.hasOwnProperty(key)) {\n                    if (key === \"bgCell\") {\n                        merged[key] = (0,_internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_1__.blend)(overlay[key], merged[key]);\n                    }\n                    else {\n                        merged[key] = overlay[key];\n                    }\n                }\n            }\n        }\n    }\n    if (merged.headerFontFull === undefined ||\n        theme.fontFamily !== merged.fontFamily ||\n        theme.headerFontStyle !== merged.headerFontStyle) {\n        merged.headerFontFull = `${merged.headerFontStyle} ${merged.fontFamily}`;\n    }\n    if (merged.baseFontFull === undefined ||\n        theme.fontFamily !== merged.fontFamily ||\n        theme.baseFontStyle !== merged.baseFontStyle) {\n        merged.baseFontFull = `${merged.baseFontStyle} ${merged.fontFamily}`;\n    }\n    if (merged.markerFontFull === undefined ||\n        theme.fontFamily !== merged.fontFamily ||\n        theme.markerFontStyle !== merged.markerFontStyle) {\n        merged.markerFontFull = `${merged.markerFontStyle} ${merged.fontFamily}`;\n    }\n    return merged;\n}\n//# sourceMappingURL=styles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   assertNever: () => (/* binding */ assertNever),\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual),\n/* harmony export */   maybe: () => (/* binding */ maybe),\n/* harmony export */   proveType: () => (/* binding */ proveType)\n/* harmony export */ });\nfunction proveType(_val) {\n    // do nothing, just prove the compiler thinks the types match\n}\nfunction panic(message = \"This should not happen\") {\n    throw new Error(message);\n}\nfunction assert(fact, message = \"Assertion failed\") {\n    if (fact)\n        return;\n    return panic(message);\n}\nfunction assertNever(_never, msg) {\n    return panic(msg ?? \"Hell froze over\");\n}\nfunction maybe(fn, defaultValue) {\n    try {\n        return fn();\n    }\n    catch {\n        return defaultValue;\n    }\n}\n// The following code is licensed under the MIT license to Luke Edwards\n// Original license and code can be found here: https://github.com/lukeed/dequal/blob/master/license\n// I have merely \"ported\" it to be TS (any any any) and directly included it for convenience.\nconst has = Object.prototype.hasOwnProperty;\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction deepEqual(foo, bar) {\n    let ctor, len;\n    if (foo === bar)\n        return true;\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n        if (ctor === Date)\n            return foo.getTime() === bar.getTime();\n        if (ctor === RegExp)\n            return foo.toString() === bar.toString();\n        if (ctor === Array) {\n            if ((len = foo.length) === bar.length) {\n                while (len-- && deepEqual(foo[len], bar[len]))\n                    ;\n            }\n            return len === -1;\n        }\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (!ctor || typeof foo === \"object\") {\n            len = 0;\n            // eslint-disable-next-line guard-for-in\n            for (ctor in foo) {\n                if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))\n                    return false;\n                if (!(ctor in bar) || !deepEqual(foo[ctor], bar[ctor]))\n                    return false;\n            }\n            return Object.keys(bar).length === len;\n        }\n    }\n    return foo !== foo && bar !== bar;\n}\n//# sourceMappingURL=support.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vY29tbW9uL3N1cHBvcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9jb21tb24vc3VwcG9ydC5qcz83NDhhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwcm92ZVR5cGUoX3ZhbCkge1xuICAgIC8vIGRvIG5vdGhpbmcsIGp1c3QgcHJvdmUgdGhlIGNvbXBpbGVyIHRoaW5rcyB0aGUgdHlwZXMgbWF0Y2hcbn1cbmZ1bmN0aW9uIHBhbmljKG1lc3NhZ2UgPSBcIlRoaXMgc2hvdWxkIG5vdCBoYXBwZW5cIikge1xuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnQoZmFjdCwgbWVzc2FnZSA9IFwiQXNzZXJ0aW9uIGZhaWxlZFwiKSB7XG4gICAgaWYgKGZhY3QpXG4gICAgICAgIHJldHVybjtcbiAgICByZXR1cm4gcGFuaWMobWVzc2FnZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TmV2ZXIoX25ldmVyLCBtc2cpIHtcbiAgICByZXR1cm4gcGFuaWMobXNnID8/IFwiSGVsbCBmcm96ZSBvdmVyXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1heWJlKGZuLCBkZWZhdWx0VmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgIH1cbn1cbi8vIFRoZSBmb2xsb3dpbmcgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgdG8gTHVrZSBFZHdhcmRzXG4vLyBPcmlnaW5hbCBsaWNlbnNlIGFuZCBjb2RlIGNhbiBiZSBmb3VuZCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vbHVrZWVkL2RlcXVhbC9ibG9iL21hc3Rlci9saWNlbnNlXG4vLyBJIGhhdmUgbWVyZWx5IFwicG9ydGVkXCIgaXQgdG8gYmUgVFMgKGFueSBhbnkgYW55KSBhbmQgZGlyZWN0bHkgaW5jbHVkZWQgaXQgZm9yIGNvbnZlbmllbmNlLlxuY29uc3QgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzb25hcmpzL2NvZ25pdGl2ZS1jb21wbGV4aXR5XG5leHBvcnQgZnVuY3Rpb24gZGVlcEVxdWFsKGZvbywgYmFyKSB7XG4gICAgbGV0IGN0b3IsIGxlbjtcbiAgICBpZiAoZm9vID09PSBiYXIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvc3RyaWN0LWJvb2xlYW4tZXhwcmVzc2lvbnNcbiAgICBpZiAoZm9vICYmIGJhciAmJiAoY3RvciA9IGZvby5jb25zdHJ1Y3RvcikgPT09IGJhci5jb25zdHJ1Y3Rvcikge1xuICAgICAgICBpZiAoY3RvciA9PT0gRGF0ZSlcbiAgICAgICAgICAgIHJldHVybiBmb28uZ2V0VGltZSgpID09PSBiYXIuZ2V0VGltZSgpO1xuICAgICAgICBpZiAoY3RvciA9PT0gUmVnRXhwKVxuICAgICAgICAgICAgcmV0dXJuIGZvby50b1N0cmluZygpID09PSBiYXIudG9TdHJpbmcoKTtcbiAgICAgICAgaWYgKGN0b3IgPT09IEFycmF5KSB7XG4gICAgICAgICAgICBpZiAoKGxlbiA9IGZvby5sZW5ndGgpID09PSBiYXIubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGxlbi0tICYmIGRlZXBFcXVhbChmb29bbGVuXSwgYmFyW2xlbl0pKVxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbGVuID09PSAtMTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3N0cmljdC1ib29sZWFuLWV4cHJlc3Npb25zXG4gICAgICAgIGlmICghY3RvciB8fCB0eXBlb2YgZm9vID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBsZW4gPSAwO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgICAgICAgICAgZm9yIChjdG9yIGluIGZvbykge1xuICAgICAgICAgICAgICAgIGlmIChoYXMuY2FsbChmb28sIGN0b3IpICYmICsrbGVuICYmICFoYXMuY2FsbChiYXIsIGN0b3IpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCEoY3RvciBpbiBiYXIpIHx8ICFkZWVwRXF1YWwoZm9vW2N0b3JdLCBiYXJbY3Rvcl0pKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoYmFyKS5sZW5ndGggPT09IGxlbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZm9vICE9PSBmb28gJiYgYmFyICE9PSBiYXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXBwb3J0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkmark: () => (/* binding */ Checkmark),\n/* harmony export */   EditPencil: () => (/* binding */ EditPencil),\n/* harmony export */   degreesToRadians: () => (/* binding */ degreesToRadians),\n/* harmony export */   direction: () => (/* binding */ direction),\n/* harmony export */   getScrollBarWidth: () => (/* binding */ getScrollBarWidth),\n/* harmony export */   getSquareBB: () => (/* binding */ getSquareBB),\n/* harmony export */   getSquareWidth: () => (/* binding */ getSquareWidth),\n/* harmony export */   getSquareXPosFromAlign: () => (/* binding */ getSquareXPosFromAlign),\n/* harmony export */   makeAccessibilityStringForArray: () => (/* binding */ makeAccessibilityStringForArray),\n/* harmony export */   pointIsWithinBB: () => (/* binding */ pointIsWithinBB),\n/* harmony export */   useDebouncedMemo: () => (/* binding */ useDebouncedMemo),\n/* harmony export */   useDeepMemo: () => (/* binding */ useDeepMemo),\n/* harmony export */   useEventListener: () => (/* binding */ useEventListener),\n/* harmony export */   useStateWithReactiveInput: () => (/* binding */ useStateWithReactiveInput),\n/* harmony export */   whenDefined: () => (/* binding */ whenDefined)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var lodash_debounce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/debounce.js */ \"(ssr)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var _support_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n\n\n\nfunction useEventListener(eventName, handler, element, passive, capture = false) {\n    // Create a ref that stores handler\n    const savedHandler = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    // Update ref.current value if handler changes.\n    // This allows our effect below to always get latest handler ...\n    // ... without us needing to pass it in effect deps array ...\n    // ... and potentially cause effect to re-run every render.\n    savedHandler.current = handler;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        // Make sure element supports addEventListener\n        if (element === null || element.addEventListener === undefined)\n            return;\n        const el = element;\n        // Create event listener that calls handler function stored in ref\n        const eventListener = (event) => {\n            savedHandler.current?.call(el, event);\n        };\n        el.addEventListener(eventName, eventListener, { passive, capture });\n        // Remove event listener on cleanup\n        return () => {\n            el.removeEventListener(eventName, eventListener, { capture });\n        };\n    }, [eventName, element, passive, capture] // Re-run if eventName or element changes\n    );\n}\nfunction whenDefined(obj, result) {\n    return obj === undefined ? undefined : result;\n}\nconst PI = Math.PI;\nfunction degreesToRadians(degrees) {\n    return (degrees * PI) / 180;\n}\nconst getSquareBB = (posX, posY, squareSideLength) => ({\n    x1: posX - squareSideLength / 2,\n    y1: posY - squareSideLength / 2,\n    x2: posX + squareSideLength / 2,\n    y2: posY + squareSideLength / 2,\n});\nconst getSquareXPosFromAlign = (alignment, containerX, containerWidth, horizontalPadding, squareWidth) => {\n    switch (alignment) {\n        case \"left\":\n            return Math.floor(containerX) + horizontalPadding + squareWidth / 2;\n        case \"center\":\n            return Math.floor(containerX + containerWidth / 2);\n        case \"right\":\n            return Math.floor(containerX + containerWidth) - horizontalPadding - squareWidth / 2;\n    }\n};\nconst getSquareWidth = (maxSize, containerHeight, verticalPadding) => Math.min(maxSize, containerHeight - verticalPadding * 2);\nconst pointIsWithinBB = (x, y, bb) => bb.x1 <= x && x <= bb.x2 && bb.y1 <= y && y <= bb.y2;\nconst EditPencil = (props) => {\n    const fg = props.fgColor ?? \"currentColor\";\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", { viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12.7073 7.05029C7.87391 11.8837 10.4544 9.30322 6.03024 13.7273C5.77392 13.9836 5.58981 14.3071 5.50189 14.6587L4.52521 18.5655C4.38789 19.1148 4.88543 19.6123 5.43472 19.475L9.34146 18.4983C9.69313 18.4104 10.0143 18.2286 10.2706 17.9722L16.9499 11.2929\", stroke: fg, strokeWidth: \"1.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", vectorEffect: \"non-scaling-stroke\" }),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M20.4854 4.92901L19.0712 3.5148C18.2901 2.73375 17.0238 2.73375 16.2428 3.5148L14.475 5.28257C15.5326 7.71912 16.4736 8.6278 18.7176 9.52521L20.4854 7.75744C21.2665 6.97639 21.2665 5.71006 20.4854 4.92901Z\", stroke: fg, strokeWidth: \"1.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", vectorEffect: \"non-scaling-stroke\" })));\n};\nconst Checkmark = (props) => {\n    const fg = props.fgColor ?? \"currentColor\";\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", { viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M19 6L10.3802 17L5.34071 11.8758\", vectorEffect: \"non-scaling-stroke\", stroke: fg, strokeWidth: \"1.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n};\nfunction useDebouncedMemo(factory, deps, time) {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(factory);\n    const mountedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => () => {\n        mountedRef.current = false;\n    }, []);\n    const debouncedSetState = react__WEBPACK_IMPORTED_MODULE_0__.useRef(lodash_debounce_js__WEBPACK_IMPORTED_MODULE_1__(x => {\n        if (mountedRef.current) {\n            setState(x);\n        }\n    }, time));\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (mountedRef.current) {\n            debouncedSetState.current(() => factory());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    return state;\n}\n// Shamelessly inline direction to avoid conflicts with 1.0 and 2.0.\nconst rtlRange = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst ltrRange = \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\" +\n    \"\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C\" +\n    \"\\uFE00-\\uFE6F\\uFEFD-\\uFFFF\";\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp(\"^[^\" + ltrRange + \"]*[\" + rtlRange + \"]\");\n/* eslint-enable no-misleading-character-class */\nfunction direction(value) {\n    return rtl.test(value) ? \"rtl\" : \"not-rtl\";\n}\nlet scrollbarWidthCache = undefined;\nfunction getScrollBarWidth() {\n    if (typeof document === \"undefined\")\n        return 0;\n    if (scrollbarWidthCache !== undefined)\n        return scrollbarWidthCache;\n    const inner = document.createElement(\"p\");\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n    const outer = document.createElement(\"div\");\n    outer.id = \"testScrollbar\";\n    outer.style.position = \"absolute\";\n    outer.style.top = \"0px\";\n    outer.style.left = \"0px\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"200px\";\n    outer.style.height = \"150px\";\n    outer.style.overflow = \"hidden\";\n    outer.append(inner);\n    document.body.append(outer);\n    const w1 = inner.offsetWidth;\n    outer.style.overflow = \"scroll\";\n    let w2 = inner.offsetWidth;\n    if (w1 === w2) {\n        w2 = outer.clientWidth;\n    }\n    outer.remove();\n    scrollbarWidthCache = w1 - w2;\n    return scrollbarWidthCache;\n}\n// Dear future reader,\n// This dumb hook is to make sure if the inputState changes, that effectively behaves like an instant \"setState\" call.\n// This is useful in a wide variety of situations. I'm too dumb to know if this is a good idea or a really dumb one.\n// I can't tell. It's like poes law but for code.\n//\n// I'm sorry.\nconst empty = Symbol();\nfunction useStateWithReactiveInput(inputState) {\n    // When [0] is not empty we will return it, [1] is always the last value we saw\n    const inputStateRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([empty, inputState]);\n    if (inputStateRef.current[1] !== inputState) {\n        // it changed, we must use thee!\n        inputStateRef.current[0] = inputState;\n    }\n    inputStateRef.current[1] = inputState;\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(inputState);\n    // crimes against humanity here\n    const [, forceRender] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const setStateOuter = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(nv => {\n        // this takes care of the case where the inputState was set, then setState gets called again but back to what\n        // the state was before the inputState changed. Since the useState effect wont trigger a render in this case\n        // we need to be very naughty and force it to see the change. Technically this may not be needed some chunk of\n        // the time (in fact most of it) but checking for it is likely to be more expensive than just over-doing it\n        const s = inputStateRef.current[0];\n        if (s !== empty) {\n            nv = typeof nv === \"function\" ? nv(s) : nv;\n            if (nv === s)\n                return; // they are setting it to what the inputState is anyway so we can just do nothing\n        }\n        if (s !== empty)\n            forceRender({});\n        setState(pv => {\n            if (typeof nv === \"function\") {\n                return nv(s === empty ? pv : s);\n            }\n            return nv;\n        });\n        inputStateRef.current[0] = empty;\n    }, []);\n    const onEmpty = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        inputStateRef.current[0] = empty;\n        forceRender({});\n    }, []);\n    return [inputStateRef.current[0] === empty ? state : inputStateRef.current[0], setStateOuter, onEmpty];\n}\nfunction makeAccessibilityStringForArray(arr) {\n    // this is basically just .join(\", \") but checks to make sure it is not going to allocate\n    // a string that is so large it might crash the browser\n    if (arr.length === 0) {\n        return \"\";\n    }\n    let index = 0;\n    let count = 0;\n    for (const str of arr) {\n        count += str.length;\n        if (count > 10000)\n            break;\n        index++;\n    }\n    return arr.slice(0, index).join(\", \");\n}\nfunction useDeepMemo(value) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(value);\n    if (!(0,_support_js__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(value, ref.current)) {\n        ref.current = value;\n    }\n    return ref.current;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor-all.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor-all.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataEditorAll: () => (/* binding */ DataEditorAll)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _data_editor_data_editor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-editor/data-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor.js\");\n/* harmony import */ var _cells_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cells/index.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/cells/index.js\");\n/* harmony import */ var _internal_data_grid_sprites_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/data-grid/sprites.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/sprites.js\");\n/* harmony import */ var _common_image_window_loader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/image-window-loader.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/image-window-loader.js\");\n\n\n\n\n\nconst DataEditorAllImpl = (p, ref) => {\n    const allSprites = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return { ..._internal_data_grid_sprites_js__WEBPACK_IMPORTED_MODULE_1__.sprites, ...p.headerIcons };\n    }, [p.headerIcons]);\n    const imageWindowLoader = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return p.imageWindowLoader ?? new _common_image_window_loader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    }, [p.imageWindowLoader]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_data_editor_data_editor_js__WEBPACK_IMPORTED_MODULE_3__.DataEditor, { ...p, renderers: _cells_index_js__WEBPACK_IMPORTED_MODULE_4__.AllCellRenderers, headerIcons: allSprites, ref: ref, imageWindowLoader: imageWindowLoader }));\n};\nconst DataEditorAll = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(DataEditorAllImpl);\n//# sourceMappingURL=data-editor-all.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3ItYWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUMyQjtBQUNOO0FBQ007QUFDVTtBQUNwRTtBQUNBLHVCQUF1QiwwQ0FBYTtBQUNwQyxpQkFBaUIsR0FBRyxtRUFBTztBQUMzQixLQUFLO0FBQ0wsOEJBQThCLDBDQUFhO0FBQzNDLDBDQUEwQyxzRUFBcUI7QUFDL0QsS0FBSztBQUNMLFlBQVksZ0RBQW1CLENBQUMsbUVBQVUsSUFBSSxpQkFBaUIsNkRBQWdCLDJFQUEyRTtBQUMxSjtBQUNPLHNCQUFzQiw2Q0FBZ0I7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9kYXRhLWVkaXRvci1hbGwuanM/OTIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IERhdGFFZGl0b3IgfSBmcm9tIFwiLi9kYXRhLWVkaXRvci9kYXRhLWVkaXRvci5qc1wiO1xuaW1wb3J0IHsgQWxsQ2VsbFJlbmRlcmVycyB9IGZyb20gXCIuL2NlbGxzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzcHJpdGVzIH0gZnJvbSBcIi4vaW50ZXJuYWwvZGF0YS1ncmlkL3Nwcml0ZXMuanNcIjtcbmltcG9ydCBJbWFnZVdpbmRvd0xvYWRlckltcGwgZnJvbSBcIi4vY29tbW9uL2ltYWdlLXdpbmRvdy1sb2FkZXIuanNcIjtcbmNvbnN0IERhdGFFZGl0b3JBbGxJbXBsID0gKHAsIHJlZikgPT4ge1xuICAgIGNvbnN0IGFsbFNwcml0ZXMgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgLi4uc3ByaXRlcywgLi4ucC5oZWFkZXJJY29ucyB9O1xuICAgIH0sIFtwLmhlYWRlckljb25zXSk7XG4gICAgY29uc3QgaW1hZ2VXaW5kb3dMb2FkZXIgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHAuaW1hZ2VXaW5kb3dMb2FkZXIgPz8gbmV3IEltYWdlV2luZG93TG9hZGVySW1wbCgpO1xuICAgIH0sIFtwLmltYWdlV2luZG93TG9hZGVyXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFFZGl0b3IsIHsgLi4ucCwgcmVuZGVyZXJzOiBBbGxDZWxsUmVuZGVyZXJzLCBoZWFkZXJJY29uczogYWxsU3ByaXRlcywgcmVmOiByZWYsIGltYWdlV2luZG93TG9hZGVyOiBpbWFnZVdpbmRvd0xvYWRlciB9KSk7XG59O1xuZXhwb3J0IGNvbnN0IERhdGFFZGl0b3JBbGwgPSBSZWFjdC5mb3J3YXJkUmVmKERhdGFFZGl0b3JBbGxJbXBsKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGEtZWRpdG9yLWFsbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor-all.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/copy-paste.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/copy-paste.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeHTML: () => (/* binding */ decodeHTML),\n/* harmony export */   getCopyBufferContents: () => (/* binding */ getCopyBufferContents)\n/* harmony export */ });\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n\n\nfunction convertCellToBuffer(cell) {\n    if (cell.copyData !== undefined) {\n        return {\n            formatted: cell.copyData,\n            rawValue: cell.copyData,\n            format: \"string\",\n        };\n    }\n    switch (cell.kind) {\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Boolean:\n            return {\n                formatted: cell.data === true\n                    ? \"TRUE\"\n                    : cell.data === false\n                        ? \"FALSE\"\n                        : cell.data === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.BooleanIndeterminate\n                            ? \"INDETERMINATE\"\n                            : \"\",\n                rawValue: cell.data,\n                format: \"boolean\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Custom:\n            return {\n                formatted: cell.copyData,\n                rawValue: cell.copyData,\n                format: \"string\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Image:\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Bubble:\n            return {\n                formatted: cell.data,\n                rawValue: cell.data,\n                format: \"string-array\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Drilldown:\n            return {\n                formatted: cell.data.map(x => x.text),\n                rawValue: cell.data.map(x => x.text),\n                format: \"string-array\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Text:\n            return {\n                formatted: cell.displayData ?? cell.data,\n                rawValue: cell.data,\n                format: \"string\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Uri:\n            return {\n                formatted: cell.displayData ?? cell.data,\n                rawValue: cell.data,\n                format: \"url\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Markdown:\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.RowID:\n            return {\n                formatted: cell.data,\n                rawValue: cell.data,\n                format: \"string\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Number:\n            return {\n                formatted: cell.displayData,\n                rawValue: cell.data,\n                format: \"number\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Loading:\n            return {\n                formatted: \"#LOADING\",\n                rawValue: \"\",\n                format: \"string\",\n            };\n        case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Protected:\n            return {\n                formatted: \"************\",\n                rawValue: \"\",\n                format: \"string\",\n            };\n        default:\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_1__.assertNever)(cell);\n    }\n}\nfunction createBufferFromGridCells(cells, columnIndexes) {\n    const copyBuffer = cells.map((row, index) => {\n        const mappedIndex = columnIndexes[index];\n        return row.map(cell => {\n            if (cell.span !== undefined && cell.span[0] !== mappedIndex)\n                return {\n                    formatted: \"\",\n                    rawValue: \"\",\n                    format: \"string\",\n                };\n            return convertCellToBuffer(cell);\n        });\n    });\n    return copyBuffer;\n}\nfunction escapeIfNeeded(str, withComma) {\n    if ((withComma ? /[\\t\\n\",]/ : /[\\t\\n\"]/).test(str)) {\n        str = `\"${str.replace(/\"/g, '\"\"')}\"`;\n    }\n    return str;\n}\nfunction createTextBuffer(copyBuffer) {\n    const lines = [];\n    for (const row of copyBuffer) {\n        const line = [];\n        for (const cell of row) {\n            if (cell.format === \"url\") {\n                line.push(cell.rawValue?.toString() ?? \"\");\n            }\n            else if (cell.format === \"string-array\") {\n                line.push(cell.formatted.map(x => escapeIfNeeded(x, true)).join(\",\"));\n            }\n            else {\n                line.push(escapeIfNeeded(cell.formatted, false));\n            }\n        }\n        lines.push(line.join(\"\\t\"));\n    }\n    return lines.join(\"\\n\");\n}\nfunction formatHtmlTextContent(text) {\n    // The following formatting for the `html` variable ensures that when pasting,\n    // spaces are preserved in both Google Sheets and Excel. This is done by:\n    // 1. Replacing tabs with four spaces for consistency. Also google sheets disallows any tabs.\n    // 2. Wrapping each space with a span element to prevent them from being collapsed or ignored during the\n    //    paste operation\n    return text.replace(/\\t/g, \"    \").replace(/ {2,}/g, match => \"<span> </span>\".repeat(match.length));\n}\nfunction formatHtmlAttributeContent(attrText) {\n    // Escape all quotes, lt, gt, and other special characters\n    return ('\"' + attrText.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") + '\"');\n}\nfunction restoreHtmlEntities(str) {\n    // Unescape all quotes, lt, gt, and other special characters\n    return str\n        .replace(/&quot;/g, '\"')\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\");\n}\nfunction createHtmlBuffer(copyBuffer) {\n    const lines = [];\n    lines.push(`<style type=\"text/css\"><!--br {mso-data-placement:same-cell;}--></style>`, \"<table><tbody>\");\n    for (const row of copyBuffer) {\n        lines.push(\"<tr>\");\n        for (const cell of row) {\n            const formatStr = `gdg-format=\"${cell.format}\"`;\n            if (cell.format === \"url\") {\n                lines.push(`<td ${formatStr}><a href=\"${cell.rawValue}\">${formatHtmlTextContent(cell.formatted)}</a></td>`);\n            }\n            else {\n                if (cell.format === \"string-array\") {\n                    lines.push(`<td ${formatStr}><ol>${cell.formatted\n                        .map((x, ind) => `<li gdg-raw-value=${formatHtmlAttributeContent(cell.rawValue[ind])}>` +\n                        formatHtmlTextContent(x) +\n                        \"</li>\")\n                        .join(\"\")}</ol></td>`);\n                }\n                else {\n                    lines.push(`<td gdg-raw-value=${formatHtmlAttributeContent(cell.rawValue?.toString() ?? \"\")} ${formatStr}>${formatHtmlTextContent(cell.formatted)}</td>`);\n                }\n            }\n        }\n        lines.push(\"</tr>\");\n    }\n    lines.push(\"</tbody></table>\");\n    return lines.join(\"\");\n}\n// This function encodes grid cells to a table object.\n// Each td in the table contains one of 3 things\n// - A string directly and the td has a `gdg-raw-value` attribute with the raw value\n// - An anchor tag with a href and the text is the formatted value\n// - An ordered list with each item containing a `gdg-raw-value` attribute with the raw value\nfunction getCopyBufferContents(cells, columnIndexes) {\n    const copyBuffer = createBufferFromGridCells(cells, columnIndexes);\n    const textPlain = createTextBuffer(copyBuffer);\n    const textHtml = createHtmlBuffer(copyBuffer);\n    return {\n        textPlain,\n        textHtml,\n    };\n}\nfunction decodeHTML(html) {\n    const fragment = document.createElement(\"html\");\n    // we dont want to retain the pasted non-breaking spaces\n    fragment.innerHTML = html.replace(/&nbsp;/g, \" \");\n    const tableEl = fragment.querySelector(\"table\");\n    if (tableEl === null)\n        return undefined;\n    const walkEl = [tableEl];\n    const result = [];\n    let current;\n    while (walkEl.length > 0) {\n        const el = walkEl.pop();\n        if (el === undefined)\n            break;\n        if (el instanceof HTMLTableElement || el.nodeName === \"TBODY\") {\n            walkEl.push(...[...el.children].reverse());\n        }\n        else if (el instanceof HTMLTableRowElement) {\n            if (current !== undefined) {\n                result.push(current);\n            }\n            current = [];\n            walkEl.push(...[...el.children].reverse());\n        }\n        else if (el instanceof HTMLTableCellElement) {\n            // be careful not to use innerText here as its behavior is not well defined for non DOM attached nodes\n            const clone = el.cloneNode(true);\n            // Apple numbers seems to always wrap the cell in a p tag and a font tag. It also puts both <br> and \\n\n            // linebreak markers in the code. This is both unneeded and causes issues with the paste code.\n            const firstTagIsPara = clone.children.length === 1 && clone.children[0].nodeName === \"P\";\n            const para = firstTagIsPara ? clone.children[0] : null;\n            const isAppleNumbers = para?.children.length === 1 && para.children[0].nodeName === \"FONT\";\n            const brs = clone.querySelectorAll(\"br\");\n            for (const br of brs) {\n                br.replaceWith(\"\\n\");\n            }\n            const attributeValue = clone.getAttribute(\"gdg-raw-value\");\n            const formatValue = (clone.getAttribute(\"gdg-format\") ?? \"string\"); // fix me at some point\n            if (clone.querySelector(\"a\") !== null) {\n                current?.push({\n                    // raw value is the href\n                    rawValue: clone.querySelector(\"a\")?.getAttribute(\"href\") ?? \"\",\n                    formatted: clone.textContent ?? \"\",\n                    format: formatValue,\n                });\n            }\n            else if (clone.querySelector(\"ol\") !== null) {\n                const rawValues = clone.querySelectorAll(\"li\");\n                current?.push({\n                    rawValue: [...rawValues].map(x => x.getAttribute(\"gdg-raw-value\") ?? \"\"),\n                    formatted: [...rawValues].map(x => x.textContent ?? \"\"),\n                    format: \"string-array\",\n                });\n            }\n            else if (attributeValue !== null) {\n                current?.push({\n                    rawValue: restoreHtmlEntities(attributeValue),\n                    formatted: clone.textContent ?? \"\",\n                    format: formatValue,\n                });\n            }\n            else {\n                let textContent = clone.textContent ?? \"\";\n                if (isAppleNumbers) {\n                    // replace any newline not preceded by a newline\n                    textContent = textContent.replace(/\\n(?!\\n)/g, \"\");\n                }\n                current?.push({\n                    rawValue: textContent ?? \"\",\n                    formatted: textContent ?? \"\",\n                    format: formatValue,\n                });\n            }\n        }\n    }\n    if (current !== undefined) {\n        result.push(current);\n    }\n    return result;\n}\n//# sourceMappingURL=copy-paste.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/copy-paste.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-fns.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-fns.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyToClipboard: () => (/* binding */ copyToClipboard),\n/* harmony export */   expandSelection: () => (/* binding */ expandSelection),\n/* harmony export */   toggleBoolean: () => (/* binding */ toggleBoolean),\n/* harmony export */   unquote: () => (/* binding */ unquote)\n/* harmony export */ });\n/* harmony import */ var _copy_paste_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./copy-paste.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/copy-paste.js\");\n\n\nfunction expandSelection(newVal, getCellsForSelection, rowMarkerOffset, spanRangeBehavior, abortController) {\n    const origVal = newVal;\n    if (spanRangeBehavior === \"allowPartial\" || newVal.current === undefined || getCellsForSelection === undefined)\n        return newVal;\n    let isFilled = false;\n    do {\n        if (newVal?.current === undefined)\n            break;\n        const r = newVal.current?.range;\n        const cells = [];\n        if (r.width > 2) {\n            const leftCells = getCellsForSelection({\n                x: r.x,\n                y: r.y,\n                width: 1,\n                height: r.height,\n            }, abortController.signal);\n            if (typeof leftCells === \"function\") {\n                return origVal;\n            }\n            cells.push(...leftCells);\n            const rightCells = getCellsForSelection({\n                x: r.x + r.width - 1,\n                y: r.y,\n                width: 1,\n                height: r.height,\n            }, abortController.signal);\n            if (typeof rightCells === \"function\") {\n                return origVal;\n            }\n            cells.push(...rightCells);\n        }\n        else {\n            const rCells = getCellsForSelection({\n                x: r.x,\n                y: r.y,\n                width: r.width,\n                height: r.height,\n            }, abortController.signal);\n            if (typeof rCells === \"function\") {\n                return origVal;\n            }\n            cells.push(...rCells);\n        }\n        let left = r.x - rowMarkerOffset;\n        let right = r.x + r.width - 1 - rowMarkerOffset;\n        for (const row of cells) {\n            for (const cell of row) {\n                if (cell.span === undefined)\n                    continue;\n                left = Math.min(cell.span[0], left);\n                right = Math.max(cell.span[1], right);\n            }\n        }\n        if (left === r.x - rowMarkerOffset && right === r.x + r.width - 1 - rowMarkerOffset) {\n            isFilled = true;\n        }\n        else {\n            newVal = {\n                current: {\n                    cell: newVal.current.cell ?? [0, 0],\n                    range: {\n                        x: left + rowMarkerOffset,\n                        y: r.y,\n                        width: right - left + 1,\n                        height: r.height,\n                    },\n                    rangeStack: newVal.current.rangeStack,\n                },\n                columns: newVal.columns,\n                rows: newVal.rows,\n            };\n        }\n    } while (!isFilled);\n    return newVal;\n}\nfunction descape(s) {\n    if (s.startsWith('\"') && s.endsWith('\"')) {\n        s = s.slice(1, -1).replace(/\"\"/g, '\"');\n    }\n    return s;\n}\nfunction unquote(str) {\n    let State;\n    (function (State) {\n        State[State[\"None\"] = 0] = \"None\";\n        State[State[\"inString\"] = 1] = \"inString\";\n        State[State[\"inStringPostQuote\"] = 2] = \"inStringPostQuote\";\n    })(State || (State = {}));\n    const result = [];\n    let current = [];\n    let start = 0;\n    let state = State.None;\n    str = str.replace(/\\r\\n/g, \"\\n\");\n    let index = 0;\n    for (const char of str) {\n        switch (state) {\n            case State.None:\n                if (char === \"\\t\" || char === \"\\n\") {\n                    current.push(str.slice(start, index));\n                    start = index + 1;\n                    if (char === \"\\n\") {\n                        result.push(current);\n                        current = [];\n                    }\n                }\n                else if (char === `\"`) {\n                    state = State.inString;\n                }\n                break;\n            case State.inString:\n                if (char === `\"`) {\n                    state = State.inStringPostQuote;\n                }\n                break;\n            case State.inStringPostQuote:\n                if (char === '\"') {\n                    state = State.inString;\n                }\n                else if (char === \"\\t\" || char === \"\\n\") {\n                    current.push(descape(str.slice(start, index)));\n                    start = index + 1;\n                    if (char === \"\\n\") {\n                        result.push(current);\n                        current = [];\n                    }\n                    state = State.None;\n                }\n                else {\n                    state = State.None;\n                }\n                break;\n        }\n        index++;\n    }\n    if (start < str.length) {\n        current.push(descape(str.slice(start, str.length)));\n    }\n    result.push(current);\n    return result.map(r => r.map(c => ({ rawValue: c, formatted: c, format: \"string\" })));\n}\nfunction copyToClipboard(cells, columnIndexes, e) {\n    const copyBuffer = (0,_copy_paste_js__WEBPACK_IMPORTED_MODULE_0__.getCopyBufferContents)(cells, columnIndexes);\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const copyWithWriteText = (s) => {\n        void window.navigator.clipboard?.writeText(s);\n    };\n    const copyWithWrite = (s, html) => {\n        if (window.navigator.clipboard?.write === undefined)\n            return false;\n        void window.navigator.clipboard.write([\n            new ClipboardItem({\n                // eslint-disable-next-line sonarjs/no-duplicate-string\n                \"text/plain\": new Blob([s], { type: \"text/plain\" }),\n                \"text/html\": new Blob([html], {\n                    type: \"text/html\",\n                }),\n            }),\n        ]);\n        return true;\n    };\n    const copyWithClipboardData = (s, html) => {\n        try {\n            if (e === undefined || e.clipboardData === null)\n                throw new Error(\"No clipboard data\");\n            // This might fail if we had to await the thunk\n            e?.clipboardData?.setData(\"text/plain\", s);\n            e?.clipboardData?.setData(\"text/html\", html);\n        }\n        catch {\n            if (!copyWithWrite(s, html)) {\n                copyWithWriteText(s);\n            }\n        }\n    };\n    if (window.navigator.clipboard?.write !== undefined || e?.clipboardData !== undefined) {\n        void copyWithClipboardData(copyBuffer.textPlain, copyBuffer.textHtml);\n    }\n    else {\n        void copyWithWriteText(copyBuffer.textPlain);\n    }\n    e?.preventDefault();\n}\n/**\n * Checkbox behavior:\n *\n * true + click -> unchecked\n * false + click -> checked\n * indeterminate + click -> checked\n * empty + click -> checked\n */\nfunction toggleBoolean(data) {\n    return data !== true;\n}\n//# sourceMappingURL=data-editor-fns.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-fns.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-keybindings.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-keybindings.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keybindingDefaults: () => (/* binding */ keybindingDefaults),\n/* harmony export */   realizeKeybinds: () => (/* binding */ realizeKeybinds),\n/* harmony export */   useKeybindingsWithDefaults: () => (/* binding */ useKeybindingsWithDefaults)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/browser-detect.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n\n\n\nconst keybindingDefaults = {\n    downFill: false,\n    rightFill: false,\n    clear: true,\n    closeOverlay: true,\n    acceptOverlayDown: true,\n    acceptOverlayUp: true,\n    acceptOverlayLeft: true,\n    acceptOverlayRight: true,\n    copy: true,\n    paste: true,\n    cut: true,\n    search: false,\n    delete: true,\n    activateCell: true,\n    scrollToSelectedCell: true,\n    goToFirstCell: true,\n    goToFirstColumn: true,\n    goToFirstRow: true,\n    goToLastCell: true,\n    goToLastColumn: true,\n    goToLastRow: true,\n    goToNextPage: true,\n    goToPreviousPage: true,\n    selectToFirstCell: true,\n    selectToFirstColumn: true,\n    selectToFirstRow: true,\n    selectToLastCell: true,\n    selectToLastColumn: true,\n    selectToLastRow: true,\n    selectAll: true,\n    selectRow: true,\n    selectColumn: true,\n    goUpCell: true,\n    goRightCell: true,\n    goDownCell: true,\n    goLeftCell: true,\n    goUpCellRetainSelection: true,\n    goRightCellRetainSelection: true,\n    goDownCellRetainSelection: true,\n    goLeftCellRetainSelection: true,\n    selectGrowUp: true,\n    selectGrowRight: true,\n    selectGrowDown: true,\n    selectGrowLeft: true,\n};\nfunction realizeKeybind(keybind, defaultVal) {\n    if (keybind === true)\n        return defaultVal;\n    if (keybind === false)\n        return \"\";\n    return keybind;\n}\nfunction realizeKeybinds(keybinds) {\n    const isOSX = _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_1__.browserIsOSX.value;\n    return {\n        activateCell: realizeKeybind(keybinds.activateCell, \" |Enter|shift+Enter\"),\n        clear: realizeKeybind(keybinds.clear, \"any+Escape\"),\n        closeOverlay: realizeKeybind(keybinds.closeOverlay, \"any+Escape\"),\n        acceptOverlayDown: realizeKeybind(keybinds.acceptOverlayDown, \"Enter\"),\n        acceptOverlayUp: realizeKeybind(keybinds.acceptOverlayUp, \"shift+Enter\"),\n        acceptOverlayLeft: realizeKeybind(keybinds.acceptOverlayLeft, \"shift+Tab\"),\n        acceptOverlayRight: realizeKeybind(keybinds.acceptOverlayRight, \"Tab\"),\n        copy: keybinds.copy,\n        cut: keybinds.cut,\n        delete: realizeKeybind(keybinds.delete, isOSX ? \"Backspace|Delete\" : \"Delete\"),\n        downFill: realizeKeybind(keybinds.downFill, \"primary+_68\"),\n        scrollToSelectedCell: realizeKeybind(keybinds.scrollToSelectedCell, \"primary+Enter\"),\n        goDownCell: realizeKeybind(keybinds.goDownCell, \"ArrowDown\"),\n        goDownCellRetainSelection: realizeKeybind(keybinds.goDownCellRetainSelection, \"alt+ArrowDown\"),\n        goLeftCell: realizeKeybind(keybinds.goLeftCell, \"ArrowLeft|shift+Tab\"),\n        goLeftCellRetainSelection: realizeKeybind(keybinds.goLeftCellRetainSelection, \"alt+ArrowLeft\"),\n        goRightCell: realizeKeybind(keybinds.goRightCell, \"ArrowRight|Tab\"),\n        goRightCellRetainSelection: realizeKeybind(keybinds.goRightCellRetainSelection, \"alt+ArrowRight\"),\n        goUpCell: realizeKeybind(keybinds.goUpCell, \"ArrowUp\"),\n        goUpCellRetainSelection: realizeKeybind(keybinds.goUpCellRetainSelection, \"alt+ArrowUp\"),\n        goToFirstCell: realizeKeybind(keybinds.goToFirstCell, \"primary+Home\"),\n        goToFirstColumn: realizeKeybind(keybinds.goToFirstColumn, \"Home|primary+ArrowLeft\"),\n        goToFirstRow: realizeKeybind(keybinds.goToFirstRow, \"primary+ArrowUp\"),\n        goToLastCell: realizeKeybind(keybinds.goToLastCell, \"primary+End\"),\n        goToLastColumn: realizeKeybind(keybinds.goToLastColumn, \"End|primary+ArrowRight\"),\n        goToLastRow: realizeKeybind(keybinds.goToLastRow, \"primary+ArrowDown\"),\n        goToNextPage: realizeKeybind(keybinds.goToNextPage, \"PageDown\"),\n        goToPreviousPage: realizeKeybind(keybinds.goToPreviousPage, \"PageUp\"),\n        paste: keybinds.paste,\n        rightFill: realizeKeybind(keybinds.rightFill, \"primary+_82\"),\n        search: realizeKeybind(keybinds.search, \"primary+f\"),\n        selectAll: realizeKeybind(keybinds.selectAll, \"primary+a\"),\n        selectColumn: realizeKeybind(keybinds.selectColumn, \"ctrl+ \"),\n        selectGrowDown: realizeKeybind(keybinds.selectGrowDown, \"shift+ArrowDown\"),\n        selectGrowLeft: realizeKeybind(keybinds.selectGrowLeft, \"shift+ArrowLeft\"),\n        selectGrowRight: realizeKeybind(keybinds.selectGrowRight, \"shift+ArrowRight\"),\n        selectGrowUp: realizeKeybind(keybinds.selectGrowUp, \"shift+ArrowUp\"),\n        selectRow: realizeKeybind(keybinds.selectRow, \"shift+ \"),\n        selectToFirstCell: realizeKeybind(keybinds.selectToFirstCell, \"primary+shift+Home\"),\n        selectToFirstColumn: realizeKeybind(keybinds.selectToFirstColumn, \"primary+shift+ArrowLeft\"),\n        selectToFirstRow: realizeKeybind(keybinds.selectToFirstRow, \"primary+shift+ArrowUp\"),\n        selectToLastCell: realizeKeybind(keybinds.selectToLastCell, \"primary+shift+End\"),\n        selectToLastColumn: realizeKeybind(keybinds.selectToLastColumn, \"primary+shift+ArrowRight\"),\n        selectToLastRow: realizeKeybind(keybinds.selectToLastRow, \"primary+shift+ArrowDown\"),\n    };\n}\nfunction useKeybindingsWithDefaults(keybindingsIn) {\n    const keys = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.useDeepMemo)(keybindingsIn);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (keys === undefined)\n            return realizeKeybinds(keybindingDefaults);\n        const withBackCompatApplied = {\n            ...keys,\n            goToNextPage: keys?.goToNextPage ?? keys?.pageDown ?? keybindingDefaults.goToNextPage,\n            goToPreviousPage: keys?.goToPreviousPage ?? keys?.pageUp ?? keybindingDefaults.goToPreviousPage,\n            goToFirstCell: keys?.goToFirstCell ?? keys?.first ?? keybindingDefaults.goToFirstCell,\n            goToLastCell: keys?.goToLastCell ?? keys?.last ?? keybindingDefaults.goToLastCell,\n            selectToFirstCell: keys?.selectToFirstCell ?? keys?.first ?? keybindingDefaults.selectToFirstCell,\n            selectToLastCell: keys?.selectToLastCell ?? keys?.last ?? keybindingDefaults.selectToLastCell,\n        };\n        return realizeKeybinds({\n            ...keybindingDefaults,\n            ...withBackCompatApplied,\n        });\n    }, [keys]);\n}\n//# sourceMappingURL=data-editor-keybindings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-keybindings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataEditor: () => (/* binding */ DataEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/clamp.js */ \"(ssr)/./node_modules/lodash/clamp.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/uniq.js */ \"(ssr)/./node_modules/lodash/uniq.js\");\n/* harmony import */ var lodash_flatten_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/flatten.js */ \"(ssr)/./node_modules/lodash/flatten.js\");\n/* harmony import */ var lodash_range_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/range.js */ \"(ssr)/./node_modules/lodash/range.js\");\n/* harmony import */ var lodash_debounce_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/debounce.js */ \"(ssr)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _internal_data_grid_search_data_grid_search_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../internal/data-grid-search/data-grid-search.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search.js\");\n/* harmony import */ var _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../common/browser-detect.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../internal/data-grid/render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _group_rename_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./group-rename.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/group-rename.js\");\n/* harmony import */ var _use_column_sizer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./use-column-sizer.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-column-sizer.js\");\n/* harmony import */ var _common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../common/is-hotkey.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/is-hotkey.js\");\n/* harmony import */ var _internal_data_grid_use_selection_behavior_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../internal/data-grid/use-selection-behavior.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-selection-behavior.js\");\n/* harmony import */ var _use_cells_for_selection_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./use-cells-for-selection.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-cells-for-selection.js\");\n/* harmony import */ var _data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./data-editor-fns.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-fns.js\");\n/* harmony import */ var _internal_data_editor_container_data_grid_container_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../internal/data-editor-container/data-grid-container.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-editor-container/data-grid-container.js\");\n/* harmony import */ var _use_autoscroll_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./use-autoscroll.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-autoscroll.js\");\n/* harmony import */ var _copy_paste_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./copy-paste.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/copy-paste.js\");\n/* harmony import */ var _use_rem_adjuster_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./use-rem-adjuster.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-rem-adjuster.js\");\n/* harmony import */ var _internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../internal/data-grid/color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/data-grid/event-args.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/event-args.js\");\n/* harmony import */ var _data_editor_keybindings_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./data-editor-keybindings.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor-keybindings.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DataGridOverlayEditor = react__WEBPACK_IMPORTED_MODULE_0__.lazy(async () => await __webpack_require__.e(/*! import() */ \"vendor-chunks/@glideapps\").then(__webpack_require__.bind(__webpack_require__, /*! ../internal/data-grid-overlay-editor/data-grid-overlay-editor.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor.js\")));\n// There must be a better way\nlet idCounter = 0;\nfunction getSpanStops(cells) {\n    return lodash_uniq_js__WEBPACK_IMPORTED_MODULE_2__(lodash_flatten_js__WEBPACK_IMPORTED_MODULE_3__(lodash_flatten_js__WEBPACK_IMPORTED_MODULE_3__(cells)\n        .filter(c => c.span !== undefined)\n        .map(c => lodash_range_js__WEBPACK_IMPORTED_MODULE_4__((c.span?.[0] ?? 0) + 1, (c.span?.[1] ?? 0) + 1))));\n}\nfunction shiftSelection(input, offset) {\n    if (input === undefined || offset === 0 || (input.columns.length === 0 && input.current === undefined))\n        return input;\n    return {\n        current: input.current === undefined\n            ? undefined\n            : {\n                cell: [input.current.cell[0] + offset, input.current.cell[1]],\n                range: {\n                    ...input.current.range,\n                    x: input.current.range.x + offset,\n                },\n                rangeStack: input.current.rangeStack.map(r => ({\n                    ...r,\n                    x: r.x + offset,\n                })),\n            },\n        rows: input.rows,\n        columns: input.columns.offset(offset),\n    };\n}\nconst loadingCell = {\n    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Loading,\n    allowOverlay: false,\n};\nconst emptyGridSelection = {\n    columns: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n    rows: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n    current: undefined,\n};\nconst DataEditorImpl = (p, forwardedRef) => {\n    const [gridSelectionInner, setGridSelectionInner] = react__WEBPACK_IMPORTED_MODULE_0__.useState(emptyGridSelection);\n    const [overlay, setOverlay] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const searchInputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const canvasRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [mouseState, setMouseState] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const scrollRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const lastSent = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const safeWindow = typeof window === \"undefined\" ? null : window;\n    const { imageEditorOverride, getRowThemeOverride, markdownDivCreateNode, width, height, columns: columnsIn, rows, getCellContent, onCellClicked, onCellActivated, onFillPattern, onFinishedEditing, coercePasteValue, drawHeader: drawHeaderIn, drawCell: drawCellIn, editorBloom, onHeaderClicked, onColumnProposeMove, spanRangeBehavior = \"default\", onGroupHeaderClicked, onCellContextMenu, className, onHeaderContextMenu, getCellsForSelection: getCellsForSelectionIn, onGroupHeaderContextMenu, onGroupHeaderRenamed, onCellEdited, onCellsEdited, onSearchResultsChanged: onSearchResultsChangedIn, searchResults, onSearchValueChange, searchValue, onKeyDown: onKeyDownIn, onKeyUp: onKeyUpIn, keybindings: keybindingsIn, editOnType = true, onRowAppended, onColumnMoved, validateCell: validateCellIn, highlightRegions: highlightRegionsIn, rangeSelect = \"rect\", columnSelect = \"multi\", rowSelect = \"multi\", rangeSelectionBlending = \"exclusive\", columnSelectionBlending = \"exclusive\", rowSelectionBlending = \"exclusive\", onDelete: onDeleteIn, onDragStart, onMouseMove, onPaste, copyHeaders = false, freezeColumns = 0, cellActivationBehavior = \"second-click\", rowSelectionMode = \"auto\", onHeaderMenuClick, getGroupDetails, onSearchClose: onSearchCloseIn, onItemHovered, onSelectionCleared, showSearch: showSearchIn, onVisibleRegionChanged, gridSelection: gridSelectionOuter, onGridSelectionChange, minColumnWidth: minColumnWidthIn = 50, maxColumnWidth: maxColumnWidthIn = 500, maxColumnAutoWidth: maxColumnAutoWidthIn, provideEditor, trailingRowOptions, freezeTrailingRows = 0, allowedFillDirections = \"orthogonal\", scrollOffsetX, scrollOffsetY, verticalBorder, onDragOverCell, onDrop, onColumnResize: onColumnResizeIn, onColumnResizeEnd: onColumnResizeEndIn, onColumnResizeStart: onColumnResizeStartIn, customRenderers: additionalRenderers, fillHandle, drawFocusRing = true, experimental, fixedShadowX, fixedShadowY, headerIcons, imageWindowLoader, initialSize, isDraggable, onDragLeave, onRowMoved, overscrollX: overscrollXIn, overscrollY: overscrollYIn, preventDiagonalScrolling, rightElement, rightElementProps, trapFocus = false, smoothScrollX, smoothScrollY, scaleToRem = false, rowHeight: rowHeightIn = 34, headerHeight: headerHeightIn = 36, groupHeaderHeight: groupHeaderHeightIn = headerHeightIn, theme: themeIn, isOutsideClick, renderers, } = p;\n    const rowMarkersObj = typeof p.rowMarkers === \"string\" ? undefined : p.rowMarkers;\n    const rowMarkers = rowMarkersObj?.kind ?? p.rowMarkers ?? \"none\";\n    const rowMarkerWidthRaw = rowMarkersObj?.width ?? p.rowMarkerWidth;\n    const rowMarkerStartIndex = rowMarkersObj?.startIndex ?? p.rowMarkerStartIndex ?? 1;\n    const rowMarkerTheme = rowMarkersObj?.theme ?? p.rowMarkerTheme;\n    const rowMarkerCheckboxStyle = rowMarkersObj?.checkboxStyle ?? \"square\";\n    const minColumnWidth = Math.max(minColumnWidthIn, 20);\n    const maxColumnWidth = Math.max(maxColumnWidthIn, minColumnWidth);\n    const maxColumnAutoWidth = Math.max(maxColumnAutoWidthIn ?? maxColumnWidth, minColumnWidth);\n    const docStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (typeof window === \"undefined\")\n            return { fontSize: \"16px\" };\n        return window.getComputedStyle(document.documentElement);\n    }, []);\n    const remSize = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => Number.parseFloat(docStyle.fontSize), [docStyle]);\n    const { rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY } = (0,_use_rem_adjuster_js__WEBPACK_IMPORTED_MODULE_7__.useRemAdjuster)({\n        groupHeaderHeight: groupHeaderHeightIn,\n        headerHeight: headerHeightIn,\n        overscrollX: overscrollXIn,\n        overscrollY: overscrollYIn,\n        remSize,\n        rowHeight: rowHeightIn,\n        scaleToRem,\n        theme: themeIn,\n    });\n    const keybindings = (0,_data_editor_keybindings_js__WEBPACK_IMPORTED_MODULE_8__.useKeybindingsWithDefaults)(keybindingsIn);\n    const rowMarkerWidth = rowMarkerWidthRaw ?? (rows > 10000 ? 48 : rows > 1000 ? 44 : rows > 100 ? 36 : 32);\n    const hasRowMarkers = rowMarkers !== \"none\";\n    const rowMarkerOffset = hasRowMarkers ? 1 : 0;\n    const showTrailingBlankRow = onRowAppended !== undefined;\n    const lastRowSticky = trailingRowOptions?.sticky === true;\n    const [showSearchInner, setShowSearchInner] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const showSearch = showSearchIn ?? showSearchInner;\n    const onSearchClose = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (onSearchCloseIn !== undefined) {\n            onSearchCloseIn();\n        }\n        else {\n            setShowSearchInner(false);\n        }\n    }, [onSearchCloseIn]);\n    const gridSelectionOuterMangled = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return gridSelectionOuter === undefined ? undefined : shiftSelection(gridSelectionOuter, rowMarkerOffset);\n    }, [gridSelectionOuter, rowMarkerOffset]);\n    const gridSelection = gridSelectionOuterMangled ?? gridSelectionInner;\n    const abortControllerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    if (abortControllerRef.current === undefined)\n        abortControllerRef.current = new AbortController();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => () => abortControllerRef?.current.abort(), []);\n    const [getCellsForSelection, getCellsForSeletionDirect] = (0,_use_cells_for_selection_js__WEBPACK_IMPORTED_MODULE_9__.useCellsForSelection)(getCellsForSelectionIn, getCellContent, rowMarkerOffset, abortControllerRef.current, rows);\n    const validateCell = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((cell, newValue, prevValue) => {\n        if (validateCellIn === undefined)\n            return true;\n        const item = [cell[0] - rowMarkerOffset, cell[1]];\n        return validateCellIn?.(item, newValue, prevValue);\n    }, [rowMarkerOffset, validateCellIn]);\n    const expectedExternalGridSelection = react__WEBPACK_IMPORTED_MODULE_0__.useRef(gridSelectionOuter);\n    const setGridSelection = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newVal, expand) => {\n        if (expand) {\n            newVal = (0,_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__.expandSelection)(newVal, getCellsForSelection, rowMarkerOffset, spanRangeBehavior, abortControllerRef.current);\n        }\n        if (onGridSelectionChange !== undefined) {\n            expectedExternalGridSelection.current = shiftSelection(newVal, -rowMarkerOffset);\n            onGridSelectionChange(expectedExternalGridSelection.current);\n        }\n        else {\n            setGridSelectionInner(newVal);\n        }\n    }, [onGridSelectionChange, getCellsForSelection, rowMarkerOffset, spanRangeBehavior]);\n    const onColumnResize = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(onColumnResizeIn, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((_, w, ind, wg) => {\n        onColumnResizeIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n    }, [onColumnResizeIn, rowMarkerOffset, columnsIn]));\n    const onColumnResizeEnd = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(onColumnResizeEndIn, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((_, w, ind, wg) => {\n        onColumnResizeEndIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n    }, [onColumnResizeEndIn, rowMarkerOffset, columnsIn]));\n    const onColumnResizeStart = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(onColumnResizeStartIn, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((_, w, ind, wg) => {\n        onColumnResizeStartIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n    }, [onColumnResizeStartIn, rowMarkerOffset, columnsIn]));\n    const drawHeader = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(drawHeaderIn, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args, draw) => {\n        return drawHeaderIn?.({ ...args, columnIndex: args.columnIndex - rowMarkerOffset }, draw) ?? false;\n    }, [drawHeaderIn, rowMarkerOffset]));\n    const drawCell = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(drawCellIn, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args, draw) => {\n        return drawCellIn?.({ ...args, col: args.col - rowMarkerOffset }, draw) ?? false;\n    }, [drawCellIn, rowMarkerOffset]));\n    const onDelete = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(sel => {\n        if (onDeleteIn !== undefined) {\n            const result = onDeleteIn(shiftSelection(sel, -rowMarkerOffset));\n            if (typeof result === \"boolean\") {\n                return result;\n            }\n            return shiftSelection(result, rowMarkerOffset);\n        }\n        return true;\n    }, [onDeleteIn, rowMarkerOffset]);\n    const [setCurrent, setSelectedRows, setSelectedColumns] = (0,_internal_data_grid_use_selection_behavior_js__WEBPACK_IMPORTED_MODULE_12__.useSelectionBehavior)(gridSelection, setGridSelection, rangeSelectionBlending, columnSelectionBlending, rowSelectionBlending, rangeSelect);\n    const mergedTheme = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.mergeAndRealizeTheme)((0,_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.getDataEditorTheme)(), theme);\n    }, [theme]);\n    const [clientSize, setClientSize] = react__WEBPACK_IMPORTED_MODULE_0__.useState([0, 0, 0]);\n    const rendererMap = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (renderers === undefined)\n            return {};\n        const result = {};\n        for (const r of renderers) {\n            result[r.kind] = r;\n        }\n        return result;\n    }, [renderers]);\n    const getCellRenderer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((cell) => {\n        if (cell.kind !== _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Custom) {\n            return rendererMap[cell.kind];\n        }\n        return additionalRenderers?.find(x => x.isMatch(cell));\n    }, [additionalRenderers, rendererMap]);\n    // eslint-disable-next-line prefer-const\n    let { sizedColumns: columns, nonGrowWidth } = (0,_use_column_sizer_js__WEBPACK_IMPORTED_MODULE_14__.useColumnSizer)(columnsIn, rows, getCellsForSeletionDirect, clientSize[0] - (rowMarkerOffset === 0 ? 0 : rowMarkerWidth) - clientSize[2], minColumnWidth, maxColumnAutoWidth, mergedTheme, getCellRenderer, abortControllerRef.current);\n    if (rowMarkers !== \"none\")\n        nonGrowWidth += rowMarkerWidth;\n    const enableGroups = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return columns.some(c => c.group !== undefined);\n    }, [columns]);\n    const totalHeaderHeight = enableGroups ? headerHeight + groupHeaderHeight : headerHeight;\n    const numSelectedRows = gridSelection.rows.length;\n    const rowMarkerChecked = rowMarkers === \"none\" ? undefined : numSelectedRows === 0 ? false : numSelectedRows === rows ? true : undefined;\n    const mangledCols = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (rowMarkers === \"none\")\n            return columns;\n        return [\n            {\n                title: \"\",\n                width: rowMarkerWidth,\n                icon: undefined,\n                hasMenu: false,\n                style: \"normal\",\n                themeOverride: rowMarkerTheme,\n                rowMarker: rowMarkerCheckboxStyle,\n                rowMarkerChecked,\n            },\n            ...columns,\n        ];\n    }, [rowMarkers, columns, rowMarkerWidth, rowMarkerTheme, rowMarkerCheckboxStyle, rowMarkerChecked]);\n    const [visibleRegionY, visibleRegionTy] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return [\n            scrollOffsetY !== undefined && typeof rowHeight === \"number\" ? Math.floor(scrollOffsetY / rowHeight) : 0,\n            scrollOffsetY !== undefined && typeof rowHeight === \"number\" ? -(scrollOffsetY % rowHeight) : 0,\n        ];\n    }, [scrollOffsetY, rowHeight]);\n    const visibleRegionRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        height: 1,\n        width: 1,\n        x: 0,\n        y: 0,\n    });\n    const visibleRegionInput = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n        x: visibleRegionRef.current.x,\n        y: visibleRegionY,\n        width: visibleRegionRef.current.width ?? 1,\n        height: visibleRegionRef.current.height ?? 1,\n        // tx: 'TODO',\n        ty: visibleRegionTy,\n    }), [visibleRegionTy, visibleRegionY]);\n    const hasJustScrolled = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const [visibleRegion, setVisibleRegion, empty] = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.useStateWithReactiveInput)(visibleRegionInput);\n    visibleRegionRef.current = visibleRegion;\n    const vScrollReady = (visibleRegion.height ?? 1) > 1;\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (scrollOffsetY !== undefined && scrollRef.current !== null && vScrollReady) {\n            if (scrollRef.current.scrollTop === scrollOffsetY)\n                return;\n            scrollRef.current.scrollTop = scrollOffsetY;\n            if (scrollRef.current.scrollTop !== scrollOffsetY) {\n                empty();\n            }\n            hasJustScrolled.current = true;\n        }\n    }, [scrollOffsetY, vScrollReady, empty]);\n    const hScrollReady = (visibleRegion.width ?? 1) > 1;\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (scrollOffsetX !== undefined && scrollRef.current !== null && hScrollReady) {\n            if (scrollRef.current.scrollLeft === scrollOffsetX)\n                return;\n            scrollRef.current.scrollLeft = scrollOffsetX;\n            if (scrollRef.current.scrollLeft !== scrollOffsetX) {\n                empty();\n            }\n            hasJustScrolled.current = true;\n        }\n    }, [scrollOffsetX, hScrollReady, empty]);\n    const cellXOffset = visibleRegion.x + rowMarkerOffset;\n    const cellYOffset = visibleRegion.y;\n    const gridRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const focus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((immediate) => {\n        if (immediate === true) {\n            gridRef.current?.focus();\n        }\n        else {\n            window.requestAnimationFrame(() => {\n                gridRef.current?.focus();\n            });\n        }\n    }, []);\n    const mangledRows = showTrailingBlankRow ? rows + 1 : rows;\n    const mangledOnCellsEdited = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((items) => {\n        const mangledItems = rowMarkerOffset === 0\n            ? items\n            : items.map(x => ({\n                ...x,\n                location: [x.location[0] - rowMarkerOffset, x.location[1]],\n            }));\n        const r = onCellsEdited?.(mangledItems);\n        if (r !== true) {\n            for (const i of mangledItems)\n                onCellEdited?.(i.location, i.value);\n        }\n        return r;\n    }, [onCellEdited, onCellsEdited, rowMarkerOffset]);\n    const [fillHighlightRegion, setFillHighlightRegion] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    // this will generally be undefined triggering the memo less often\n    const highlightRange = gridSelection.current !== undefined &&\n        gridSelection.current.range.width * gridSelection.current.range.height > 1\n        ? gridSelection.current.range\n        : undefined;\n    const highlightFocus = drawFocusRing ? gridSelection.current?.cell : undefined;\n    const highlightFocusCol = highlightFocus?.[0];\n    const highlightFocusRow = highlightFocus?.[1];\n    const highlightRegions = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if ((highlightRegionsIn === undefined || highlightRegionsIn.length === 0) &&\n            (highlightRange ?? highlightFocusCol ?? highlightFocusRow ?? fillHighlightRegion) === undefined)\n            return undefined;\n        const regions = [];\n        if (highlightRegionsIn !== undefined) {\n            for (const r of highlightRegionsIn) {\n                const maxWidth = mangledCols.length - r.range.x - rowMarkerOffset;\n                if (maxWidth > 0) {\n                    regions.push({\n                        color: r.color,\n                        range: {\n                            ...r.range,\n                            x: r.range.x + rowMarkerOffset,\n                            width: Math.min(maxWidth, r.range.width),\n                        },\n                        style: r.style,\n                    });\n                }\n            }\n        }\n        if (fillHighlightRegion !== undefined) {\n            regions.push({\n                color: (0,_internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_15__.withAlpha)(mergedTheme.accentColor, 0),\n                range: fillHighlightRegion,\n                style: \"dashed\",\n            });\n        }\n        if (highlightRange !== undefined) {\n            regions.push({\n                color: (0,_internal_data_grid_color_parser_js__WEBPACK_IMPORTED_MODULE_15__.withAlpha)(mergedTheme.accentColor, 0.5),\n                range: highlightRange,\n                style: \"solid-outline\",\n            });\n        }\n        if (highlightFocusCol !== undefined && highlightFocusRow !== undefined) {\n            regions.push({\n                color: mergedTheme.accentColor,\n                range: {\n                    x: highlightFocusCol,\n                    y: highlightFocusRow,\n                    width: 1,\n                    height: 1,\n                },\n                style: \"solid-outline\",\n            });\n        }\n        return regions.length > 0 ? regions : undefined;\n    }, [\n        fillHighlightRegion,\n        highlightRange,\n        highlightFocusCol,\n        highlightFocusRow,\n        highlightRegionsIn,\n        mangledCols.length,\n        mergedTheme.accentColor,\n        rowMarkerOffset,\n    ]);\n    const mangledColsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(mangledCols);\n    mangledColsRef.current = mangledCols;\n    const getMangledCellContent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(([col, row], forceStrict = false) => {\n        const isTrailing = showTrailingBlankRow && row === mangledRows - 1;\n        const isRowMarkerCol = col === 0 && hasRowMarkers;\n        if (isRowMarkerCol) {\n            if (isTrailing) {\n                return loadingCell;\n            }\n            return {\n                kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.InnerGridCellKind.Marker,\n                allowOverlay: false,\n                checkboxStyle: rowMarkerCheckboxStyle,\n                checked: gridSelection?.rows.hasIndex(row) === true,\n                markerKind: rowMarkers === \"clickable-number\" ? \"number\" : rowMarkers,\n                row: rowMarkerStartIndex + row,\n                drawHandle: onRowMoved !== undefined,\n                cursor: rowMarkers === \"clickable-number\" ? \"pointer\" : undefined,\n            };\n        }\n        else if (isTrailing) {\n            //If the grid is empty, we will return text\n            const isFirst = col === rowMarkerOffset;\n            const maybeFirstColumnHint = isFirst ? trailingRowOptions?.hint ?? \"\" : \"\";\n            const c = mangledColsRef.current[col];\n            if (c?.trailingRowOptions?.disabled === true) {\n                return loadingCell;\n            }\n            else {\n                const hint = c?.trailingRowOptions?.hint ?? maybeFirstColumnHint;\n                const icon = c?.trailingRowOptions?.addIcon ?? trailingRowOptions?.addIcon;\n                return {\n                    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.InnerGridCellKind.NewRow,\n                    hint,\n                    allowOverlay: false,\n                    icon,\n                };\n            }\n        }\n        else {\n            const outerCol = col - rowMarkerOffset;\n            if (forceStrict || experimental?.strict === true) {\n                const vr = visibleRegionRef.current;\n                const isOutsideMainArea = vr.x > outerCol ||\n                    outerCol > vr.x + vr.width ||\n                    vr.y > row ||\n                    row > vr.y + vr.height ||\n                    row >= rowsRef.current;\n                const isSelected = outerCol === vr.extras?.selected?.[0] && row === vr.extras?.selected[1];\n                let isInFreezeArea = false;\n                if (vr.extras?.freezeRegions !== undefined) {\n                    for (const fr of vr.extras.freezeRegions) {\n                        if ((0,_common_math_js__WEBPACK_IMPORTED_MODULE_16__.pointInRect)(fr, outerCol, row)) {\n                            isInFreezeArea = true;\n                            break;\n                        }\n                    }\n                }\n                if (isOutsideMainArea && !isSelected && !isInFreezeArea) {\n                    return loadingCell;\n                }\n            }\n            let result = getCellContent([outerCol, row]);\n            if (rowMarkerOffset !== 0 && result.span !== undefined) {\n                result = {\n                    ...result,\n                    span: [result.span[0] + rowMarkerOffset, result.span[1] + rowMarkerOffset],\n                };\n            }\n            return result;\n        }\n    }, [\n        showTrailingBlankRow,\n        mangledRows,\n        hasRowMarkers,\n        rowMarkerCheckboxStyle,\n        gridSelection?.rows,\n        rowMarkers,\n        rowMarkerStartIndex,\n        onRowMoved,\n        rowMarkerOffset,\n        trailingRowOptions?.hint,\n        trailingRowOptions?.addIcon,\n        experimental?.strict,\n        getCellContent,\n    ]);\n    const mangledGetGroupDetails = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(group => {\n        let result = getGroupDetails?.(group) ?? { name: group };\n        if (onGroupHeaderRenamed !== undefined && group !== \"\") {\n            result = {\n                // FIXME: Mutate\n                icon: result.icon,\n                name: result.name,\n                overrideTheme: result.overrideTheme,\n                actions: [\n                    ...(result.actions ?? []),\n                    {\n                        title: \"Rename\",\n                        icon: \"renameIcon\",\n                        onClick: e => setRenameGroup({\n                            group: result.name,\n                            bounds: e.bounds,\n                        }),\n                    },\n                ],\n            };\n        }\n        return result;\n    }, [getGroupDetails, onGroupHeaderRenamed]);\n    const setOverlaySimple = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((val) => {\n        const [col, row] = val.cell;\n        const column = mangledCols[col];\n        const groupTheme = column?.group !== undefined ? mangledGetGroupDetails(column.group)?.overrideTheme : undefined;\n        const colTheme = column?.themeOverride;\n        const rowTheme = getRowThemeOverride?.(row);\n        setOverlay({\n            ...val,\n            theme: (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.mergeAndRealizeTheme)(mergedTheme, groupTheme, colTheme, rowTheme, val.content.themeOverride),\n        });\n    }, [getRowThemeOverride, mangledCols, mangledGetGroupDetails, mergedTheme]);\n    const reselect = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((bounds, fromKeyboard, initialValue) => {\n        if (gridSelection.current === undefined)\n            return;\n        const [col, row] = gridSelection.current.cell;\n        const c = getMangledCellContent([col, row]);\n        if (c.kind !== _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Boolean && c.allowOverlay) {\n            let content = c;\n            if (initialValue !== undefined) {\n                switch (content.kind) {\n                    case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Number: {\n                        const d = (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.maybe)(() => (initialValue === \"-\" ? -0 : Number.parseFloat(initialValue)), 0);\n                        content = {\n                            ...content,\n                            data: Number.isNaN(d) ? 0 : d,\n                        };\n                        break;\n                    }\n                    case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Text:\n                    case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Markdown:\n                    case _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Uri:\n                        content = {\n                            ...content,\n                            data: initialValue,\n                        };\n                        break;\n                }\n            }\n            setOverlaySimple({\n                target: bounds,\n                content,\n                initialValue,\n                cell: [col, row],\n                highlight: initialValue === undefined,\n                forceEditMode: initialValue !== undefined,\n            });\n        }\n        else if (c.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Boolean && fromKeyboard && c.readonly !== true) {\n            mangledOnCellsEdited([\n                {\n                    location: gridSelection.current.cell,\n                    value: {\n                        ...c,\n                        data: (0,_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__.toggleBoolean)(c.data),\n                    },\n                },\n            ]);\n            gridRef.current?.damage([{ cell: gridSelection.current.cell }]);\n        }\n    }, [getMangledCellContent, gridSelection, mangledOnCellsEdited, setOverlaySimple]);\n    const focusOnRowFromTrailingBlankRow = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col, row) => {\n        const bounds = gridRef.current?.getBounds(col, row);\n        if (bounds === undefined || scrollRef.current === null) {\n            return;\n        }\n        const content = getMangledCellContent([col, row]);\n        if (!content.allowOverlay) {\n            return;\n        }\n        setOverlaySimple({\n            target: bounds,\n            content,\n            initialValue: undefined,\n            highlight: true,\n            cell: [col, row],\n            forceEditMode: true,\n        });\n    }, [getMangledCellContent, setOverlaySimple]);\n    const scrollTo = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col, row, dir = \"both\", paddingX = 0, paddingY = 0, options = undefined) => {\n        if (scrollRef.current !== null) {\n            const grid = gridRef.current;\n            const canvas = canvasRef.current;\n            const trueCol = typeof col !== \"number\" ? (col.unit === \"cell\" ? col.amount : undefined) : col;\n            const trueRow = typeof row !== \"number\" ? (row.unit === \"cell\" ? row.amount : undefined) : row;\n            const desiredX = typeof col !== \"number\" && col.unit === \"px\" ? col.amount : undefined;\n            const desiredY = typeof row !== \"number\" && row.unit === \"px\" ? row.amount : undefined;\n            if (grid !== null && canvas !== null) {\n                let targetRect = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n                let scrollX = 0;\n                let scrollY = 0;\n                if (trueCol !== undefined || trueRow !== undefined) {\n                    targetRect = grid.getBounds((trueCol ?? 0) + rowMarkerOffset, trueRow ?? 0) ?? targetRect;\n                    if (targetRect.width === 0 || targetRect.height === 0)\n                        return;\n                }\n                const scrollBounds = canvas.getBoundingClientRect();\n                const scale = scrollBounds.width / canvas.offsetWidth;\n                if (desiredX !== undefined) {\n                    targetRect = {\n                        ...targetRect,\n                        x: desiredX - scrollBounds.left - scrollRef.current.scrollLeft,\n                        width: 1,\n                    };\n                }\n                if (desiredY !== undefined) {\n                    targetRect = {\n                        ...targetRect,\n                        y: desiredY + scrollBounds.top - scrollRef.current.scrollTop,\n                        height: 1,\n                    };\n                }\n                if (targetRect !== undefined) {\n                    const bounds = {\n                        x: targetRect.x - paddingX,\n                        y: targetRect.y - paddingY,\n                        width: targetRect.width + 2 * paddingX,\n                        height: targetRect.height + 2 * paddingY,\n                    };\n                    let frozenWidth = 0;\n                    for (let i = 0; i < freezeColumns; i++) {\n                        frozenWidth += columns[i].width;\n                    }\n                    let trailingRowHeight = 0;\n                    const freezeTrailingRowsEffective = freezeTrailingRows + (lastRowSticky ? 1 : 0);\n                    if (freezeTrailingRowsEffective > 0) {\n                        trailingRowHeight = (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.getFreezeTrailingHeight)(mangledRows, freezeTrailingRowsEffective, rowHeight);\n                    }\n                    // scrollBounds is already scaled\n                    let sLeft = frozenWidth * scale + scrollBounds.left + rowMarkerOffset * rowMarkerWidth * scale;\n                    let sRight = scrollBounds.right;\n                    let sTop = scrollBounds.top + totalHeaderHeight * scale;\n                    let sBottom = scrollBounds.bottom - trailingRowHeight * scale;\n                    const minx = targetRect.width + paddingX * 2;\n                    switch (options?.hAlign) {\n                        case \"start\":\n                            sRight = sLeft + minx;\n                            break;\n                        case \"end\":\n                            sLeft = sRight - minx;\n                            break;\n                        case \"center\":\n                            sLeft = Math.floor((sLeft + sRight) / 2) - minx / 2;\n                            sRight = sLeft + minx;\n                            break;\n                    }\n                    const miny = targetRect.height + paddingY * 2;\n                    switch (options?.vAlign) {\n                        case \"start\":\n                            sBottom = sTop + miny;\n                            break;\n                        case \"end\":\n                            sTop = sBottom - miny;\n                            break;\n                        case \"center\":\n                            sTop = Math.floor((sTop + sBottom) / 2) - miny / 2;\n                            sBottom = sTop + miny;\n                            break;\n                    }\n                    if (sLeft > bounds.x) {\n                        scrollX = bounds.x - sLeft;\n                    }\n                    else if (sRight < bounds.x + bounds.width) {\n                        scrollX = bounds.x + bounds.width - sRight;\n                    }\n                    if (sTop > bounds.y) {\n                        scrollY = bounds.y - sTop;\n                    }\n                    else if (sBottom < bounds.y + bounds.height) {\n                        scrollY = bounds.y + bounds.height - sBottom;\n                    }\n                    if (dir === \"vertical\" || (typeof col === \"number\" && col < freezeColumns)) {\n                        scrollX = 0;\n                    }\n                    else if (dir === \"horizontal\" ||\n                        (typeof row === \"number\" && row >= mangledRows - freezeTrailingRowsEffective)) {\n                        scrollY = 0;\n                    }\n                    if (scrollX !== 0 || scrollY !== 0) {\n                        // Remove scaling as scrollTo method is unaffected by transform scale.\n                        if (scale !== 1) {\n                            scrollX /= scale;\n                            scrollY /= scale;\n                        }\n                        scrollRef.current.scrollTo(scrollX + scrollRef.current.scrollLeft, scrollY + scrollRef.current.scrollTop);\n                    }\n                }\n            }\n        }\n    }, [\n        rowMarkerOffset,\n        freezeTrailingRows,\n        rowMarkerWidth,\n        totalHeaderHeight,\n        freezeColumns,\n        columns,\n        mangledRows,\n        lastRowSticky,\n        rowHeight,\n    ]);\n    const focusCallback = react__WEBPACK_IMPORTED_MODULE_0__.useRef(focusOnRowFromTrailingBlankRow);\n    const getCellContentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(getCellContent);\n    const rowsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(rows);\n    focusCallback.current = focusOnRowFromTrailingBlankRow;\n    getCellContentRef.current = getCellContent;\n    rowsRef.current = rows;\n    const appendRow = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (col, openOverlay = true) => {\n        const c = mangledCols[col];\n        if (c?.trailingRowOptions?.disabled === true) {\n            return;\n        }\n        const appendResult = onRowAppended?.();\n        let r = undefined;\n        let bottom = true;\n        if (appendResult !== undefined) {\n            r = await appendResult;\n            if (r === \"top\")\n                bottom = false;\n            if (typeof r === \"number\")\n                bottom = false;\n        }\n        let backoff = 0;\n        const doFocus = () => {\n            if (rowsRef.current <= rows) {\n                if (backoff < 500) {\n                    window.setTimeout(doFocus, backoff);\n                }\n                backoff = 50 + backoff * 2;\n                return;\n            }\n            const row = typeof r === \"number\" ? r : bottom ? rows : 0;\n            scrollToRef.current(col - rowMarkerOffset, row);\n            setCurrent({\n                cell: [col, row],\n                range: {\n                    x: col,\n                    y: row,\n                    width: 1,\n                    height: 1,\n                },\n            }, false, false, \"edit\");\n            const cell = getCellContentRef.current([col - rowMarkerOffset, row]);\n            if (cell.allowOverlay && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isReadWriteCell)(cell) && cell.readonly !== true && openOverlay) {\n                // wait for scroll to have a chance to process\n                window.setTimeout(() => {\n                    focusCallback.current(col, row);\n                }, 0);\n            }\n        };\n        // Queue up to allow the consumer to react to the event and let us check if they did\n        doFocus();\n    }, [mangledCols, onRowAppended, rowMarkerOffset, rows, setCurrent]);\n    const getCustomNewRowTargetColumn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col) => {\n        const customTargetColumn = columns[col]?.trailingRowOptions?.targetColumn ?? trailingRowOptions?.targetColumn;\n        if (typeof customTargetColumn === \"number\") {\n            const customTargetOffset = hasRowMarkers ? 1 : 0;\n            return customTargetColumn + customTargetOffset;\n        }\n        if (typeof customTargetColumn === \"object\") {\n            const maybeIndex = columnsIn.indexOf(customTargetColumn);\n            if (maybeIndex >= 0) {\n                const customTargetOffset = hasRowMarkers ? 1 : 0;\n                return maybeIndex + customTargetOffset;\n            }\n        }\n        return undefined;\n    }, [columns, columnsIn, hasRowMarkers, trailingRowOptions?.targetColumn]);\n    const lastSelectedRowRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const lastSelectedColRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const themeForCell = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((cell, pos) => {\n        const [col, row] = pos;\n        return (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.mergeAndRealizeTheme)(mergedTheme, mangledCols[col]?.themeOverride, getRowThemeOverride?.(row), cell.themeOverride);\n    }, [getRowThemeOverride, mangledCols, mergedTheme]);\n    const handleSelect = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        const isMultiKey = _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_19__.browserIsOSX.value ? args.metaKey : args.ctrlKey;\n        const isMultiRow = isMultiKey && rowSelect === \"multi\";\n        const isMultiCol = isMultiKey && columnSelect === \"multi\";\n        const [col, row] = args.location;\n        const selectedColumns = gridSelection.columns;\n        const selectedRows = gridSelection.rows;\n        const [cellCol, cellRow] = gridSelection.current?.cell ?? [];\n        // eslint-disable-next-line unicorn/prefer-switch\n        if (args.kind === \"cell\") {\n            lastSelectedColRef.current = undefined;\n            lastMouseSelectLocation.current = [col, row];\n            if (col === 0 && hasRowMarkers) {\n                if ((showTrailingBlankRow === true && row === rows) ||\n                    rowMarkers === \"number\" ||\n                    rowSelect === \"none\")\n                    return;\n                const markerCell = getMangledCellContent(args.location);\n                if (markerCell.kind !== _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.InnerGridCellKind.Marker) {\n                    return;\n                }\n                if (onRowMoved !== undefined) {\n                    const renderer = getCellRenderer(markerCell);\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.assert)(renderer?.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.InnerGridCellKind.Marker);\n                    const postClick = renderer?.onClick?.({\n                        ...args,\n                        cell: markerCell,\n                        posX: args.localEventX,\n                        posY: args.localEventY,\n                        bounds: args.bounds,\n                        theme: themeForCell(markerCell, args.location),\n                        preventDefault: () => undefined,\n                    });\n                    if (postClick === undefined || postClick.checked === markerCell.checked)\n                        return;\n                }\n                setOverlay(undefined);\n                focus();\n                const isSelected = selectedRows.hasIndex(row);\n                const lastHighlighted = lastSelectedRowRef.current;\n                if (rowSelect === \"multi\" &&\n                    (args.shiftKey || args.isLongTouch === true) &&\n                    lastHighlighted !== undefined &&\n                    selectedRows.hasIndex(lastHighlighted)) {\n                    const newSlice = [Math.min(lastHighlighted, row), Math.max(lastHighlighted, row) + 1];\n                    if (isMultiRow || rowSelectionMode === \"multi\") {\n                        setSelectedRows(undefined, newSlice, true);\n                    }\n                    else {\n                        setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(newSlice), undefined, isMultiRow);\n                    }\n                }\n                else if (isMultiRow || args.isTouch || rowSelectionMode === \"multi\") {\n                    if (isSelected) {\n                        setSelectedRows(selectedRows.remove(row), undefined, true);\n                    }\n                    else {\n                        setSelectedRows(undefined, row, true);\n                        lastSelectedRowRef.current = row;\n                    }\n                }\n                else if (isSelected && selectedRows.length === 1) {\n                    setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(), undefined, isMultiKey);\n                }\n                else {\n                    setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(row), undefined, isMultiKey);\n                    lastSelectedRowRef.current = row;\n                }\n            }\n            else if (col >= rowMarkerOffset && showTrailingBlankRow && row === rows) {\n                const customTargetColumn = getCustomNewRowTargetColumn(col);\n                void appendRow(customTargetColumn ?? col);\n            }\n            else {\n                if (cellCol !== col || cellRow !== row) {\n                    const cell = getMangledCellContent(args.location);\n                    const renderer = getCellRenderer(cell);\n                    if (renderer?.onSelect !== undefined) {\n                        let prevented = false;\n                        renderer.onSelect({\n                            ...args,\n                            cell,\n                            posX: args.localEventX,\n                            posY: args.localEventY,\n                            bounds: args.bounds,\n                            preventDefault: () => (prevented = true),\n                            theme: themeForCell(cell, args.location),\n                        });\n                        if (prevented) {\n                            return;\n                        }\n                    }\n                    const isLastStickyRow = lastRowSticky && row === rows;\n                    const startedFromLastSticky = lastRowSticky && gridSelection !== undefined && gridSelection.current?.cell[1] === rows;\n                    if ((args.shiftKey || args.isLongTouch === true) &&\n                        cellCol !== undefined &&\n                        cellRow !== undefined &&\n                        gridSelection.current !== undefined &&\n                        !startedFromLastSticky) {\n                        if (isLastStickyRow) {\n                            // If we're making a selection and shift click in to the last sticky row,\n                            // just drop the event. Don't kill the selection.\n                            return;\n                        }\n                        const left = Math.min(col, cellCol);\n                        const right = Math.max(col, cellCol);\n                        const top = Math.min(row, cellRow);\n                        const bottom = Math.max(row, cellRow);\n                        setCurrent({\n                            ...gridSelection.current,\n                            range: {\n                                x: left,\n                                y: top,\n                                width: right - left + 1,\n                                height: bottom - top + 1,\n                            },\n                        }, true, isMultiKey, \"click\");\n                        lastSelectedRowRef.current = undefined;\n                        focus();\n                    }\n                    else {\n                        setCurrent({\n                            cell: [col, row],\n                            range: { x: col, y: row, width: 1, height: 1 },\n                        }, true, isMultiKey, \"click\");\n                        lastSelectedRowRef.current = undefined;\n                        setOverlay(undefined);\n                        focus();\n                    }\n                }\n            }\n        }\n        else if (args.kind === \"header\") {\n            lastMouseSelectLocation.current = [col, row];\n            setOverlay(undefined);\n            if (hasRowMarkers && col === 0) {\n                lastSelectedRowRef.current = undefined;\n                lastSelectedColRef.current = undefined;\n                if (rowSelect === \"multi\") {\n                    if (selectedRows.length !== rows) {\n                        setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection([0, rows]), undefined, isMultiKey);\n                    }\n                    else {\n                        setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(), undefined, isMultiKey);\n                    }\n                    focus();\n                }\n            }\n            else {\n                const lastCol = lastSelectedColRef.current;\n                if (columnSelect === \"multi\" &&\n                    (args.shiftKey || args.isLongTouch === true) &&\n                    lastCol !== undefined &&\n                    selectedColumns.hasIndex(lastCol)) {\n                    const newSlice = [Math.min(lastCol, col), Math.max(lastCol, col) + 1];\n                    if (isMultiCol) {\n                        setSelectedColumns(undefined, newSlice, isMultiKey);\n                    }\n                    else {\n                        setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(newSlice), undefined, isMultiKey);\n                    }\n                }\n                else if (isMultiCol) {\n                    if (selectedColumns.hasIndex(col)) {\n                        setSelectedColumns(selectedColumns.remove(col), undefined, isMultiKey);\n                    }\n                    else {\n                        setSelectedColumns(undefined, col, isMultiKey);\n                    }\n                    lastSelectedColRef.current = col;\n                }\n                else if (columnSelect !== \"none\") {\n                    setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(col), undefined, isMultiKey);\n                    lastSelectedColRef.current = col;\n                }\n                lastSelectedRowRef.current = undefined;\n                focus();\n            }\n        }\n        else if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind) {\n            lastMouseSelectLocation.current = [col, row];\n        }\n        else if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.outOfBoundsKind && !args.isMaybeScrollbar) {\n            setGridSelection(emptyGridSelection, false);\n            setOverlay(undefined);\n            focus();\n            onSelectionCleared?.();\n            lastSelectedRowRef.current = undefined;\n            lastSelectedColRef.current = undefined;\n        }\n    }, [\n        appendRow,\n        columnSelect,\n        focus,\n        getCellRenderer,\n        getCustomNewRowTargetColumn,\n        getMangledCellContent,\n        gridSelection,\n        hasRowMarkers,\n        lastRowSticky,\n        onSelectionCleared,\n        onRowMoved,\n        rowMarkerOffset,\n        rowMarkers,\n        rowSelect,\n        rowSelectionMode,\n        rows,\n        setCurrent,\n        setGridSelection,\n        setSelectedColumns,\n        setSelectedRows,\n        showTrailingBlankRow,\n        themeForCell,\n    ]);\n    const isActivelyDraggingHeader = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const lastMouseSelectLocation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const touchDownArgs = react__WEBPACK_IMPORTED_MODULE_0__.useRef(visibleRegion);\n    const mouseDownData = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const onMouseDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        isPrevented.current = false;\n        touchDownArgs.current = visibleRegionRef.current;\n        if (args.button !== 0 && args.button !== 1) {\n            mouseDownData.current = undefined;\n            return;\n        }\n        const time = performance.now();\n        mouseDownData.current = {\n            button: args.button,\n            time,\n            location: args.location,\n        };\n        if (args?.kind === \"header\") {\n            isActivelyDraggingHeader.current = true;\n        }\n        const fh = args.kind === \"cell\" && args.isFillHandle;\n        if (!fh && args.kind !== \"cell\" && args.isEdge)\n            return;\n        setMouseState({\n            previousSelection: gridSelection,\n            fillHandle: fh,\n        });\n        lastMouseSelectLocation.current = undefined;\n        if (!args.isTouch && args.button === 0 && !fh) {\n            handleSelect(args);\n        }\n        else if (!args.isTouch && args.button === 1) {\n            lastMouseSelectLocation.current = args.location;\n        }\n    }, [gridSelection, handleSelect]);\n    const [renameGroup, setRenameGroup] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const handleGroupHeaderSelection = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        if (args.kind !== _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind || columnSelect !== \"multi\") {\n            return;\n        }\n        const isMultiKey = _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_19__.browserIsOSX.value ? args.metaKey : args.ctrlKey;\n        const [col] = args.location;\n        const selectedColumns = gridSelection.columns;\n        if (col < rowMarkerOffset)\n            return;\n        const needle = mangledCols[col];\n        let start = col;\n        let end = col;\n        for (let i = col - 1; i >= rowMarkerOffset; i--) {\n            if (!(0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.isGroupEqual)(needle.group, mangledCols[i].group))\n                break;\n            start--;\n        }\n        for (let i = col + 1; i < mangledCols.length; i++) {\n            if (!(0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.isGroupEqual)(needle.group, mangledCols[i].group))\n                break;\n            end++;\n        }\n        focus();\n        if (isMultiKey) {\n            if (selectedColumns.hasAll([start, end + 1])) {\n                let newVal = selectedColumns;\n                for (let index = start; index <= end; index++) {\n                    newVal = newVal.remove(index);\n                }\n                setSelectedColumns(newVal, undefined, isMultiKey);\n            }\n            else {\n                setSelectedColumns(undefined, [start, end + 1], isMultiKey);\n            }\n        }\n        else {\n            setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection([start, end + 1]), undefined, isMultiKey);\n        }\n    }, [columnSelect, focus, gridSelection.columns, mangledCols, rowMarkerOffset, setSelectedColumns]);\n    const isPrevented = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const normalSizeColumn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (col) => {\n        if (getCellsForSelection !== undefined && onColumnResize !== undefined) {\n            const start = visibleRegionRef.current.y;\n            const end = visibleRegionRef.current.height;\n            let cells = getCellsForSelection({\n                x: col,\n                y: start,\n                width: 1,\n                height: Math.min(end, rows - start),\n            }, abortControllerRef.current.signal);\n            if (typeof cells !== \"object\") {\n                cells = await cells();\n            }\n            const inputCol = columns[col - rowMarkerOffset];\n            const offscreen = document.createElement(\"canvas\");\n            const ctx = offscreen.getContext(\"2d\", { alpha: false });\n            if (ctx !== null) {\n                ctx.font = mergedTheme.baseFontFull;\n                const newCol = (0,_use_column_sizer_js__WEBPACK_IMPORTED_MODULE_14__.measureColumn)(ctx, mergedTheme, inputCol, 0, cells, minColumnWidth, maxColumnWidth, false, getCellRenderer);\n                onColumnResize?.(inputCol, newCol.width, col, newCol.width);\n            }\n        }\n    }, [\n        columns,\n        getCellsForSelection,\n        maxColumnWidth,\n        mergedTheme,\n        minColumnWidth,\n        onColumnResize,\n        rowMarkerOffset,\n        rows,\n        getCellRenderer,\n    ]);\n    const [scrollDir, setScrollDir] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const fillPattern = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (previousSelection, currentSelection) => {\n        const patternRange = previousSelection.current?.range;\n        if (patternRange === undefined ||\n            getCellsForSelection === undefined ||\n            currentSelection.current === undefined) {\n            return;\n        }\n        const currentRange = currentSelection.current.range;\n        if (onFillPattern !== undefined) {\n            let canceled = false;\n            onFillPattern({\n                fillDestination: { ...currentRange, x: currentRange.x - rowMarkerOffset },\n                patternSource: { ...patternRange, x: patternRange.x - rowMarkerOffset },\n                preventDefault: () => (canceled = true),\n            });\n            if (canceled)\n                return;\n        }\n        let cells = getCellsForSelection(patternRange, abortControllerRef.current.signal);\n        if (typeof cells !== \"object\")\n            cells = await cells();\n        const pattern = cells;\n        // loop through all cells in currentSelection.current.range\n        const editItemList = [];\n        for (let x = 0; x < currentRange.width; x++) {\n            for (let y = 0; y < currentRange.height; y++) {\n                const cell = [currentRange.x + x, currentRange.y + y];\n                if ((0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.itemIsInRect)(cell, patternRange))\n                    continue;\n                const patternCell = pattern[y % patternRange.height][x % patternRange.width];\n                if ((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isInnerOnlyCell)(patternCell) || !(0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isReadWriteCell)(patternCell))\n                    continue;\n                editItemList.push({\n                    location: cell,\n                    value: { ...patternCell },\n                });\n            }\n        }\n        mangledOnCellsEdited(editItemList);\n        gridRef.current?.damage(editItemList.map(c => ({\n            cell: c.location,\n        })));\n    }, [getCellsForSelection, mangledOnCellsEdited, onFillPattern, rowMarkerOffset]);\n    const fillRight = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (gridSelection.current === undefined || gridSelection.current.range.width <= 1)\n            return;\n        const firstColSelection = {\n            ...gridSelection,\n            current: {\n                ...gridSelection.current,\n                range: {\n                    ...gridSelection.current.range,\n                    width: 1,\n                },\n            },\n        };\n        void fillPattern(firstColSelection, gridSelection);\n    }, [fillPattern, gridSelection]);\n    const fillDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (gridSelection.current === undefined || gridSelection.current.range.height <= 1)\n            return;\n        const firstRowSelection = {\n            ...gridSelection,\n            current: {\n                ...gridSelection.current,\n                range: {\n                    ...gridSelection.current.range,\n                    height: 1,\n                },\n            },\n        };\n        void fillPattern(firstRowSelection, gridSelection);\n    }, [fillPattern, gridSelection]);\n    const onMouseUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args, isOutside) => {\n        const mouse = mouseState;\n        setMouseState(undefined);\n        setFillHighlightRegion(undefined);\n        setScrollDir(undefined);\n        isActivelyDraggingHeader.current = false;\n        if (isOutside)\n            return;\n        if (mouse?.fillHandle === true &&\n            gridSelection.current !== undefined &&\n            mouse.previousSelection?.current !== undefined) {\n            if (fillHighlightRegion === undefined)\n                return;\n            const newRange = {\n                ...gridSelection,\n                current: {\n                    ...gridSelection.current,\n                    range: (0,_common_math_js__WEBPACK_IMPORTED_MODULE_16__.combineRects)(mouse.previousSelection.current.range, fillHighlightRegion),\n                },\n            };\n            void fillPattern(mouse.previousSelection, newRange);\n            setGridSelection(newRange, true);\n            return;\n        }\n        const [col, row] = args.location;\n        const [lastMouseDownCol, lastMouseDownRow] = lastMouseSelectLocation.current ?? [];\n        const preventDefault = () => {\n            isPrevented.current = true;\n        };\n        const handleMaybeClick = (a) => {\n            const isValidClick = a.isTouch || (lastMouseDownCol === col && lastMouseDownRow === row);\n            if (isValidClick) {\n                onCellClicked?.([col - rowMarkerOffset, row], {\n                    ...a,\n                    preventDefault,\n                });\n            }\n            if (a.button === 1)\n                return !isPrevented.current;\n            if (!isPrevented.current) {\n                const c = getMangledCellContent(args.location);\n                const r = getCellRenderer(c);\n                if (r !== undefined && r.onClick !== undefined && isValidClick) {\n                    const newVal = r.onClick({\n                        ...a,\n                        cell: c,\n                        posX: a.localEventX,\n                        posY: a.localEventY,\n                        bounds: a.bounds,\n                        theme: themeForCell(c, args.location),\n                        preventDefault,\n                    });\n                    if (newVal !== undefined && !(0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isInnerOnlyCell)(newVal) && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isEditableGridCell)(newVal)) {\n                        mangledOnCellsEdited([{ location: a.location, value: newVal }]);\n                        gridRef.current?.damage([\n                            {\n                                cell: a.location,\n                            },\n                        ]);\n                    }\n                }\n                if (isPrevented.current || gridSelection.current === undefined)\n                    return false;\n                let shouldActivate = false;\n                switch (c.activationBehaviorOverride ?? cellActivationBehavior) {\n                    case \"double-click\":\n                    case \"second-click\": {\n                        if (mouse?.previousSelection?.current?.cell === undefined)\n                            break;\n                        const [selectedCol, selectedRow] = gridSelection.current.cell;\n                        const [prevCol, prevRow] = mouse.previousSelection.current.cell;\n                        const isClickOnSelected = col === selectedCol && col === prevCol && row === selectedRow && row === prevRow;\n                        shouldActivate =\n                            isClickOnSelected &&\n                                (a.isDoubleClick === true || cellActivationBehavior === \"second-click\");\n                        break;\n                    }\n                    case \"single-click\": {\n                        shouldActivate = true;\n                        break;\n                    }\n                }\n                if (shouldActivate) {\n                    onCellActivated?.([col - rowMarkerOffset, row]);\n                    reselect(a.bounds, false);\n                    return true;\n                }\n            }\n            return false;\n        };\n        const clickLocation = args.location[0] - rowMarkerOffset;\n        if (args.isTouch) {\n            const vr = visibleRegionRef.current;\n            const touchVr = touchDownArgs.current;\n            if (vr.x !== touchVr.x || vr.y !== touchVr.y) {\n                // we scrolled, abort\n                return;\n            }\n            // take care of context menus first if long pressed item is already selected\n            if (args.isLongTouch === true) {\n                if (args.kind === \"cell\" && (0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.itemsAreEqual)(gridSelection.current?.cell, args.location)) {\n                    onCellContextMenu?.([clickLocation, args.location[1]], {\n                        ...args,\n                        preventDefault,\n                    });\n                    return;\n                }\n                else if (args.kind === \"header\" && gridSelection.columns.hasIndex(col)) {\n                    onHeaderContextMenu?.(clickLocation, { ...args, preventDefault });\n                    return;\n                }\n                else if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind) {\n                    if (clickLocation < 0) {\n                        return;\n                    }\n                    onGroupHeaderContextMenu?.(clickLocation, { ...args, preventDefault });\n                    return;\n                }\n            }\n            if (args.kind === \"cell\") {\n                // click that cell\n                if (!handleMaybeClick(args)) {\n                    handleSelect(args);\n                }\n            }\n            else if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind) {\n                onGroupHeaderClicked?.(clickLocation, { ...args, preventDefault });\n            }\n            else {\n                if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.headerKind) {\n                    onHeaderClicked?.(clickLocation, {\n                        ...args,\n                        preventDefault,\n                    });\n                }\n                handleSelect(args);\n            }\n            return;\n        }\n        if (args.kind === \"header\") {\n            if (clickLocation < 0) {\n                return;\n            }\n            if (args.isEdge) {\n                if (args.isDoubleClick === true) {\n                    void normalSizeColumn(col);\n                }\n            }\n            else if (args.button === 0 && col === lastMouseDownCol && row === lastMouseDownRow) {\n                onHeaderClicked?.(clickLocation, { ...args, preventDefault });\n            }\n        }\n        if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind) {\n            if (clickLocation < 0) {\n                return;\n            }\n            if (args.button === 0 && col === lastMouseDownCol && row === lastMouseDownRow) {\n                onGroupHeaderClicked?.(clickLocation, { ...args, preventDefault });\n                if (!isPrevented.current) {\n                    handleGroupHeaderSelection(args);\n                }\n            }\n        }\n        if (args.kind === \"cell\" && (args.button === 0 || args.button === 1)) {\n            handleMaybeClick(args);\n        }\n        lastMouseSelectLocation.current = undefined;\n    }, [\n        mouseState,\n        gridSelection,\n        rowMarkerOffset,\n        fillHighlightRegion,\n        fillPattern,\n        setGridSelection,\n        onCellClicked,\n        getMangledCellContent,\n        getCellRenderer,\n        cellActivationBehavior,\n        themeForCell,\n        mangledOnCellsEdited,\n        onCellActivated,\n        reselect,\n        onCellContextMenu,\n        onHeaderContextMenu,\n        onGroupHeaderContextMenu,\n        handleSelect,\n        onGroupHeaderClicked,\n        onHeaderClicked,\n        normalSizeColumn,\n        handleGroupHeaderSelection,\n    ]);\n    const onMouseMoveImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        const a = {\n            ...args,\n            location: [args.location[0] - rowMarkerOffset, args.location[1]],\n        };\n        onMouseMove?.(a);\n        if (mouseState !== undefined && args.buttons === 0) {\n            setMouseState(undefined);\n            setFillHighlightRegion(undefined);\n            setScrollDir(undefined);\n            isActivelyDraggingHeader.current = false;\n        }\n        setScrollDir(cv => {\n            if (isActivelyDraggingHeader.current)\n                return [args.scrollEdge[0], 0];\n            if (args.scrollEdge[0] === cv?.[0] && args.scrollEdge[1] === cv[1])\n                return cv;\n            return mouseState === undefined || (mouseDownData.current?.location[0] ?? 0) < rowMarkerOffset\n                ? undefined\n                : args.scrollEdge;\n        });\n    }, [mouseState, onMouseMove, rowMarkerOffset]);\n    const onHeaderMenuClickInner = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col, screenPosition) => {\n        onHeaderMenuClick?.(col - rowMarkerOffset, screenPosition);\n    }, [onHeaderMenuClick, rowMarkerOffset]);\n    const currentCell = gridSelection?.current?.cell;\n    const onVisibleRegionChangedImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((region, clientWidth, clientHeight, rightElWidth, tx, ty) => {\n        hasJustScrolled.current = false;\n        let selected = currentCell;\n        if (selected !== undefined) {\n            selected = [selected[0] - rowMarkerOffset, selected[1]];\n        }\n        const freezeRegion = freezeColumns === 0\n            ? undefined\n            : {\n                x: 0,\n                y: region.y,\n                width: freezeColumns,\n                height: region.height,\n            };\n        const freezeRegions = [];\n        if (freezeRegion !== undefined)\n            freezeRegions.push(freezeRegion);\n        if (freezeTrailingRows > 0) {\n            freezeRegions.push({\n                x: region.x - rowMarkerOffset,\n                y: rows - freezeTrailingRows,\n                width: region.width,\n                height: freezeTrailingRows,\n            });\n            if (freezeColumns > 0) {\n                freezeRegions.push({\n                    x: 0,\n                    y: rows - freezeTrailingRows,\n                    width: freezeColumns,\n                    height: freezeTrailingRows,\n                });\n            }\n        }\n        const newRegion = {\n            x: region.x - rowMarkerOffset,\n            y: region.y,\n            width: region.width,\n            height: showTrailingBlankRow && region.y + region.height >= rows ? region.height - 1 : region.height,\n            tx,\n            ty,\n            extras: {\n                selected,\n                freezeRegion,\n                freezeRegions,\n            },\n        };\n        visibleRegionRef.current = newRegion;\n        setVisibleRegion(newRegion);\n        setClientSize([clientWidth, clientHeight, rightElWidth]);\n        onVisibleRegionChanged?.(newRegion, newRegion.tx, newRegion.ty, newRegion.extras);\n    }, [\n        currentCell,\n        rowMarkerOffset,\n        showTrailingBlankRow,\n        rows,\n        freezeColumns,\n        freezeTrailingRows,\n        setVisibleRegion,\n        onVisibleRegionChanged,\n    ]);\n    const onColumnMovedImpl = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.whenDefined)(onColumnMoved, react__WEBPACK_IMPORTED_MODULE_0__.useCallback((startIndex, endIndex) => {\n        onColumnMoved?.(startIndex - rowMarkerOffset, endIndex - rowMarkerOffset);\n        if (columnSelect !== \"none\") {\n            setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(endIndex), undefined, true);\n        }\n    }, [columnSelect, onColumnMoved, rowMarkerOffset, setSelectedColumns]));\n    const isActivelyDragging = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const onDragStartImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        if (args.location[0] === 0 && rowMarkerOffset > 0) {\n            args.preventDefault();\n            return;\n        }\n        onDragStart?.({\n            ...args,\n            location: [args.location[0] - rowMarkerOffset, args.location[1]],\n        });\n        if (!args.defaultPrevented()) {\n            isActivelyDragging.current = true;\n        }\n        setMouseState(undefined);\n    }, [onDragStart, rowMarkerOffset]);\n    const onDragEnd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        isActivelyDragging.current = false;\n    }, []);\n    const hoveredRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const onItemHoveredImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        // make sure we still have a button down\n        if ((0,_internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.mouseEventArgsAreEqual)(args, hoveredRef.current))\n            return;\n        hoveredRef.current = args;\n        if (mouseDownData?.current?.button !== undefined && mouseDownData.current.button >= 1)\n            return;\n        if (args.buttons !== 0 &&\n            mouseState !== undefined &&\n            mouseDownData.current?.location[0] === 0 &&\n            args.location[0] === 0 &&\n            rowMarkerOffset === 1 &&\n            rowSelect === \"multi\" &&\n            mouseState.previousSelection &&\n            !mouseState.previousSelection.rows.hasIndex(mouseDownData.current.location[1]) &&\n            gridSelection.rows.hasIndex(mouseDownData.current.location[1])) {\n            const start = Math.min(mouseDownData.current.location[1], args.location[1]);\n            const end = Math.max(mouseDownData.current.location[1], args.location[1]) + 1;\n            setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection([start, end]), undefined, false);\n        }\n        if (args.buttons !== 0 &&\n            mouseState !== undefined &&\n            gridSelection.current !== undefined &&\n            !isActivelyDragging.current &&\n            !isActivelyDraggingHeader.current &&\n            (rangeSelect === \"rect\" || rangeSelect === \"multi-rect\")) {\n            const [selectedCol, selectedRow] = gridSelection.current.cell;\n            // eslint-disable-next-line prefer-const\n            let [col, row] = args.location;\n            if (row < 0) {\n                row = visibleRegionRef.current.y;\n            }\n            if (mouseState.fillHandle === true && mouseState.previousSelection?.current !== undefined) {\n                const prevRange = mouseState.previousSelection.current.range;\n                row = Math.min(row, showTrailingBlankRow ? rows - 1 : rows);\n                const rect = (0,_common_math_js__WEBPACK_IMPORTED_MODULE_16__.getClosestRect)(prevRange, col, row, allowedFillDirections);\n                setFillHighlightRegion(rect);\n            }\n            else {\n                const startedFromLastStickyRow = showTrailingBlankRow && selectedRow === rows;\n                if (startedFromLastStickyRow)\n                    return;\n                const landedOnLastStickyRow = showTrailingBlankRow && row === rows;\n                if (landedOnLastStickyRow) {\n                    if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.outOfBoundsKind)\n                        row--;\n                    else\n                        return;\n                }\n                col = Math.max(col, rowMarkerOffset);\n                const deltaX = col - selectedCol;\n                const deltaY = row - selectedRow;\n                const newRange = {\n                    x: deltaX >= 0 ? selectedCol : col,\n                    y: deltaY >= 0 ? selectedRow : row,\n                    width: Math.abs(deltaX) + 1,\n                    height: Math.abs(deltaY) + 1,\n                };\n                setCurrent({\n                    ...gridSelection.current,\n                    range: newRange,\n                }, true, false, \"drag\");\n            }\n        }\n        onItemHovered?.({ ...args, location: [args.location[0] - rowMarkerOffset, args.location[1]] });\n    }, [\n        allowedFillDirections,\n        mouseState,\n        rowMarkerOffset,\n        rowSelect,\n        gridSelection,\n        rangeSelect,\n        onItemHovered,\n        setSelectedRows,\n        showTrailingBlankRow,\n        rows,\n        setCurrent,\n    ]);\n    const adjustSelectionOnScroll = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        const args = hoveredRef.current;\n        if (args === undefined)\n            return;\n        const [xDir, yDir] = args.scrollEdge;\n        let [col, row] = args.location;\n        const visible = visibleRegionRef.current;\n        if (xDir === -1) {\n            col = visible.extras?.freezeRegion?.x ?? visible.x;\n        }\n        else if (xDir === 1) {\n            col = visible.x + visible.width;\n        }\n        if (yDir === -1) {\n            row = Math.max(0, visible.y);\n        }\n        else if (yDir === 1) {\n            row = Math.min(rows - 1, visible.y + visible.height);\n        }\n        col = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(col, 0, mangledCols.length - 1);\n        row = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(row, 0, rows - 1);\n        onItemHoveredImpl({\n            ...args,\n            location: [col, row],\n        });\n    }, [mangledCols.length, onItemHoveredImpl, rows]);\n    (0,_use_autoscroll_js__WEBPACK_IMPORTED_MODULE_21__.useAutoscroll)(scrollDir, scrollRef, adjustSelectionOnScroll);\n    // 1 === move one\n    // 2 === move to end\n    const adjustSelection = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((direction) => {\n        if (gridSelection.current === undefined)\n            return;\n        const [x, y] = direction;\n        const [col, row] = gridSelection.current.cell;\n        const old = gridSelection.current.range;\n        let left = old.x;\n        let right = old.x + old.width;\n        let top = old.y;\n        let bottom = old.y + old.height;\n        // take care of vertical first in case new spans come in\n        if (y !== 0) {\n            switch (y) {\n                case 2: {\n                    // go to end\n                    bottom = rows;\n                    top = row;\n                    scrollTo(0, bottom, \"vertical\");\n                    break;\n                }\n                case -2: {\n                    // go to start\n                    top = 0;\n                    bottom = row + 1;\n                    scrollTo(0, top, \"vertical\");\n                    break;\n                }\n                case 1: {\n                    // motion down\n                    if (top < row) {\n                        top++;\n                        scrollTo(0, top, \"vertical\");\n                    }\n                    else {\n                        bottom = Math.min(rows, bottom + 1);\n                        scrollTo(0, bottom, \"vertical\");\n                    }\n                    break;\n                }\n                case -1: {\n                    // motion up\n                    if (bottom > row + 1) {\n                        bottom--;\n                        scrollTo(0, bottom, \"vertical\");\n                    }\n                    else {\n                        top = Math.max(0, top - 1);\n                        scrollTo(0, top, \"vertical\");\n                    }\n                    break;\n                }\n                default: {\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.assertNever)(y);\n                }\n            }\n        }\n        if (x !== 0) {\n            if (x === 2) {\n                right = mangledCols.length;\n                left = col;\n                scrollTo(right - 1 - rowMarkerOffset, 0, \"horizontal\");\n            }\n            else if (x === -2) {\n                left = rowMarkerOffset;\n                right = col + 1;\n                scrollTo(left - rowMarkerOffset, 0, \"horizontal\");\n            }\n            else {\n                let disallowed = [];\n                if (getCellsForSelection !== undefined) {\n                    const cells = getCellsForSelection({\n                        x: left,\n                        y: top,\n                        width: right - left - rowMarkerOffset,\n                        height: bottom - top,\n                    }, abortControllerRef.current.signal);\n                    if (typeof cells === \"object\") {\n                        disallowed = getSpanStops(cells);\n                    }\n                }\n                if (x === 1) {\n                    // motion right\n                    let done = false;\n                    if (left < col) {\n                        if (disallowed.length > 0) {\n                            const target = lodash_range_js__WEBPACK_IMPORTED_MODULE_4__(left + 1, col + 1).find(n => !disallowed.includes(n - rowMarkerOffset));\n                            if (target !== undefined) {\n                                left = target;\n                                done = true;\n                            }\n                        }\n                        else {\n                            left++;\n                            done = true;\n                        }\n                        if (done)\n                            scrollTo(left, 0, \"horizontal\");\n                    }\n                    if (!done) {\n                        right = Math.min(mangledCols.length, right + 1);\n                        scrollTo(right - 1 - rowMarkerOffset, 0, \"horizontal\");\n                    }\n                }\n                else if (x === -1) {\n                    // motion left\n                    let done = false;\n                    if (right > col + 1) {\n                        if (disallowed.length > 0) {\n                            const target = lodash_range_js__WEBPACK_IMPORTED_MODULE_4__(right - 1, col, -1).find(n => !disallowed.includes(n - rowMarkerOffset));\n                            if (target !== undefined) {\n                                right = target;\n                                done = true;\n                            }\n                        }\n                        else {\n                            right--;\n                            done = true;\n                        }\n                        if (done)\n                            scrollTo(right - rowMarkerOffset, 0, \"horizontal\");\n                    }\n                    if (!done) {\n                        left = Math.max(rowMarkerOffset, left - 1);\n                        scrollTo(left - rowMarkerOffset, 0, \"horizontal\");\n                    }\n                }\n                else {\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.assertNever)(x);\n                }\n            }\n        }\n        setCurrent({\n            cell: gridSelection.current.cell,\n            range: {\n                x: left,\n                y: top,\n                width: right - left,\n                height: bottom - top,\n            },\n        }, true, false, \"keyboard-select\");\n    }, [getCellsForSelection, gridSelection, mangledCols.length, rowMarkerOffset, rows, scrollTo, setCurrent]);\n    const updateSelectedCell = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col, row, fromEditingTrailingRow, freeMove) => {\n        const rowMax = mangledRows - (fromEditingTrailingRow ? 0 : 1);\n        col = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(col, rowMarkerOffset, columns.length - 1 + rowMarkerOffset);\n        row = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(row, 0, rowMax);\n        if (col === currentCell?.[0] && row === currentCell?.[1])\n            return false;\n        if (freeMove && gridSelection.current !== undefined) {\n            const newStack = [...gridSelection.current.rangeStack];\n            if (gridSelection.current.range.width > 1 || gridSelection.current.range.height > 1) {\n                newStack.push(gridSelection.current.range);\n            }\n            setGridSelection({\n                ...gridSelection,\n                current: {\n                    cell: [col, row],\n                    range: { x: col, y: row, width: 1, height: 1 },\n                    rangeStack: newStack,\n                },\n            }, true);\n        }\n        else {\n            setCurrent({\n                cell: [col, row],\n                range: { x: col, y: row, width: 1, height: 1 },\n            }, true, false, \"keyboard-nav\");\n        }\n        if (lastSent.current !== undefined && lastSent.current[0] === col && lastSent.current[1] === row) {\n            lastSent.current = undefined;\n        }\n        scrollTo(col - rowMarkerOffset, row);\n        return true;\n    }, [\n        mangledRows,\n        rowMarkerOffset,\n        columns.length,\n        currentCell,\n        gridSelection,\n        scrollTo,\n        setGridSelection,\n        setCurrent,\n    ]);\n    const onFinishEditing = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newValue, movement) => {\n        if (overlay?.cell !== undefined && newValue !== undefined && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isEditableGridCell)(newValue)) {\n            mangledOnCellsEdited([{ location: overlay.cell, value: newValue }]);\n            window.requestAnimationFrame(() => {\n                gridRef.current?.damage([\n                    {\n                        cell: overlay.cell,\n                    },\n                ]);\n            });\n        }\n        focus(true);\n        setOverlay(undefined);\n        const [movX, movY] = movement;\n        if (gridSelection.current !== undefined && (movX !== 0 || movY !== 0)) {\n            const isEditingTrailingRow = gridSelection.current.cell[1] === mangledRows - 1 && newValue !== undefined;\n            updateSelectedCell(lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(gridSelection.current.cell[0] + movX, 0, mangledCols.length - 1), lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(gridSelection.current.cell[1] + movY, 0, mangledRows - 1), isEditingTrailingRow, false);\n        }\n        onFinishedEditing?.(newValue, movement);\n    }, [\n        overlay?.cell,\n        focus,\n        gridSelection,\n        onFinishedEditing,\n        mangledOnCellsEdited,\n        mangledRows,\n        updateSelectedCell,\n        mangledCols.length,\n    ]);\n    const overlayID = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return `gdg-overlay-${idCounter++}`;\n    }, []);\n    const deleteRange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((r) => {\n        focus();\n        const editList = [];\n        for (let x = r.x; x < r.x + r.width; x++) {\n            for (let y = r.y; y < r.y + r.height; y++) {\n                const cellValue = getCellContent([x - rowMarkerOffset, y]);\n                if (!cellValue.allowOverlay && cellValue.kind !== _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Boolean)\n                    continue;\n                let newVal = undefined;\n                if (cellValue.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Custom) {\n                    const toDelete = getCellRenderer(cellValue);\n                    const editor = toDelete?.provideEditor?.(cellValue);\n                    if (toDelete?.onDelete !== undefined) {\n                        newVal = toDelete.onDelete(cellValue);\n                    }\n                    else if ((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isObjectEditorCallbackResult)(editor)) {\n                        newVal = editor?.deletedValue?.(cellValue);\n                    }\n                }\n                else if (((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isEditableGridCell)(cellValue) && cellValue.allowOverlay) ||\n                    cellValue.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Boolean) {\n                    const toDelete = getCellRenderer(cellValue);\n                    newVal = toDelete?.onDelete?.(cellValue);\n                }\n                if (newVal !== undefined && !(0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isInnerOnlyCell)(newVal) && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isEditableGridCell)(newVal)) {\n                    editList.push({ location: [x, y], value: newVal });\n                }\n            }\n        }\n        mangledOnCellsEdited(editList);\n        gridRef.current?.damage(editList.map(x => ({ cell: x.location })));\n    }, [focus, getCellContent, getCellRenderer, mangledOnCellsEdited, rowMarkerOffset]);\n    const overlayOpen = overlay !== undefined;\n    const handleFixedKeybindings = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const cancel = () => {\n            event.stopPropagation();\n            event.preventDefault();\n        };\n        const details = {\n            didMatch: false,\n        };\n        const { bounds } = event;\n        const selectedColumns = gridSelection.columns;\n        const selectedRows = gridSelection.rows;\n        const keys = keybindings;\n        if (!overlayOpen && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.clear, event, details)) {\n            setGridSelection(emptyGridSelection, false);\n            onSelectionCleared?.();\n        }\n        else if (!overlayOpen && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectAll, event, details)) {\n            setGridSelection({\n                columns: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n                rows: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n                current: {\n                    cell: gridSelection.current?.cell ?? [rowMarkerOffset, 0],\n                    range: {\n                        x: rowMarkerOffset,\n                        y: 0,\n                        width: columnsIn.length,\n                        height: rows,\n                    },\n                    rangeStack: [],\n                },\n            }, false);\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.search, event, details)) {\n            searchInputRef?.current?.focus({ preventScroll: true });\n            setShowSearchInner(true);\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.delete, event, details)) {\n            const callbackResult = onDelete?.(gridSelection) ?? true;\n            if (callbackResult !== false) {\n                const toDelete = callbackResult === true ? gridSelection : callbackResult;\n                // delete order:\n                // 1) primary range\n                // 2) secondary ranges\n                // 3) columns\n                // 4) rows\n                if (toDelete.current !== undefined) {\n                    deleteRange(toDelete.current.range);\n                    for (const r of toDelete.current.rangeStack) {\n                        deleteRange(r);\n                    }\n                }\n                for (const r of toDelete.rows) {\n                    deleteRange({\n                        x: rowMarkerOffset,\n                        y: r,\n                        width: columnsIn.length,\n                        height: 1,\n                    });\n                }\n                for (const col of toDelete.columns) {\n                    deleteRange({\n                        x: col,\n                        y: 0,\n                        width: 1,\n                        height: rows,\n                    });\n                }\n            }\n        }\n        if (details.didMatch) {\n            cancel();\n            return true;\n        }\n        if (gridSelection.current === undefined)\n            return false;\n        let [col, row] = gridSelection.current.cell;\n        let freeMove = false;\n        let cancelOnlyOnMove = false;\n        if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.scrollToSelectedCell, event, details)) {\n            scrollToRef.current(col - rowMarkerOffset, row);\n        }\n        else if (columnSelect !== \"none\" && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectColumn, event, details)) {\n            if (selectedColumns.hasIndex(col)) {\n                setSelectedColumns(selectedColumns.remove(col), undefined, true);\n            }\n            else {\n                if (columnSelect === \"single\") {\n                    setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(col), undefined, true);\n                }\n                else {\n                    setSelectedColumns(undefined, col, true);\n                }\n            }\n        }\n        else if (rowSelect !== \"none\" && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectRow, event, details)) {\n            if (selectedRows.hasIndex(row)) {\n                setSelectedRows(selectedRows.remove(row), undefined, true);\n            }\n            else {\n                if (rowSelect === \"single\") {\n                    setSelectedRows(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(row), undefined, true);\n                }\n                else {\n                    setSelectedRows(undefined, row, true);\n                }\n            }\n        }\n        else if (!overlayOpen && bounds !== undefined && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.activateCell, event, details)) {\n            if (row === rows && showTrailingBlankRow) {\n                window.setTimeout(() => {\n                    const customTargetColumn = getCustomNewRowTargetColumn(col);\n                    void appendRow(customTargetColumn ?? col);\n                }, 0);\n            }\n            else {\n                onCellActivated?.([col - rowMarkerOffset, row]);\n                reselect(bounds, true);\n            }\n        }\n        else if (gridSelection.current.range.height > 1 && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.downFill, event, details)) {\n            fillDown();\n        }\n        else if (gridSelection.current.range.width > 1 && (0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.rightFill, event, details)) {\n            fillRight();\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToNextPage, event, details)) {\n            row += Math.max(1, visibleRegionRef.current.height - 4); // partial cell accounting\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToPreviousPage, event, details)) {\n            row -= Math.max(1, visibleRegionRef.current.height - 4); // partial cell accounting\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToFirstCell, event, details)) {\n            setOverlay(undefined);\n            row = 0;\n            col = 0;\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToLastCell, event, details)) {\n            setOverlay(undefined);\n            row = Number.MAX_SAFE_INTEGER;\n            col = Number.MAX_SAFE_INTEGER;\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToFirstCell, event, details)) {\n            setOverlay(undefined);\n            adjustSelection([-2, -2]);\n        }\n        else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToLastCell, event, details)) {\n            setOverlay(undefined);\n            adjustSelection([2, 2]);\n        }\n        else if (!overlayOpen) {\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goDownCell, event, details)) {\n                row += 1;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goUpCell, event, details)) {\n                row -= 1;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goRightCell, event, details)) {\n                col += 1;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goLeftCell, event, details)) {\n                col -= 1;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goDownCellRetainSelection, event, details)) {\n                row += 1;\n                freeMove = true;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goUpCellRetainSelection, event, details)) {\n                row -= 1;\n                freeMove = true;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goRightCellRetainSelection, event, details)) {\n                col += 1;\n                freeMove = true;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goLeftCellRetainSelection, event, details)) {\n                col -= 1;\n                freeMove = true;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToLastRow, event, details)) {\n                row = rows - 1;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToFirstRow, event, details)) {\n                row = Number.MIN_SAFE_INTEGER;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToLastColumn, event, details)) {\n                col = Number.MAX_SAFE_INTEGER;\n            }\n            else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.goToFirstColumn, event, details)) {\n                col = Number.MIN_SAFE_INTEGER;\n            }\n            else if (rangeSelect === \"rect\" || rangeSelect === \"multi-rect\") {\n                if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectGrowDown, event, details)) {\n                    adjustSelection([0, 1]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectGrowUp, event, details)) {\n                    adjustSelection([0, -1]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectGrowRight, event, details)) {\n                    adjustSelection([1, 0]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectGrowLeft, event, details)) {\n                    adjustSelection([-1, 0]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToLastRow, event, details)) {\n                    adjustSelection([0, 2]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToFirstRow, event, details)) {\n                    adjustSelection([0, -2]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToLastColumn, event, details)) {\n                    adjustSelection([2, 0]);\n                }\n                else if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.selectToFirstColumn, event, details)) {\n                    adjustSelection([-2, 0]);\n                }\n            }\n            cancelOnlyOnMove = details.didMatch;\n        }\n        else {\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.closeOverlay, event, details)) {\n                setOverlay(undefined);\n            }\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.acceptOverlayDown, event, details)) {\n                setOverlay(undefined);\n                row++;\n            }\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.acceptOverlayUp, event, details)) {\n                setOverlay(undefined);\n                row--;\n            }\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.acceptOverlayLeft, event, details)) {\n                setOverlay(undefined);\n                col--;\n            }\n            if ((0,_common_is_hotkey_js__WEBPACK_IMPORTED_MODULE_22__.isHotkey)(keys.acceptOverlayRight, event, details)) {\n                setOverlay(undefined);\n                col++;\n            }\n        }\n        // #endregion\n        const moved = updateSelectedCell(col, row, false, freeMove);\n        const didMatch = details.didMatch;\n        if (didMatch && (moved || !cancelOnlyOnMove || trapFocus)) {\n            cancel();\n        }\n        return didMatch;\n    }, [\n        overlayOpen,\n        gridSelection,\n        keybindings,\n        columnSelect,\n        rowSelect,\n        rangeSelect,\n        rowMarkerOffset,\n        rows,\n        updateSelectedCell,\n        setGridSelection,\n        onSelectionCleared,\n        columnsIn.length,\n        onDelete,\n        trapFocus,\n        deleteRange,\n        setSelectedColumns,\n        setSelectedRows,\n        showTrailingBlankRow,\n        getCustomNewRowTargetColumn,\n        appendRow,\n        onCellActivated,\n        reselect,\n        fillDown,\n        fillRight,\n        adjustSelection,\n    ]);\n    const onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        let cancelled = false;\n        if (onKeyDownIn !== undefined) {\n            onKeyDownIn({\n                ...event,\n                cancel: () => {\n                    cancelled = true;\n                },\n            });\n        }\n        if (cancelled)\n            return;\n        if (handleFixedKeybindings(event))\n            return;\n        if (gridSelection.current === undefined)\n            return;\n        const [col, row] = gridSelection.current.cell;\n        const vr = visibleRegionRef.current;\n        if (editOnType &&\n            !event.metaKey &&\n            !event.ctrlKey &&\n            gridSelection.current !== undefined &&\n            event.key.length === 1 &&\n            /[ -~]/g.test(event.key) &&\n            event.bounds !== undefined &&\n            (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isReadWriteCell)(getCellContent([col - rowMarkerOffset, Math.max(0, Math.min(row, rows - 1))]))) {\n            if ((!showTrailingBlankRow || row !== rows) &&\n                (vr.y > row || row > vr.y + vr.height || vr.x > col || col > vr.x + vr.width)) {\n                return;\n            }\n            reselect(event.bounds, true, event.key);\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }, [\n        editOnType,\n        onKeyDownIn,\n        handleFixedKeybindings,\n        gridSelection,\n        getCellContent,\n        rowMarkerOffset,\n        rows,\n        showTrailingBlankRow,\n        reselect,\n    ]);\n    const onContextMenu = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args, preventDefault) => {\n        const adjustedCol = args.location[0] - rowMarkerOffset;\n        if (args.kind === \"header\") {\n            onHeaderContextMenu?.(adjustedCol, { ...args, preventDefault });\n        }\n        if (args.kind === _internal_data_grid_event_args_js__WEBPACK_IMPORTED_MODULE_20__.groupHeaderKind) {\n            if (adjustedCol < 0) {\n                return;\n            }\n            onGroupHeaderContextMenu?.(adjustedCol, { ...args, preventDefault });\n        }\n        if (args.kind === \"cell\") {\n            const [col, row] = args.location;\n            onCellContextMenu?.([adjustedCol, row], {\n                ...args,\n                preventDefault,\n            });\n            if (!(0,_internal_data_grid_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_18__.gridSelectionHasItem)(gridSelection, args.location)) {\n                updateSelectedCell(col, row, false, false);\n            }\n        }\n    }, [\n        gridSelection,\n        onCellContextMenu,\n        onGroupHeaderContextMenu,\n        onHeaderContextMenu,\n        rowMarkerOffset,\n        updateSelectedCell,\n    ]);\n    const onPasteInternal = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (e) => {\n        if (!keybindings.paste)\n            return;\n        function pasteToCell(inner, target, rawValue, formatted) {\n            const stringifiedRawValue = typeof rawValue === \"object\" ? rawValue?.join(\"\\n\") ?? \"\" : rawValue?.toString() ?? \"\";\n            if (!(0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isInnerOnlyCell)(inner) && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isReadWriteCell)(inner) && inner.readonly !== true) {\n                const coerced = coercePasteValue?.(stringifiedRawValue, inner);\n                if (coerced !== undefined && (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.isEditableGridCell)(coerced)) {\n                    if ( true && coerced.kind !== inner.kind) {\n                        // eslint-disable-next-line no-console\n                        console.warn(\"Coercion should not change cell kind.\");\n                    }\n                    return {\n                        location: target,\n                        value: coerced,\n                    };\n                }\n                const r = getCellRenderer(inner);\n                if (r === undefined)\n                    return undefined;\n                if (r.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Custom) {\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.assert)(inner.kind === _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Custom);\n                    const newVal = r.onPaste?.(stringifiedRawValue, inner.data);\n                    if (newVal === undefined)\n                        return undefined;\n                    return {\n                        location: target,\n                        value: {\n                            ...inner,\n                            data: newVal,\n                        },\n                    };\n                }\n                else {\n                    const newVal = r.onPaste?.(stringifiedRawValue, inner, {\n                        formatted,\n                        formattedString: typeof formatted === \"string\" ? formatted : formatted?.join(\"\\n\"),\n                        rawValue,\n                    });\n                    if (newVal === undefined)\n                        return undefined;\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_17__.assert)(newVal.kind === inner.kind);\n                    return {\n                        location: target,\n                        value: newVal,\n                    };\n                }\n            }\n            return undefined;\n        }\n        const selectedColumns = gridSelection.columns;\n        const selectedRows = gridSelection.rows;\n        const focused = scrollRef.current?.contains(document.activeElement) === true ||\n            canvasRef.current?.contains(document.activeElement) === true;\n        let target;\n        if (gridSelection.current !== undefined) {\n            target = [gridSelection.current.range.x, gridSelection.current.range.y];\n        }\n        else if (selectedColumns.length === 1) {\n            target = [selectedColumns.first() ?? 0, 0];\n        }\n        else if (selectedRows.length === 1) {\n            target = [rowMarkerOffset, selectedRows.first() ?? 0];\n        }\n        if (focused && target !== undefined) {\n            let data;\n            let text;\n            const textPlain = \"text/plain\";\n            const textHtml = \"text/html\";\n            if (navigator.clipboard.read !== undefined) {\n                const clipboardContent = await navigator.clipboard.read();\n                for (const item of clipboardContent) {\n                    if (item.types.includes(textHtml)) {\n                        const htmlBlob = await item.getType(textHtml);\n                        const html = await htmlBlob.text();\n                        const decoded = (0,_copy_paste_js__WEBPACK_IMPORTED_MODULE_23__.decodeHTML)(html);\n                        if (decoded !== undefined) {\n                            data = decoded;\n                            break;\n                        }\n                    }\n                    if (item.types.includes(textPlain)) {\n                        // eslint-disable-next-line unicorn/no-await-expression-member\n                        text = await (await item.getType(textPlain)).text();\n                    }\n                }\n            }\n            else if (navigator.clipboard.readText !== undefined) {\n                text = await navigator.clipboard.readText();\n            }\n            else if (e !== undefined && e?.clipboardData !== null) {\n                if (e.clipboardData.types.includes(textHtml)) {\n                    const html = e.clipboardData.getData(textHtml);\n                    data = (0,_copy_paste_js__WEBPACK_IMPORTED_MODULE_23__.decodeHTML)(html);\n                }\n                if (data === undefined && e.clipboardData.types.includes(textPlain)) {\n                    text = e.clipboardData.getData(textPlain);\n                }\n            }\n            else {\n                return; // I didn't want to read that paste value anyway\n            }\n            const [targetCol, targetRow] = target;\n            const editList = [];\n            do {\n                if (onPaste === undefined) {\n                    const cellData = getMangledCellContent(target);\n                    const rawValue = text ?? data?.map(r => r.map(cb => cb.rawValue).join(\"\\t\")).join(\"\\t\") ?? \"\";\n                    const newVal = pasteToCell(cellData, target, rawValue, undefined);\n                    if (newVal !== undefined) {\n                        editList.push(newVal);\n                    }\n                    break;\n                }\n                if (data === undefined) {\n                    if (text === undefined)\n                        return;\n                    data = (0,_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__.unquote)(text);\n                }\n                if (onPaste === false ||\n                    (typeof onPaste === \"function\" &&\n                        onPaste?.([target[0] - rowMarkerOffset, target[1]], data.map(r => r.map(cb => cb.rawValue?.toString() ?? \"\"))) !== true)) {\n                    return;\n                }\n                for (const [row, dataRow] of data.entries()) {\n                    if (row + targetRow >= rows)\n                        break;\n                    for (const [col, dataItem] of dataRow.entries()) {\n                        const index = [col + targetCol, row + targetRow];\n                        const [writeCol, writeRow] = index;\n                        if (writeCol >= mangledCols.length)\n                            continue;\n                        if (writeRow >= mangledRows)\n                            continue;\n                        const cellData = getMangledCellContent(index);\n                        const newVal = pasteToCell(cellData, index, dataItem.rawValue, dataItem.formatted);\n                        if (newVal !== undefined) {\n                            editList.push(newVal);\n                        }\n                    }\n                }\n                // eslint-disable-next-line no-constant-condition\n            } while (false);\n            mangledOnCellsEdited(editList);\n            gridRef.current?.damage(editList.map(c => ({\n                cell: c.location,\n            })));\n        }\n    }, [\n        coercePasteValue,\n        getCellRenderer,\n        getMangledCellContent,\n        gridSelection,\n        keybindings.paste,\n        mangledCols.length,\n        mangledOnCellsEdited,\n        mangledRows,\n        onPaste,\n        rowMarkerOffset,\n        rows,\n    ]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.useEventListener)(\"paste\", onPasteInternal, safeWindow, false, true);\n    // While this function is async, we deeply prefer not to await if we don't have to. This will lead to unpacking\n    // promises in rather awkward ways when possible to avoid awaiting. We have to use fallback copy mechanisms when\n    // an await has happened.\n    const onCopy = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (e, ignoreFocus) => {\n        if (!keybindings.copy)\n            return;\n        const focused = ignoreFocus === true ||\n            scrollRef.current?.contains(document.activeElement) === true ||\n            canvasRef.current?.contains(document.activeElement) === true;\n        const selectedColumns = gridSelection.columns;\n        const selectedRows = gridSelection.rows;\n        const copyToClipboardWithHeaders = (cells, columnIndexes) => {\n            if (!copyHeaders) {\n                (0,_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__.copyToClipboard)(cells, columnIndexes, e);\n            }\n            else {\n                const headers = columnIndexes.map(index => ({\n                    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridCellKind.Text,\n                    data: columnsIn[index].title,\n                    displayData: columnsIn[index].title,\n                    allowOverlay: false,\n                }));\n                (0,_data_editor_fns_js__WEBPACK_IMPORTED_MODULE_10__.copyToClipboard)([headers, ...cells], columnIndexes, e);\n            }\n        };\n        if (focused && getCellsForSelection !== undefined) {\n            if (gridSelection.current !== undefined) {\n                let thunk = getCellsForSelection(gridSelection.current.range, abortControllerRef.current.signal);\n                if (typeof thunk !== \"object\") {\n                    thunk = await thunk();\n                }\n                copyToClipboardWithHeaders(thunk, lodash_range_js__WEBPACK_IMPORTED_MODULE_4__(gridSelection.current.range.x - rowMarkerOffset, gridSelection.current.range.x + gridSelection.current.range.width - rowMarkerOffset));\n            }\n            else if (selectedRows !== undefined && selectedRows.length > 0) {\n                const toCopy = [...selectedRows];\n                const cells = toCopy.map(rowIndex => {\n                    const thunk = getCellsForSelection({\n                        x: rowMarkerOffset,\n                        y: rowIndex,\n                        width: columnsIn.length,\n                        height: 1,\n                    }, abortControllerRef.current.signal);\n                    if (typeof thunk === \"object\") {\n                        return thunk[0];\n                    }\n                    return thunk().then(v => v[0]);\n                });\n                if (cells.some(x => x instanceof Promise)) {\n                    const settled = await Promise.all(cells);\n                    copyToClipboardWithHeaders(settled, lodash_range_js__WEBPACK_IMPORTED_MODULE_4__(columnsIn.length));\n                }\n                else {\n                    copyToClipboardWithHeaders(cells, lodash_range_js__WEBPACK_IMPORTED_MODULE_4__(columnsIn.length));\n                }\n            }\n            else if (selectedColumns.length > 0) {\n                const results = [];\n                const cols = [];\n                for (const col of selectedColumns) {\n                    let thunk = getCellsForSelection({\n                        x: col,\n                        y: 0,\n                        width: 1,\n                        height: rows,\n                    }, abortControllerRef.current.signal);\n                    if (typeof thunk !== \"object\") {\n                        thunk = await thunk();\n                    }\n                    results.push(thunk);\n                    cols.push(col - rowMarkerOffset);\n                }\n                if (results.length === 1) {\n                    copyToClipboardWithHeaders(results[0], cols);\n                }\n                else {\n                    // FIXME: this is dumb\n                    const toCopy = results.reduce((pv, cv) => pv.map((row, index) => [...row, ...cv[index]]));\n                    copyToClipboardWithHeaders(toCopy, cols);\n                }\n            }\n        }\n    }, [columnsIn, getCellsForSelection, gridSelection, keybindings.copy, rowMarkerOffset, rows, copyHeaders]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.useEventListener)(\"copy\", onCopy, safeWindow, false, false);\n    const onCut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (e) => {\n        if (!keybindings.cut)\n            return;\n        const focused = scrollRef.current?.contains(document.activeElement) === true ||\n            canvasRef.current?.contains(document.activeElement) === true;\n        if (!focused)\n            return;\n        await onCopy(e);\n        if (gridSelection.current !== undefined) {\n            let effectiveSelection = {\n                current: {\n                    cell: gridSelection.current.cell,\n                    range: gridSelection.current.range,\n                    rangeStack: [],\n                },\n                rows: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n                columns: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty(),\n            };\n            const onDeleteResult = onDelete?.(effectiveSelection);\n            if (onDeleteResult === false)\n                return;\n            effectiveSelection = onDeleteResult === true ? effectiveSelection : onDeleteResult;\n            if (effectiveSelection.current === undefined)\n                return;\n            deleteRange(effectiveSelection.current.range);\n        }\n    }, [deleteRange, gridSelection, keybindings.cut, onCopy, onDelete]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.useEventListener)(\"cut\", onCut, safeWindow, false, false);\n    const onSearchResultsChanged = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((results, navIndex) => {\n        if (onSearchResultsChangedIn !== undefined) {\n            if (rowMarkerOffset !== 0) {\n                results = results.map(item => [item[0] - rowMarkerOffset, item[1]]);\n            }\n            onSearchResultsChangedIn(results, navIndex);\n            return;\n        }\n        if (results.length === 0 || navIndex === -1)\n            return;\n        const [col, row] = results[navIndex];\n        if (lastSent.current !== undefined && lastSent.current[0] === col && lastSent.current[1] === row) {\n            return;\n        }\n        lastSent.current = [col, row];\n        updateSelectedCell(col, row, false, false);\n    }, [onSearchResultsChangedIn, rowMarkerOffset, updateSelectedCell]);\n    // this effects purpose in life is to scroll the newly selected cell into view when and ONLY when that cell\n    // is from an external gridSelection change. Also note we want the unmangled out selection because scrollTo\n    // expects unmangled indexes\n    const [outCol, outRow] = gridSelectionOuter?.current?.cell ?? [];\n    const scrollToRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollTo);\n    scrollToRef.current = scrollTo;\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (!hasJustScrolled.current &&\n            outCol !== undefined &&\n            outRow !== undefined &&\n            (outCol !== expectedExternalGridSelection.current?.current?.cell[0] ||\n                outRow !== expectedExternalGridSelection.current?.current?.cell[1])) {\n            scrollToRef.current(outCol, outRow);\n        }\n        hasJustScrolled.current = false; //only allow skipping a single scroll\n    }, [outCol, outRow]);\n    const selectionOutOfBounds = gridSelection.current !== undefined &&\n        (gridSelection.current.cell[0] >= mangledCols.length || gridSelection.current.cell[1] >= mangledRows);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (selectionOutOfBounds) {\n            setGridSelection(emptyGridSelection, false);\n        }\n    }, [selectionOutOfBounds, setGridSelection]);\n    const disabledRows = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (showTrailingBlankRow === true && trailingRowOptions?.tint === true) {\n            return _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(mangledRows - 1);\n        }\n        return _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.empty();\n    }, [mangledRows, showTrailingBlankRow, trailingRowOptions?.tint]);\n    const mangledVerticalBorder = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((col) => {\n        return typeof verticalBorder === \"boolean\"\n            ? verticalBorder\n            : verticalBorder?.(col - rowMarkerOffset) ?? true;\n    }, [rowMarkerOffset, verticalBorder]);\n    const renameGroupNode = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (renameGroup === undefined || canvasRef.current === null)\n            return null;\n        const { bounds, group } = renameGroup;\n        const canvasBounds = canvasRef.current.getBoundingClientRect();\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_group_rename_js__WEBPACK_IMPORTED_MODULE_24__.GroupRename, { bounds: bounds, group: group, canvasBounds: canvasBounds, onClose: () => setRenameGroup(undefined), onFinish: newVal => {\n                setRenameGroup(undefined);\n                onGroupHeaderRenamed?.(group, newVal);\n            } }));\n    }, [onGroupHeaderRenamed, renameGroup]);\n    const mangledFreezeColumns = Math.min(mangledCols.length, freezeColumns + (hasRowMarkers ? 1 : 0));\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(forwardedRef, () => ({\n        appendRow: (col, openOverlay) => appendRow(col + rowMarkerOffset, openOverlay),\n        updateCells: damageList => {\n            if (rowMarkerOffset !== 0) {\n                damageList = damageList.map(x => ({ cell: [x.cell[0] + rowMarkerOffset, x.cell[1]] }));\n            }\n            return gridRef.current?.damage(damageList);\n        },\n        getBounds: (col, row) => {\n            if (canvasRef?.current === null || scrollRef?.current === null) {\n                return undefined;\n            }\n            if (col === undefined && row === undefined) {\n                // Return the bounds of the entire scroll area:\n                const rect = canvasRef.current.getBoundingClientRect();\n                const scale = rect.width / scrollRef.current.clientWidth;\n                return {\n                    x: rect.x - scrollRef.current.scrollLeft * scale,\n                    y: rect.y - scrollRef.current.scrollTop * scale,\n                    width: scrollRef.current.scrollWidth * scale,\n                    height: scrollRef.current.scrollHeight * scale,\n                };\n            }\n            return gridRef.current?.getBounds((col ?? 0) + rowMarkerOffset, row);\n        },\n        focus: () => gridRef.current?.focus(),\n        emit: async (e) => {\n            switch (e) {\n                case \"delete\":\n                    onKeyDown({\n                        bounds: undefined,\n                        cancel: () => undefined,\n                        stopPropagation: () => undefined,\n                        preventDefault: () => undefined,\n                        ctrlKey: false,\n                        key: \"Delete\",\n                        keyCode: 46,\n                        metaKey: false,\n                        shiftKey: false,\n                        altKey: false,\n                        rawEvent: undefined,\n                        location: undefined,\n                    });\n                    break;\n                case \"fill-right\":\n                    onKeyDown({\n                        bounds: undefined,\n                        cancel: () => undefined,\n                        stopPropagation: () => undefined,\n                        preventDefault: () => undefined,\n                        ctrlKey: true,\n                        key: \"r\",\n                        keyCode: 82,\n                        metaKey: false,\n                        shiftKey: false,\n                        altKey: false,\n                        rawEvent: undefined,\n                        location: undefined,\n                    });\n                    break;\n                case \"fill-down\":\n                    onKeyDown({\n                        bounds: undefined,\n                        cancel: () => undefined,\n                        stopPropagation: () => undefined,\n                        preventDefault: () => undefined,\n                        ctrlKey: true,\n                        key: \"d\",\n                        keyCode: 68,\n                        metaKey: false,\n                        shiftKey: false,\n                        altKey: false,\n                        rawEvent: undefined,\n                        location: undefined,\n                    });\n                    break;\n                case \"copy\":\n                    await onCopy(undefined, true);\n                    break;\n                case \"paste\":\n                    await onPasteInternal();\n                    break;\n            }\n        },\n        scrollTo,\n        remeasureColumns: cols => {\n            for (const col of cols) {\n                void normalSizeColumn(col + rowMarkerOffset);\n            }\n        },\n    }), [appendRow, normalSizeColumn, onCopy, onKeyDown, onPasteInternal, rowMarkerOffset, scrollTo]);\n    const [selCol, selRow] = currentCell ?? [];\n    const onCellFocused = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((cell) => {\n        const [col, row] = cell;\n        if (row === -1) {\n            if (columnSelect !== \"none\") {\n                setSelectedColumns(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.CompactSelection.fromSingleSelection(col), undefined, false);\n                focus();\n            }\n            return;\n        }\n        if (selCol === col && selRow === row)\n            return;\n        setCurrent({\n            cell,\n            range: { x: col, y: row, width: 1, height: 1 },\n        }, true, false, \"keyboard-nav\");\n        scrollTo(col, row);\n    }, [columnSelect, focus, scrollTo, selCol, selRow, setCurrent, setSelectedColumns]);\n    const [isFocused, setIsFocused] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const setIsFocusedDebounced = react__WEBPACK_IMPORTED_MODULE_0__.useRef(lodash_debounce_js__WEBPACK_IMPORTED_MODULE_5__((val) => {\n        setIsFocused(val);\n    }, 5));\n    const onCanvasFocused = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        setIsFocusedDebounced.current(true);\n        // check for mouse state, don't do anything if the user is clicked to focus.\n        if (gridSelection.current === undefined &&\n            gridSelection.columns.length === 0 &&\n            gridSelection.rows.length === 0 &&\n            mouseState === undefined) {\n            setCurrent({\n                cell: [rowMarkerOffset, cellYOffset],\n                range: {\n                    x: rowMarkerOffset,\n                    y: cellYOffset,\n                    width: 1,\n                    height: 1,\n                },\n            }, true, false, \"keyboard-select\");\n        }\n    }, [cellYOffset, gridSelection, mouseState, rowMarkerOffset, setCurrent]);\n    const onFocusOut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        setIsFocusedDebounced.current(false);\n    }, []);\n    const [idealWidth, idealHeight] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        let h;\n        const scrollbarWidth = experimental?.scrollbarWidthOverride ?? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_11__.getScrollBarWidth)();\n        const rowsCountWithTrailingRow = rows + (showTrailingBlankRow ? 1 : 0);\n        if (typeof rowHeight === \"number\") {\n            h = totalHeaderHeight + rowsCountWithTrailingRow * rowHeight;\n        }\n        else {\n            let avg = 0;\n            const toAverage = Math.min(rowsCountWithTrailingRow, 10);\n            for (let i = 0; i < toAverage; i++) {\n                avg += rowHeight(i);\n            }\n            avg = Math.floor(avg / toAverage);\n            h = totalHeaderHeight + rowsCountWithTrailingRow * avg;\n        }\n        h += scrollbarWidth;\n        const w = mangledCols.reduce((acc, x) => x.width + acc, 0) + scrollbarWidth;\n        // We need to set a reasonable cap here as some browsers will just ignore huge values\n        // rather than treat them as huge values.\n        return [`${Math.min(100000, w)}px`, `${Math.min(100000, h)}px`];\n    }, [mangledCols, experimental?.scrollbarWidthOverride, rowHeight, rows, showTrailingBlankRow, totalHeaderHeight]);\n    const cssStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.makeCSSStyle)(mergedTheme);\n    }, [mergedTheme]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_styles_js__WEBPACK_IMPORTED_MODULE_13__.ThemeContext.Provider, { value: mergedTheme },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_editor_container_data_grid_container_js__WEBPACK_IMPORTED_MODULE_25__.DataEditorContainer, { style: cssStyle, className: className, inWidth: width ?? idealWidth, inHeight: height ?? idealHeight },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_data_grid_search_data_grid_search_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"], { fillHandle: fillHandle, drawFocusRing: drawFocusRing, experimental: experimental, fixedShadowX: fixedShadowX, fixedShadowY: fixedShadowY, getRowThemeOverride: getRowThemeOverride, headerIcons: headerIcons, imageWindowLoader: imageWindowLoader, initialSize: initialSize, isDraggable: isDraggable, onDragLeave: onDragLeave, onRowMoved: onRowMoved, overscrollX: overscrollX, overscrollY: overscrollY, preventDiagonalScrolling: preventDiagonalScrolling, rightElement: rightElement, rightElementProps: rightElementProps, smoothScrollX: smoothScrollX, smoothScrollY: smoothScrollY, className: className, enableGroups: enableGroups, onCanvasFocused: onCanvasFocused, onCanvasBlur: onFocusOut, canvasRef: canvasRef, onContextMenu: onContextMenu, theme: mergedTheme, cellXOffset: cellXOffset, cellYOffset: cellYOffset, accessibilityHeight: visibleRegion.height, onDragEnd: onDragEnd, columns: mangledCols, nonGrowWidth: nonGrowWidth, drawHeader: drawHeader, onColumnProposeMove: onColumnProposeMove, drawCell: drawCell, disabledRows: disabledRows, freezeColumns: mangledFreezeColumns, lockColumns: rowMarkerOffset, firstColAccessible: rowMarkerOffset === 0, getCellContent: getMangledCellContent, minColumnWidth: minColumnWidth, maxColumnWidth: maxColumnWidth, searchInputRef: searchInputRef, showSearch: showSearch, onSearchClose: onSearchClose, highlightRegions: highlightRegions, getCellsForSelection: getCellsForSelection, getGroupDetails: mangledGetGroupDetails, headerHeight: headerHeight, isFocused: isFocused, groupHeaderHeight: enableGroups ? groupHeaderHeight : 0, freezeTrailingRows: freezeTrailingRows + (showTrailingBlankRow && trailingRowOptions?.sticky === true ? 1 : 0), hasAppendRow: showTrailingBlankRow, onColumnResize: onColumnResize, onColumnResizeEnd: onColumnResizeEnd, onColumnResizeStart: onColumnResizeStart, onCellFocused: onCellFocused, onColumnMoved: onColumnMovedImpl, onDragStart: onDragStartImpl, onHeaderMenuClick: onHeaderMenuClickInner, onItemHovered: onItemHoveredImpl, isFilling: mouseState?.fillHandle === true, onMouseMove: onMouseMoveImpl, onKeyDown: onKeyDown, onKeyUp: onKeyUpIn, onMouseDown: onMouseDown, onMouseUp: onMouseUp, onDragOverCell: onDragOverCell, onDrop: onDrop, onSearchResultsChanged: onSearchResultsChanged, onVisibleRegionChanged: onVisibleRegionChangedImpl, clientSize: clientSize, rowHeight: rowHeight, searchResults: searchResults, searchValue: searchValue, onSearchValueChange: onSearchValueChange, rows: mangledRows, scrollRef: scrollRef, selection: gridSelection, translateX: visibleRegion.tx, translateY: visibleRegion.ty, verticalBorder: mangledVerticalBorder, gridRef: gridRef, getCellRenderer: getCellRenderer }),\n            renameGroupNode,\n            overlay !== undefined && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, { fallback: null },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataGridOverlayEditor, { ...overlay, validateCell: validateCell, bloom: editorBloom, id: overlayID, getCellRenderer: getCellRenderer, className: experimental?.isSubGrid === true ? \"click-outside-ignore\" : undefined, provideEditor: provideEditor, imageEditorOverride: imageEditorOverride, onFinishEditing: onFinishEditing, markdownDivCreateNode: markdownDivCreateNode, isOutsideClick: isOutsideClick }))))));\n};\n/**\n * The primary component of Glide Data Grid.\n * @category DataEditor\n * @param {DataEditorProps} props\n */\nconst DataEditor = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(DataEditorImpl);\n//# sourceMappingURL=data-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/data-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/group-rename.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/group-rename.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupRename: () => (/* binding */ GroupRename)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n/* harmony import */ var _internal_click_outside_container_click_outside_container_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/click-outside-container/click-outside-container.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/click-outside-container/click-outside-container.js\");\n\n\n\nconst _exp = /*#__PURE__*/() => p => Math.max(16, p.targetHeight - 10);\nconst RenameInput = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_1__.styled)('input')({\n  name: \"RenameInput\",\n  class: \"gdg-r17m35ur\",\n  propsAsIs: false,\n  vars: {\n    \"r17m35ur-0\": [_exp(), \"px\"]\n  }\n});\nconst GroupRename = p => {\n  const {\n    bounds,\n    group,\n    onClose,\n    canvasBounds,\n    onFinish\n  } = p;\n  const [value, setValue] = react__WEBPACK_IMPORTED_MODULE_0__.useState(group);\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_internal_click_outside_container_click_outside_container_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    style: {\n      position: \"absolute\",\n      left: bounds.x - canvasBounds.left + 1,\n      top: bounds.y - canvasBounds.top,\n      width: bounds.width - 2,\n      height: bounds.height\n    },\n    className: \"gdg-c1tqibwd\",\n    onClickOutside: onClose\n  }, react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenameInput, {\n    targetHeight: bounds.height,\n    \"data-testid\": \"group-rename-input\",\n    value: value,\n    onBlur: onClose,\n    onFocus: e => e.target.setSelectionRange(0, value.length),\n    onChange: e => setValue(e.target.value),\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        onFinish(value);\n      } else if (e.key === \"Escape\") {\n        onClose();\n      }\n    },\n    autoFocus: true\n  }));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvZ3JvdXAtcmVuYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEI7QUFDYztBQUMyRDtBQUNuRztBQUNBLGlDQUFpQyxzREFBTTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ007QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNEJBQTRCLDJDQUFjO0FBQzFDLFNBQVMsZ0RBQW1CLENBQUMsb0dBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRyxFQUFFLGdEQUFtQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2RhdGEtZWRpdG9yL2dyb3VwLXJlbmFtZS5qcz8yMjYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAbGluYXJpYS9yZWFjdFwiO1xuaW1wb3J0IENsaWNrT3V0c2lkZUNvbnRhaW5lciBmcm9tIFwiLi4vaW50ZXJuYWwvY2xpY2stb3V0c2lkZS1jb250YWluZXIvY2xpY2stb3V0c2lkZS1jb250YWluZXIuanNcIjtcbmNvbnN0IF9leHAgPSAvKiNfX1BVUkVfXyovKCkgPT4gcCA9PiBNYXRoLm1heCgxNiwgcC50YXJnZXRIZWlnaHQgLSAxMCk7XG5jb25zdCBSZW5hbWVJbnB1dCA9IC8qI19fUFVSRV9fKi9zdHlsZWQoJ2lucHV0Jykoe1xuICBuYW1lOiBcIlJlbmFtZUlucHV0XCIsXG4gIGNsYXNzOiBcImdkZy1yMTdtMzV1clwiLFxuICBwcm9wc0FzSXM6IGZhbHNlLFxuICB2YXJzOiB7XG4gICAgXCJyMTdtMzV1ci0wXCI6IFtfZXhwKCksIFwicHhcIl1cbiAgfVxufSk7XG5leHBvcnQgY29uc3QgR3JvdXBSZW5hbWUgPSBwID0+IHtcbiAgY29uc3Qge1xuICAgIGJvdW5kcyxcbiAgICBncm91cCxcbiAgICBvbkNsb3NlLFxuICAgIGNhbnZhc0JvdW5kcyxcbiAgICBvbkZpbmlzaFxuICB9ID0gcDtcbiAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSBSZWFjdC51c2VTdGF0ZShncm91cCk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENsaWNrT3V0c2lkZUNvbnRhaW5lciwge1xuICAgIHN0eWxlOiB7XG4gICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgbGVmdDogYm91bmRzLnggLSBjYW52YXNCb3VuZHMubGVmdCArIDEsXG4gICAgICB0b3A6IGJvdW5kcy55IC0gY2FudmFzQm91bmRzLnRvcCxcbiAgICAgIHdpZHRoOiBib3VuZHMud2lkdGggLSAyLFxuICAgICAgaGVpZ2h0OiBib3VuZHMuaGVpZ2h0XG4gICAgfSxcbiAgICBjbGFzc05hbWU6IFwiZ2RnLWMxdHFpYndkXCIsXG4gICAgb25DbGlja091dHNpZGU6IG9uQ2xvc2VcbiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChSZW5hbWVJbnB1dCwge1xuICAgIHRhcmdldEhlaWdodDogYm91bmRzLmhlaWdodCxcbiAgICBcImRhdGEtdGVzdGlkXCI6IFwiZ3JvdXAtcmVuYW1lLWlucHV0XCIsXG4gICAgdmFsdWU6IHZhbHVlLFxuICAgIG9uQmx1cjogb25DbG9zZSxcbiAgICBvbkZvY3VzOiBlID0+IGUudGFyZ2V0LnNldFNlbGVjdGlvblJhbmdlKDAsIHZhbHVlLmxlbmd0aCksXG4gICAgb25DaGFuZ2U6IGUgPT4gc2V0VmFsdWUoZS50YXJnZXQudmFsdWUpLFxuICAgIG9uS2V5RG93bjogZSA9PiB7XG4gICAgICBpZiAoZS5rZXkgPT09IFwiRW50ZXJcIikge1xuICAgICAgICBvbkZpbmlzaCh2YWx1ZSk7XG4gICAgICB9IGVsc2UgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgIG9uQ2xvc2UoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGF1dG9Gb2N1czogdHJ1ZVxuICB9KSk7XG59O1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/group-rename.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-autoscroll.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-autoscroll.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAutoscroll: () => (/* binding */ useAutoscroll)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nconst maxPxPerMs = 2;\nconst msToFullSpeed = 1300;\nfunction useAutoscroll(scrollDirection, scrollRef, onScroll) {\n    const speedScalar = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const [xDir, yDir] = scrollDirection ?? [0, 0];\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (xDir === 0 && yDir === 0) {\n            speedScalar.current = 0;\n            return;\n        }\n        let cancelled = false;\n        let lastTime = 0;\n        const scrollFn = (curTime) => {\n            if (cancelled)\n                return;\n            if (lastTime === 0) {\n                lastTime = curTime;\n            }\n            else {\n                const step = curTime - lastTime;\n                speedScalar.current = Math.min(1, speedScalar.current + step / msToFullSpeed);\n                const motion = speedScalar.current ** 1.618 * step * maxPxPerMs;\n                scrollRef.current?.scrollBy(xDir * motion, yDir * motion);\n                lastTime = curTime;\n                onScroll?.();\n            }\n            window.requestAnimationFrame(scrollFn);\n        };\n        window.requestAnimationFrame(scrollFn);\n        return () => {\n            cancelled = true;\n        };\n    }, [scrollRef, xDir, yDir, onScroll]);\n}\n//# sourceMappingURL=use-autoscroll.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvdXNlLWF1dG9zY3JvbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7QUFDMUI7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLHlDQUFZO0FBQ3BDO0FBQ0EsSUFBSSw0Q0FBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9kYXRhLWVkaXRvci91c2UtYXV0b3Njcm9sbC5qcz80Yjk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmNvbnN0IG1heFB4UGVyTXMgPSAyO1xuY29uc3QgbXNUb0Z1bGxTcGVlZCA9IDEzMDA7XG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0b3Njcm9sbChzY3JvbGxEaXJlY3Rpb24sIHNjcm9sbFJlZiwgb25TY3JvbGwpIHtcbiAgICBjb25zdCBzcGVlZFNjYWxhciA9IFJlYWN0LnVzZVJlZigwKTtcbiAgICBjb25zdCBbeERpciwgeURpcl0gPSBzY3JvbGxEaXJlY3Rpb24gPz8gWzAsIDBdO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh4RGlyID09PSAwICYmIHlEaXIgPT09IDApIHtcbiAgICAgICAgICAgIHNwZWVkU2NhbGFyLmN1cnJlbnQgPSAwO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjYW5jZWxsZWQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGxhc3RUaW1lID0gMDtcbiAgICAgICAgY29uc3Qgc2Nyb2xsRm4gPSAoY3VyVGltZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGNhbmNlbGxlZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBpZiAobGFzdFRpbWUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBsYXN0VGltZSA9IGN1clRpbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGVwID0gY3VyVGltZSAtIGxhc3RUaW1lO1xuICAgICAgICAgICAgICAgIHNwZWVkU2NhbGFyLmN1cnJlbnQgPSBNYXRoLm1pbigxLCBzcGVlZFNjYWxhci5jdXJyZW50ICsgc3RlcCAvIG1zVG9GdWxsU3BlZWQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vdGlvbiA9IHNwZWVkU2NhbGFyLmN1cnJlbnQgKiogMS42MTggKiBzdGVwICogbWF4UHhQZXJNcztcbiAgICAgICAgICAgICAgICBzY3JvbGxSZWYuY3VycmVudD8uc2Nyb2xsQnkoeERpciAqIG1vdGlvbiwgeURpciAqIG1vdGlvbik7XG4gICAgICAgICAgICAgICAgbGFzdFRpbWUgPSBjdXJUaW1lO1xuICAgICAgICAgICAgICAgIG9uU2Nyb2xsPy4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2Nyb2xsRm4pO1xuICAgICAgICB9O1xuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHNjcm9sbEZuKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgIH07XG4gICAgfSwgW3Njcm9sbFJlZiwgeERpciwgeURpciwgb25TY3JvbGxdKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZS1hdXRvc2Nyb2xsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-autoscroll.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-cells-for-selection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-cells-for-selection.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCellsForSelection: () => (/* binding */ useCellsForSelection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\nfunction useCellsForSelection(getCellsForSelectionIn, getCellContent, rowMarkerOffset, abortController, rows) {\n    const getCellsForSelectionDirectWhenValid = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(rect => {\n        if (getCellsForSelectionIn === true) {\n            const result = [];\n            for (let y = rect.y; y < rect.y + rect.height; y++) {\n                const row = [];\n                for (let x = rect.x; x < rect.x + rect.width; x++) {\n                    if (x < 0 || y >= rows) {\n                        row.push({\n                            kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Loading,\n                            allowOverlay: false,\n                        });\n                    }\n                    else {\n                        row.push(getCellContent([x, y]));\n                    }\n                }\n                result.push(row);\n            }\n            return result;\n        }\n        return getCellsForSelectionIn?.(rect, abortController.signal) ?? [];\n    }, [abortController.signal, getCellContent, getCellsForSelectionIn, rows]);\n    const getCellsForSelectionDirect = getCellsForSelectionIn !== undefined ? getCellsForSelectionDirectWhenValid : undefined;\n    const getCellsForSelectionMangled = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(rect => {\n        if (getCellsForSelectionDirect === undefined)\n            return [];\n        const newRect = {\n            ...rect,\n            x: rect.x - rowMarkerOffset,\n        };\n        if (newRect.x < 0) {\n            newRect.x = 0;\n            newRect.width--;\n            const r = getCellsForSelectionDirect(newRect, abortController.signal);\n            if (typeof r === \"function\") {\n                return async () => \n                // eslint-disable-next-line unicorn/no-await-expression-member\n                (await r()).map(row => [\n                    { kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Loading, allowOverlay: false },\n                    ...row,\n                ]);\n            }\n            return r.map(row => [{ kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Loading, allowOverlay: false }, ...row]);\n        }\n        return getCellsForSelectionDirect(newRect, abortController.signal);\n    }, [abortController.signal, getCellsForSelectionDirect, rowMarkerOffset]);\n    const getCellsForSelection = getCellsForSelectionIn !== undefined ? getCellsForSelectionMangled : undefined;\n    return [getCellsForSelection, getCellsForSelectionDirect];\n}\n//# sourceMappingURL=use-cells-for-selection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvdXNlLWNlbGxzLWZvci1zZWxlY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQ3lDO0FBQ2pFO0FBQ1AsZ0RBQWdELDhDQUFpQjtBQUNqRTtBQUNBO0FBQ0EsaUNBQWlDLDBCQUEwQjtBQUMzRDtBQUNBLHFDQUFxQyx5QkFBeUI7QUFDOUQ7QUFDQTtBQUNBLGtDQUFrQyxnRkFBWTtBQUM5QztBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdDQUF3Qyw4Q0FBaUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNLGdGQUFZLCtCQUErQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTSxnRkFBWSwrQkFBK0I7QUFDcEY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2RhdGEtZWRpdG9yL3VzZS1jZWxscy1mb3Itc2VsZWN0aW9uLmpzP2Q2MmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHcmlkQ2VsbEtpbmQgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGF0YS1ncmlkL2RhdGEtZ3JpZC10eXBlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNlbGxzRm9yU2VsZWN0aW9uKGdldENlbGxzRm9yU2VsZWN0aW9uSW4sIGdldENlbGxDb250ZW50LCByb3dNYXJrZXJPZmZzZXQsIGFib3J0Q29udHJvbGxlciwgcm93cykge1xuICAgIGNvbnN0IGdldENlbGxzRm9yU2VsZWN0aW9uRGlyZWN0V2hlblZhbGlkID0gUmVhY3QudXNlQ2FsbGJhY2socmVjdCA9PiB7XG4gICAgICAgIGlmIChnZXRDZWxsc0ZvclNlbGVjdGlvbkluID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IHkgPSByZWN0Lnk7IHkgPCByZWN0LnkgKyByZWN0LmhlaWdodDsgeSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgcm93ID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgeCA9IHJlY3QueDsgeCA8IHJlY3QueCArIHJlY3Qud2lkdGg7IHgrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoeCA8IDAgfHwgeSA+PSByb3dzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogR3JpZENlbGxLaW5kLkxvYWRpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3dPdmVybGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93LnB1c2goZ2V0Q2VsbENvbnRlbnQoW3gsIHldKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocm93KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldENlbGxzRm9yU2VsZWN0aW9uSW4/LihyZWN0LCBhYm9ydENvbnRyb2xsZXIuc2lnbmFsKSA/PyBbXTtcbiAgICB9LCBbYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgZ2V0Q2VsbENvbnRlbnQsIGdldENlbGxzRm9yU2VsZWN0aW9uSW4sIHJvd3NdKTtcbiAgICBjb25zdCBnZXRDZWxsc0ZvclNlbGVjdGlvbkRpcmVjdCA9IGdldENlbGxzRm9yU2VsZWN0aW9uSW4gIT09IHVuZGVmaW5lZCA/IGdldENlbGxzRm9yU2VsZWN0aW9uRGlyZWN0V2hlblZhbGlkIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IGdldENlbGxzRm9yU2VsZWN0aW9uTWFuZ2xlZCA9IFJlYWN0LnVzZUNhbGxiYWNrKHJlY3QgPT4ge1xuICAgICAgICBpZiAoZ2V0Q2VsbHNGb3JTZWxlY3Rpb25EaXJlY3QgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgY29uc3QgbmV3UmVjdCA9IHtcbiAgICAgICAgICAgIC4uLnJlY3QsXG4gICAgICAgICAgICB4OiByZWN0LnggLSByb3dNYXJrZXJPZmZzZXQsXG4gICAgICAgIH07XG4gICAgICAgIGlmIChuZXdSZWN0LnggPCAwKSB7XG4gICAgICAgICAgICBuZXdSZWN0LnggPSAwO1xuICAgICAgICAgICAgbmV3UmVjdC53aWR0aC0tO1xuICAgICAgICAgICAgY29uc3QgciA9IGdldENlbGxzRm9yU2VsZWN0aW9uRGlyZWN0KG5ld1JlY3QsIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiByID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXN5bmMgKCkgPT4gXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tYXdhaXQtZXhwcmVzc2lvbi1tZW1iZXJcbiAgICAgICAgICAgICAgICAoYXdhaXQgcigpKS5tYXAocm93ID0+IFtcbiAgICAgICAgICAgICAgICAgICAgeyBraW5kOiBHcmlkQ2VsbEtpbmQuTG9hZGluZywgYWxsb3dPdmVybGF5OiBmYWxzZSB9LFxuICAgICAgICAgICAgICAgICAgICAuLi5yb3csXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gci5tYXAocm93ID0+IFt7IGtpbmQ6IEdyaWRDZWxsS2luZC5Mb2FkaW5nLCBhbGxvd092ZXJsYXk6IGZhbHNlIH0sIC4uLnJvd10pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRDZWxsc0ZvclNlbGVjdGlvbkRpcmVjdChuZXdSZWN0LCBhYm9ydENvbnRyb2xsZXIuc2lnbmFsKTtcbiAgICB9LCBbYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgZ2V0Q2VsbHNGb3JTZWxlY3Rpb25EaXJlY3QsIHJvd01hcmtlck9mZnNldF0pO1xuICAgIGNvbnN0IGdldENlbGxzRm9yU2VsZWN0aW9uID0gZ2V0Q2VsbHNGb3JTZWxlY3Rpb25JbiAhPT0gdW5kZWZpbmVkID8gZ2V0Q2VsbHNGb3JTZWxlY3Rpb25NYW5nbGVkIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiBbZ2V0Q2VsbHNGb3JTZWxlY3Rpb24sIGdldENlbGxzRm9yU2VsZWN0aW9uRGlyZWN0XTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZS1jZWxscy1mb3Itc2VsZWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-cells-for-selection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-column-sizer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-column-sizer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   measureColumn: () => (/* binding */ measureColumn),\n/* harmony export */   useColumnSizer: () => (/* binding */ useColumnSizer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\nconst defaultSize = 150;\nfunction measureCell(ctx, cell, theme, getCellRenderer) {\n    const r = getCellRenderer(cell);\n    return r?.measure?.(ctx, cell, theme) ?? defaultSize;\n}\nfunction measureColumn(ctx, theme, c, colIndex, selectedData, minColumnWidth, maxColumnWidth, removeOutliers, getCellRenderer) {\n    let max = 0;\n    const sizes = selectedData === undefined\n        ? []\n        : selectedData.map(row => {\n            const r = measureCell(ctx, row[colIndex], theme, getCellRenderer);\n            max = Math.max(max, r);\n            return r;\n        });\n    if (sizes.length > 5 && removeOutliers) {\n        max = 0;\n        // Filter out outliers\n        let sum = 0;\n        for (const size of sizes) {\n            sum += size;\n        }\n        const average = sum / sizes.length;\n        // Set sizes that are considered outliers to zero\n        for (let i = 0; i < sizes.length; i++) {\n            if (sizes[i] >= average * 2) {\n                sizes[i] = 0;\n            }\n            else {\n                max = Math.max(max, sizes[i]);\n            }\n        }\n    }\n    max = Math.max(max, ctx.measureText(c.title).width + 16 + (c.icon === undefined ? 0 : 28));\n    const final = Math.max(Math.ceil(minColumnWidth), Math.min(Math.floor(maxColumnWidth), Math.ceil(max)));\n    return {\n        ...c,\n        width: final,\n    };\n}\n/** @category Hooks */\nfunction useColumnSizer(columns, rows, getCellsForSelection, clientWidth, minColumnWidth, maxColumnWidth, theme, getCellRenderer, abortController) {\n    const rowsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(rows);\n    const getCellsForSelectionRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(getCellsForSelection);\n    const themeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(theme);\n    rowsRef.current = rows;\n    getCellsForSelectionRef.current = getCellsForSelection;\n    themeRef.current = theme;\n    const [canvas, ctx] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (typeof window === \"undefined\")\n            return [null, null];\n        const offscreen = document.createElement(\"canvas\");\n        offscreen.style[\"display\"] = \"none\";\n        offscreen.style[\"opacity\"] = \"0\";\n        offscreen.style[\"position\"] = \"fixed\";\n        return [offscreen, offscreen.getContext(\"2d\", { alpha: false })];\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (canvas)\n            document.documentElement.append(canvas);\n        return () => {\n            canvas?.remove();\n        };\n    }, [canvas]);\n    const memoMap = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    const lastColumns = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [selectedData, setSelectionData] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        const getCells = getCellsForSelectionRef.current;\n        if (getCells === undefined || columns.every(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.isSizedGridColumn))\n            return;\n        let computeRows = Math.max(1, 10 - Math.floor(columns.length / 10000));\n        let tailRows = 0;\n        if (computeRows < rowsRef.current && computeRows > 1) {\n            computeRows--;\n            tailRows = 1;\n        }\n        const computeArea = {\n            x: 0,\n            y: 0,\n            width: columns.length,\n            height: Math.min(rowsRef.current, computeRows),\n        };\n        const tailComputeArea = {\n            x: 0,\n            y: rowsRef.current - 1,\n            width: columns.length,\n            height: 1,\n        };\n        const fn = async () => {\n            const getResult = getCells(computeArea, abortController.signal);\n            const tailGetResult = tailRows > 0 ? getCells(tailComputeArea, abortController.signal) : undefined;\n            let toSet;\n            // eslint-disable-next-line unicorn/prefer-ternary\n            if (typeof getResult === \"object\") {\n                toSet = getResult;\n            }\n            else {\n                toSet = await (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.resolveCellsThunk)(getResult);\n            }\n            if (tailGetResult !== undefined) {\n                // eslint-disable-next-line unicorn/prefer-ternary\n                if (typeof tailGetResult === \"object\") {\n                    toSet = [...toSet, ...tailGetResult];\n                }\n                else {\n                    toSet = [...toSet, ...(await (0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.resolveCellsThunk)(tailGetResult))];\n                }\n            }\n            lastColumns.current = columns;\n            setSelectionData(toSet);\n        };\n        void fn();\n    }, [abortController.signal, columns]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        const getRaw = () => {\n            if (columns.every(_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.isSizedGridColumn)) {\n                return columns;\n            }\n            if (ctx === null) {\n                return columns.map(c => {\n                    if ((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.isSizedGridColumn)(c))\n                        return c;\n                    return {\n                        ...c,\n                        width: defaultSize,\n                    };\n                });\n            }\n            ctx.font = themeRef.current.baseFontFull;\n            return columns.map((c, colIndex) => {\n                if ((0,_internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.isSizedGridColumn)(c))\n                    return c;\n                if (memoMap.current[c.id] !== undefined) {\n                    return {\n                        ...c,\n                        width: memoMap.current[c.id],\n                    };\n                }\n                if (selectedData === undefined || lastColumns.current !== columns || c.id === undefined) {\n                    return {\n                        ...c,\n                        width: defaultSize,\n                    };\n                }\n                const r = measureColumn(ctx, theme, c, colIndex, selectedData, minColumnWidth, maxColumnWidth, true, getCellRenderer);\n                memoMap.current[c.id] = r.width;\n                return r;\n            });\n        };\n        let result = getRaw();\n        let totalWidth = 0;\n        let totalGrow = 0;\n        const distribute = [];\n        for (const [i, c] of result.entries()) {\n            totalWidth += c.width;\n            if (c.grow !== undefined && c.grow > 0) {\n                totalGrow += c.grow;\n                distribute.push(i);\n            }\n        }\n        if (totalWidth < clientWidth && distribute.length > 0) {\n            const writeable = [...result];\n            const extra = clientWidth - totalWidth;\n            let remaining = extra;\n            for (let di = 0; di < distribute.length; di++) {\n                const i = distribute[di];\n                const weighted = (result[i].grow ?? 0) / totalGrow;\n                const toAdd = di === distribute.length - 1 ? remaining : Math.min(remaining, Math.floor(extra * weighted));\n                writeable[i] = {\n                    ...result[i],\n                    growOffset: toAdd,\n                    width: result[i].width + toAdd,\n                };\n                remaining -= toAdd;\n            }\n            result = writeable;\n        }\n        return {\n            sizedColumns: result,\n            nonGrowWidth: totalWidth,\n        };\n    }, [clientWidth, columns, ctx, selectedData, theme, minColumnWidth, maxColumnWidth, getCellRenderer]);\n}\n//# sourceMappingURL=use-column-sizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvdXNlLWNvbHVtbi1zaXplci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ2tFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQix5Q0FBWTtBQUNoQyxvQ0FBb0MseUNBQVk7QUFDaEQscUJBQXFCLHlDQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwQ0FBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsY0FBYztBQUN0RSxLQUFLO0FBQ0wsSUFBSSxrREFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0IseUNBQVksR0FBRztBQUNuQyx3QkFBd0IseUNBQVk7QUFDcEMsNkNBQTZDLDJDQUFjO0FBQzNELElBQUksa0RBQXFCO0FBQ3pCO0FBQ0Esb0RBQW9ELHFGQUFpQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5RkFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQseUZBQWlCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLDBDQUFhO0FBQ3hCO0FBQ0EsOEJBQThCLHFGQUFpQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5RkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUZBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHdCQUF3QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvdXNlLWNvbHVtbi1zaXplci5qcz82YTRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgaXNTaXplZEdyaWRDb2x1bW4sIHJlc29sdmVDZWxsc1RodW5rLCB9IGZyb20gXCIuLi9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5jb25zdCBkZWZhdWx0U2l6ZSA9IDE1MDtcbmZ1bmN0aW9uIG1lYXN1cmVDZWxsKGN0eCwgY2VsbCwgdGhlbWUsIGdldENlbGxSZW5kZXJlcikge1xuICAgIGNvbnN0IHIgPSBnZXRDZWxsUmVuZGVyZXIoY2VsbCk7XG4gICAgcmV0dXJuIHI/Lm1lYXN1cmU/LihjdHgsIGNlbGwsIHRoZW1lKSA/PyBkZWZhdWx0U2l6ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZWFzdXJlQ29sdW1uKGN0eCwgdGhlbWUsIGMsIGNvbEluZGV4LCBzZWxlY3RlZERhdGEsIG1pbkNvbHVtbldpZHRoLCBtYXhDb2x1bW5XaWR0aCwgcmVtb3ZlT3V0bGllcnMsIGdldENlbGxSZW5kZXJlcikge1xuICAgIGxldCBtYXggPSAwO1xuICAgIGNvbnN0IHNpemVzID0gc2VsZWN0ZWREYXRhID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBbXVxuICAgICAgICA6IHNlbGVjdGVkRGF0YS5tYXAocm93ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHIgPSBtZWFzdXJlQ2VsbChjdHgsIHJvd1tjb2xJbmRleF0sIHRoZW1lLCBnZXRDZWxsUmVuZGVyZXIpO1xuICAgICAgICAgICAgbWF4ID0gTWF0aC5tYXgobWF4LCByKTtcbiAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICB9KTtcbiAgICBpZiAoc2l6ZXMubGVuZ3RoID4gNSAmJiByZW1vdmVPdXRsaWVycykge1xuICAgICAgICBtYXggPSAwO1xuICAgICAgICAvLyBGaWx0ZXIgb3V0IG91dGxpZXJzXG4gICAgICAgIGxldCBzdW0gPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHNpemUgb2Ygc2l6ZXMpIHtcbiAgICAgICAgICAgIHN1bSArPSBzaXplO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF2ZXJhZ2UgPSBzdW0gLyBzaXplcy5sZW5ndGg7XG4gICAgICAgIC8vIFNldCBzaXplcyB0aGF0IGFyZSBjb25zaWRlcmVkIG91dGxpZXJzIHRvIHplcm9cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHNpemVzW2ldID49IGF2ZXJhZ2UgKiAyKSB7XG4gICAgICAgICAgICAgICAgc2l6ZXNbaV0gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbWF4ID0gTWF0aC5tYXgobWF4LCBzaXplc1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbWF4ID0gTWF0aC5tYXgobWF4LCBjdHgubWVhc3VyZVRleHQoYy50aXRsZSkud2lkdGggKyAxNiArIChjLmljb24gPT09IHVuZGVmaW5lZCA/IDAgOiAyOCkpO1xuICAgIGNvbnN0IGZpbmFsID0gTWF0aC5tYXgoTWF0aC5jZWlsKG1pbkNvbHVtbldpZHRoKSwgTWF0aC5taW4oTWF0aC5mbG9vcihtYXhDb2x1bW5XaWR0aCksIE1hdGguY2VpbChtYXgpKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uYyxcbiAgICAgICAgd2lkdGg6IGZpbmFsLFxuICAgIH07XG59XG4vKiogQGNhdGVnb3J5IEhvb2tzICovXG5leHBvcnQgZnVuY3Rpb24gdXNlQ29sdW1uU2l6ZXIoY29sdW1ucywgcm93cywgZ2V0Q2VsbHNGb3JTZWxlY3Rpb24sIGNsaWVudFdpZHRoLCBtaW5Db2x1bW5XaWR0aCwgbWF4Q29sdW1uV2lkdGgsIHRoZW1lLCBnZXRDZWxsUmVuZGVyZXIsIGFib3J0Q29udHJvbGxlcikge1xuICAgIGNvbnN0IHJvd3NSZWYgPSBSZWFjdC51c2VSZWYocm93cyk7XG4gICAgY29uc3QgZ2V0Q2VsbHNGb3JTZWxlY3Rpb25SZWYgPSBSZWFjdC51c2VSZWYoZ2V0Q2VsbHNGb3JTZWxlY3Rpb24pO1xuICAgIGNvbnN0IHRoZW1lUmVmID0gUmVhY3QudXNlUmVmKHRoZW1lKTtcbiAgICByb3dzUmVmLmN1cnJlbnQgPSByb3dzO1xuICAgIGdldENlbGxzRm9yU2VsZWN0aW9uUmVmLmN1cnJlbnQgPSBnZXRDZWxsc0ZvclNlbGVjdGlvbjtcbiAgICB0aGVtZVJlZi5jdXJyZW50ID0gdGhlbWU7XG4gICAgY29uc3QgW2NhbnZhcywgY3R4XSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgICAgIHJldHVybiBbbnVsbCwgbnVsbF07XG4gICAgICAgIGNvbnN0IG9mZnNjcmVlbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgIG9mZnNjcmVlbi5zdHlsZVtcImRpc3BsYXlcIl0gPSBcIm5vbmVcIjtcbiAgICAgICAgb2Zmc2NyZWVuLnN0eWxlW1wib3BhY2l0eVwiXSA9IFwiMFwiO1xuICAgICAgICBvZmZzY3JlZW4uc3R5bGVbXCJwb3NpdGlvblwiXSA9IFwiZml4ZWRcIjtcbiAgICAgICAgcmV0dXJuIFtvZmZzY3JlZW4sIG9mZnNjcmVlbi5nZXRDb250ZXh0KFwiMmRcIiwgeyBhbHBoYTogZmFsc2UgfSldO1xuICAgIH0sIFtdKTtcbiAgICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoY2FudmFzKVxuICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZChjYW52YXMpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgY2FudmFzPy5yZW1vdmUoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbY2FudmFzXSk7XG4gICAgY29uc3QgbWVtb01hcCA9IFJlYWN0LnVzZVJlZih7fSk7XG4gICAgY29uc3QgbGFzdENvbHVtbnMgPSBSZWFjdC51c2VSZWYoKTtcbiAgICBjb25zdCBbc2VsZWN0ZWREYXRhLCBzZXRTZWxlY3Rpb25EYXRhXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgZ2V0Q2VsbHMgPSBnZXRDZWxsc0ZvclNlbGVjdGlvblJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoZ2V0Q2VsbHMgPT09IHVuZGVmaW5lZCB8fCBjb2x1bW5zLmV2ZXJ5KGlzU2l6ZWRHcmlkQ29sdW1uKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGNvbXB1dGVSb3dzID0gTWF0aC5tYXgoMSwgMTAgLSBNYXRoLmZsb29yKGNvbHVtbnMubGVuZ3RoIC8gMTAwMDApKTtcbiAgICAgICAgbGV0IHRhaWxSb3dzID0gMDtcbiAgICAgICAgaWYgKGNvbXB1dGVSb3dzIDwgcm93c1JlZi5jdXJyZW50ICYmIGNvbXB1dGVSb3dzID4gMSkge1xuICAgICAgICAgICAgY29tcHV0ZVJvd3MtLTtcbiAgICAgICAgICAgIHRhaWxSb3dzID0gMTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb21wdXRlQXJlYSA9IHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgd2lkdGg6IGNvbHVtbnMubGVuZ3RoLFxuICAgICAgICAgICAgaGVpZ2h0OiBNYXRoLm1pbihyb3dzUmVmLmN1cnJlbnQsIGNvbXB1dGVSb3dzKSxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgdGFpbENvbXB1dGVBcmVhID0ge1xuICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgIHk6IHJvd3NSZWYuY3VycmVudCAtIDEsXG4gICAgICAgICAgICB3aWR0aDogY29sdW1ucy5sZW5ndGgsXG4gICAgICAgICAgICBoZWlnaHQ6IDEsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGZuID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZ2V0UmVzdWx0ID0gZ2V0Q2VsbHMoY29tcHV0ZUFyZWEsIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgICAgICAgICAgY29uc3QgdGFpbEdldFJlc3VsdCA9IHRhaWxSb3dzID4gMCA/IGdldENlbGxzKHRhaWxDb21wdXRlQXJlYSwgYWJvcnRDb250cm9sbGVyLnNpZ25hbCkgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICBsZXQgdG9TZXQ7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9wcmVmZXItdGVybmFyeVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBnZXRSZXN1bHQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICB0b1NldCA9IGdldFJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRvU2V0ID0gYXdhaXQgcmVzb2x2ZUNlbGxzVGh1bmsoZ2V0UmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0YWlsR2V0UmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9wcmVmZXItdGVybmFyeVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFpbEdldFJlc3VsdCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgICB0b1NldCA9IFsuLi50b1NldCwgLi4udGFpbEdldFJlc3VsdF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0b1NldCA9IFsuLi50b1NldCwgLi4uKGF3YWl0IHJlc29sdmVDZWxsc1RodW5rKHRhaWxHZXRSZXN1bHQpKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdENvbHVtbnMuY3VycmVudCA9IGNvbHVtbnM7XG4gICAgICAgICAgICBzZXRTZWxlY3Rpb25EYXRhKHRvU2V0KTtcbiAgICAgICAgfTtcbiAgICAgICAgdm9pZCBmbigpO1xuICAgIH0sIFthYm9ydENvbnRyb2xsZXIuc2lnbmFsLCBjb2x1bW5zXSk7XG4gICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBjb25zdCBnZXRSYXcgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoY29sdW1ucy5ldmVyeShpc1NpemVkR3JpZENvbHVtbikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjdHggPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1ucy5tYXAoYyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1NpemVkR3JpZENvbHVtbihjKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uYyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBkZWZhdWx0U2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5mb250ID0gdGhlbWVSZWYuY3VycmVudC5iYXNlRm9udEZ1bGw7XG4gICAgICAgICAgICByZXR1cm4gY29sdW1ucy5tYXAoKGMsIGNvbEluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU2l6ZWRHcmlkQ29sdW1uKGMpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYztcbiAgICAgICAgICAgICAgICBpZiAobWVtb01hcC5jdXJyZW50W2MuaWRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmMsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogbWVtb01hcC5jdXJyZW50W2MuaWRdLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWREYXRhID09PSB1bmRlZmluZWQgfHwgbGFzdENvbHVtbnMuY3VycmVudCAhPT0gY29sdW1ucyB8fCBjLmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmMsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogZGVmYXVsdFNpemUsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHIgPSBtZWFzdXJlQ29sdW1uKGN0eCwgdGhlbWUsIGMsIGNvbEluZGV4LCBzZWxlY3RlZERhdGEsIG1pbkNvbHVtbldpZHRoLCBtYXhDb2x1bW5XaWR0aCwgdHJ1ZSwgZ2V0Q2VsbFJlbmRlcmVyKTtcbiAgICAgICAgICAgICAgICBtZW1vTWFwLmN1cnJlbnRbYy5pZF0gPSByLndpZHRoO1xuICAgICAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGxldCByZXN1bHQgPSBnZXRSYXcoKTtcbiAgICAgICAgbGV0IHRvdGFsV2lkdGggPSAwO1xuICAgICAgICBsZXQgdG90YWxHcm93ID0gMDtcbiAgICAgICAgY29uc3QgZGlzdHJpYnV0ZSA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IFtpLCBjXSBvZiByZXN1bHQuZW50cmllcygpKSB7XG4gICAgICAgICAgICB0b3RhbFdpZHRoICs9IGMud2lkdGg7XG4gICAgICAgICAgICBpZiAoYy5ncm93ICE9PSB1bmRlZmluZWQgJiYgYy5ncm93ID4gMCkge1xuICAgICAgICAgICAgICAgIHRvdGFsR3JvdyArPSBjLmdyb3c7XG4gICAgICAgICAgICAgICAgZGlzdHJpYnV0ZS5wdXNoKGkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0b3RhbFdpZHRoIDwgY2xpZW50V2lkdGggJiYgZGlzdHJpYnV0ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCB3cml0ZWFibGUgPSBbLi4ucmVzdWx0XTtcbiAgICAgICAgICAgIGNvbnN0IGV4dHJhID0gY2xpZW50V2lkdGggLSB0b3RhbFdpZHRoO1xuICAgICAgICAgICAgbGV0IHJlbWFpbmluZyA9IGV4dHJhO1xuICAgICAgICAgICAgZm9yIChsZXQgZGkgPSAwOyBkaSA8IGRpc3RyaWJ1dGUubGVuZ3RoOyBkaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaSA9IGRpc3RyaWJ1dGVbZGldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHdlaWdodGVkID0gKHJlc3VsdFtpXS5ncm93ID8/IDApIC8gdG90YWxHcm93O1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvQWRkID0gZGkgPT09IGRpc3RyaWJ1dGUubGVuZ3RoIC0gMSA/IHJlbWFpbmluZyA6IE1hdGgubWluKHJlbWFpbmluZywgTWF0aC5mbG9vcihleHRyYSAqIHdlaWdodGVkKSk7XG4gICAgICAgICAgICAgICAgd3JpdGVhYmxlW2ldID0ge1xuICAgICAgICAgICAgICAgICAgICAuLi5yZXN1bHRbaV0sXG4gICAgICAgICAgICAgICAgICAgIGdyb3dPZmZzZXQ6IHRvQWRkLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogcmVzdWx0W2ldLndpZHRoICsgdG9BZGQsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICByZW1haW5pbmcgLT0gdG9BZGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgPSB3cml0ZWFibGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNpemVkQ29sdW1uczogcmVzdWx0LFxuICAgICAgICAgICAgbm9uR3Jvd1dpZHRoOiB0b3RhbFdpZHRoLFxuICAgICAgICB9O1xuICAgIH0sIFtjbGllbnRXaWR0aCwgY29sdW1ucywgY3R4LCBzZWxlY3RlZERhdGEsIHRoZW1lLCBtaW5Db2x1bW5XaWR0aCwgbWF4Q29sdW1uV2lkdGgsIGdldENlbGxSZW5kZXJlcl0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlLWNvbHVtbi1zaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-column-sizer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-rem-adjuster.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-rem-adjuster.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useRemAdjuster: () => (/* binding */ useRemAdjuster)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n\n\nfunction useRemAdjuster({ rowHeight: rowHeightIn, headerHeight: headerHeightIn, groupHeaderHeight: groupHeaderHeightIn, theme: themeIn, overscrollX: overscrollXIn, overscrollY: overscrollYIn, scaleToRem, remSize, }) {\n    const [rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (!scaleToRem || remSize === 16)\n            return [rowHeightIn, headerHeightIn, groupHeaderHeightIn, themeIn, overscrollXIn, overscrollYIn];\n        const scaler = remSize / 16;\n        const rh = rowHeightIn;\n        const bt = (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_1__.getDataEditorTheme)();\n        return [\n            typeof rh === \"number\" ? rh * scaler : (n) => Math.ceil(rh(n) * scaler),\n            Math.ceil(headerHeightIn * scaler),\n            Math.ceil(groupHeaderHeightIn * scaler),\n            {\n                ...themeIn,\n                headerIconSize: (themeIn?.headerIconSize ?? bt.headerIconSize) * scaler,\n                cellHorizontalPadding: (themeIn?.cellHorizontalPadding ?? bt.cellHorizontalPadding) * scaler,\n                cellVerticalPadding: (themeIn?.cellVerticalPadding ?? bt.cellVerticalPadding) * scaler,\n            },\n            Math.ceil((overscrollXIn ?? 0) * scaler),\n            Math.ceil((overscrollYIn ?? 0) * scaler),\n        ];\n    }, [groupHeaderHeightIn, headerHeightIn, overscrollXIn, overscrollYIn, remSize, rowHeightIn, scaleToRem, themeIn]);\n    return { rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY };\n}\n//# sourceMappingURL=use-rem-adjuster.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vZGF0YS1lZGl0b3IvdXNlLXJlbS1hZGp1c3Rlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFDK0I7QUFDbEQsMEJBQTBCLDRMQUE0TDtBQUM3TiwwRkFBMEYsMENBQWE7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscUVBQWtCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9kYXRhLWVkaXRvci91c2UtcmVtLWFkanVzdGVyLmpzPzU0NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgZ2V0RGF0YUVkaXRvclRoZW1lIH0gZnJvbSBcIi4uL2NvbW1vbi9zdHlsZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZW1BZGp1c3Rlcih7IHJvd0hlaWdodDogcm93SGVpZ2h0SW4sIGhlYWRlckhlaWdodDogaGVhZGVySGVpZ2h0SW4sIGdyb3VwSGVhZGVySGVpZ2h0OiBncm91cEhlYWRlckhlaWdodEluLCB0aGVtZTogdGhlbWVJbiwgb3ZlcnNjcm9sbFg6IG92ZXJzY3JvbGxYSW4sIG92ZXJzY3JvbGxZOiBvdmVyc2Nyb2xsWUluLCBzY2FsZVRvUmVtLCByZW1TaXplLCB9KSB7XG4gICAgY29uc3QgW3Jvd0hlaWdodCwgaGVhZGVySGVpZ2h0LCBncm91cEhlYWRlckhlaWdodCwgdGhlbWUsIG92ZXJzY3JvbGxYLCBvdmVyc2Nyb2xsWV0gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFzY2FsZVRvUmVtIHx8IHJlbVNpemUgPT09IDE2KVxuICAgICAgICAgICAgcmV0dXJuIFtyb3dIZWlnaHRJbiwgaGVhZGVySGVpZ2h0SW4sIGdyb3VwSGVhZGVySGVpZ2h0SW4sIHRoZW1lSW4sIG92ZXJzY3JvbGxYSW4sIG92ZXJzY3JvbGxZSW5dO1xuICAgICAgICBjb25zdCBzY2FsZXIgPSByZW1TaXplIC8gMTY7XG4gICAgICAgIGNvbnN0IHJoID0gcm93SGVpZ2h0SW47XG4gICAgICAgIGNvbnN0IGJ0ID0gZ2V0RGF0YUVkaXRvclRoZW1lKCk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB0eXBlb2YgcmggPT09IFwibnVtYmVyXCIgPyByaCAqIHNjYWxlciA6IChuKSA9PiBNYXRoLmNlaWwocmgobikgKiBzY2FsZXIpLFxuICAgICAgICAgICAgTWF0aC5jZWlsKGhlYWRlckhlaWdodEluICogc2NhbGVyKSxcbiAgICAgICAgICAgIE1hdGguY2VpbChncm91cEhlYWRlckhlaWdodEluICogc2NhbGVyKSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAuLi50aGVtZUluLFxuICAgICAgICAgICAgICAgIGhlYWRlckljb25TaXplOiAodGhlbWVJbj8uaGVhZGVySWNvblNpemUgPz8gYnQuaGVhZGVySWNvblNpemUpICogc2NhbGVyLFxuICAgICAgICAgICAgICAgIGNlbGxIb3Jpem9udGFsUGFkZGluZzogKHRoZW1lSW4/LmNlbGxIb3Jpem9udGFsUGFkZGluZyA/PyBidC5jZWxsSG9yaXpvbnRhbFBhZGRpbmcpICogc2NhbGVyLFxuICAgICAgICAgICAgICAgIGNlbGxWZXJ0aWNhbFBhZGRpbmc6ICh0aGVtZUluPy5jZWxsVmVydGljYWxQYWRkaW5nID8/IGJ0LmNlbGxWZXJ0aWNhbFBhZGRpbmcpICogc2NhbGVyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIE1hdGguY2VpbCgob3ZlcnNjcm9sbFhJbiA/PyAwKSAqIHNjYWxlciksXG4gICAgICAgICAgICBNYXRoLmNlaWwoKG92ZXJzY3JvbGxZSW4gPz8gMCkgKiBzY2FsZXIpLFxuICAgICAgICBdO1xuICAgIH0sIFtncm91cEhlYWRlckhlaWdodEluLCBoZWFkZXJIZWlnaHRJbiwgb3ZlcnNjcm9sbFhJbiwgb3ZlcnNjcm9sbFlJbiwgcmVtU2l6ZSwgcm93SGVpZ2h0SW4sIHNjYWxlVG9SZW0sIHRoZW1lSW5dKTtcbiAgICByZXR1cm4geyByb3dIZWlnaHQsIGhlYWRlckhlaWdodCwgZ3JvdXBIZWFkZXJIZWlnaHQsIHRoZW1lLCBvdmVyc2Nyb2xsWCwgb3ZlcnNjcm9sbFkgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZS1yZW0tYWRqdXN0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/data-editor/use-rem-adjuster.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/click-outside-container/click-outside-container.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/click-outside-container/click-outside-container.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClickOutsideContainer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nclass ClickOutsideContainer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    wrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n    componentDidMount() {\n        document.addEventListener(\"touchend\", this.clickOutside, true);\n        document.addEventListener(\"mousedown\", this.clickOutside, true);\n        document.addEventListener(\"contextmenu\", this.clickOutside, true);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"touchend\", this.clickOutside, true);\n        document.removeEventListener(\"mousedown\", this.clickOutside, true);\n        document.removeEventListener(\"contextmenu\", this.clickOutside, true);\n    }\n    clickOutside = (event) => {\n        if (this.props.isOutsideClick && !this.props.isOutsideClick(event)) {\n            return;\n        }\n        if (this.wrapperRef.current !== null && !this.wrapperRef.current.contains(event.target)) {\n            let node = event.target;\n            while (node !== null) {\n                if (node.classList.contains(\"click-outside-ignore\")) {\n                    return;\n                }\n                node = node.parentElement;\n            }\n            this.props.onClickOutside();\n        }\n    };\n    render() {\n        const { onClickOutside, isOutsideClick, ...rest } = this.props;\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ...rest, ref: this.wrapperRef }, this.props.children));\n    }\n}\n//# sourceMappingURL=click-outside-container.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvY2xpY2stb3V0c2lkZS1jb250YWluZXIvY2xpY2stb3V0c2lkZS1jb250YWluZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDaEIsb0NBQW9DLGdEQUFtQjtBQUN0RSxpQkFBaUIsNENBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBMEM7QUFDMUQsZ0JBQWdCLGdEQUFtQixVQUFVLCtCQUErQjtBQUM1RTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9jbGljay1vdXRzaWRlLWNvbnRhaW5lci9jbGljay1vdXRzaWRlLWNvbnRhaW5lci5qcz9hNThmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xpY2tPdXRzaWRlQ29udGFpbmVyIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gICAgd3JhcHBlclJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgdGhpcy5jbGlja091dHNpZGUsIHRydWUpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuY2xpY2tPdXRzaWRlLCB0cnVlKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRleHRtZW51XCIsIHRoaXMuY2xpY2tPdXRzaWRlLCB0cnVlKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLCB0aGlzLmNsaWNrT3V0c2lkZSwgdHJ1ZSk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5jbGlja091dHNpZGUsIHRydWUpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY29udGV4dG1lbnVcIiwgdGhpcy5jbGlja091dHNpZGUsIHRydWUpO1xuICAgIH1cbiAgICBjbGlja091dHNpZGUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNPdXRzaWRlQ2xpY2sgJiYgIXRoaXMucHJvcHMuaXNPdXRzaWRlQ2xpY2soZXZlbnQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMud3JhcHBlclJlZi5jdXJyZW50ICE9PSBudWxsICYmICF0aGlzLndyYXBwZXJSZWYuY3VycmVudC5jb250YWlucyhldmVudC50YXJnZXQpKSB7XG4gICAgICAgICAgICBsZXQgbm9kZSA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIHdoaWxlIChub2RlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xpY2stb3V0c2lkZS1pZ25vcmVcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrT3V0c2lkZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgb25DbGlja091dHNpZGUsIGlzT3V0c2lkZUNsaWNrLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyAuLi5yZXN0LCByZWY6IHRoaXMud3JhcHBlclJlZiB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpY2stb3V0c2lkZS1jb250YWluZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/click-outside-container/click-outside-container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-editor-container/data-grid-container.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-editor-container/data-grid-container.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataEditorContainer: () => (/* binding */ DataEditorContainer)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction toCss(x) {\n  if (typeof x === \"string\") return x;\n  return `${x}px`;\n}\nconst _exp = /*#__PURE__*/() => p => p.innerWidth;\nconst _exp2 = /*#__PURE__*/() => p => p.innerHeight;\nconst Wrapper = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_1__.styled)('div')({\n  name: \"Wrapper\",\n  class: \"gdg-wmyidgi\",\n  propsAsIs: false,\n  vars: {\n    \"wmyidgi-0\": [_exp()],\n    \"wmyidgi-1\": [_exp2()]\n  }\n});\nconst DataEditorContainer = p => {\n  const {\n    inWidth,\n    inHeight,\n    children,\n    ...rest\n  } = p;\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Wrapper, {\n    innerHeight: toCss(inHeight),\n    innerWidth: toCss(inWidth),\n    ...rest\n  }, children);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDO0FBQ1Q7QUFDL0I7QUFDQTtBQUNBLFlBQVksRUFBRTtBQUNkO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzREFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osU0FBUyxnREFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIuanM/NTcwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQGxpbmFyaWEvcmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gdG9Dc3MoeCkge1xuICBpZiAodHlwZW9mIHggPT09IFwic3RyaW5nXCIpIHJldHVybiB4O1xuICByZXR1cm4gYCR7eH1weGA7XG59XG5jb25zdCBfZXhwID0gLyojX19QVVJFX18qLygpID0+IHAgPT4gcC5pbm5lcldpZHRoO1xuY29uc3QgX2V4cDIgPSAvKiNfX1BVUkVfXyovKCkgPT4gcCA9PiBwLmlubmVySGVpZ2h0O1xuY29uc3QgV3JhcHBlciA9IC8qI19fUFVSRV9fKi9zdHlsZWQoJ2RpdicpKHtcbiAgbmFtZTogXCJXcmFwcGVyXCIsXG4gIGNsYXNzOiBcImdkZy13bXlpZGdpXCIsXG4gIHByb3BzQXNJczogZmFsc2UsXG4gIHZhcnM6IHtcbiAgICBcIndteWlkZ2ktMFwiOiBbX2V4cCgpXSxcbiAgICBcIndteWlkZ2ktMVwiOiBbX2V4cDIoKV1cbiAgfVxufSk7XG5leHBvcnQgY29uc3QgRGF0YUVkaXRvckNvbnRhaW5lciA9IHAgPT4ge1xuICBjb25zdCB7XG4gICAgaW5XaWR0aCxcbiAgICBpbkhlaWdodCxcbiAgICBjaGlsZHJlbixcbiAgICAuLi5yZXN0XG4gIH0gPSBwO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChXcmFwcGVyLCB7XG4gICAgaW5uZXJIZWlnaHQ6IHRvQ3NzKGluSGVpZ2h0KSxcbiAgICBpbm5lcldpZHRoOiB0b0NzcyhpbldpZHRoKSxcbiAgICAuLi5yZXN0XG4gIH0sIGNoaWxkcmVuKTtcbn07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-editor-container/data-grid-container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-dnd/data-grid-dnd.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-dnd/data-grid-dnd.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash_clamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/clamp.js */ \"(ssr)/./node_modules/lodash/clamp.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _data_grid_data_grid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data-grid/data-grid.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid.js\");\n/* eslint-disable unicorn/consistent-destructuring */\n\n\n\n// Dear Past Jason,\n// Wtf does this function do? If you remember in the future come back and add a comment\n// -- Future-Past Jason\nfunction offsetColumnSize(column, width, min, max) {\n    return lodash_clamp_js__WEBPACK_IMPORTED_MODULE_0__(Math.round(width - (column.growOffset ?? 0)), Math.ceil(min), Math.floor(max));\n}\nconst DataGridDnd = p => {\n    const [resizeColStartX, setResizeColStartX] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [resizeCol, setResizeCol] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dragCol, setDragCol] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dropCol, setDropCol] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dragColActive, setDragColActive] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const [dragStartX, setDragStartX] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dragRow, setDragRow] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dropRow, setDropRow] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const [dragRowActive, setDragRowActive] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const [dragStartY, setDragStartY] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n    const { onHeaderMenuClick, getCellContent, onColumnMoved, onColumnResize, onColumnResizeStart, onColumnResizeEnd, gridRef, maxColumnWidth, minColumnWidth, onRowMoved, lockColumns, onColumnProposeMove, onMouseDown, onMouseUp, onItemHovered, onDragStart, canvasRef, } = p;\n    const canResize = (onColumnResize ?? onColumnResizeEnd ?? onColumnResizeStart) !== undefined;\n    const { columns, selection } = p;\n    const selectedColumns = selection.columns;\n    const onItemHoveredImpl = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((args) => {\n        const [col, row] = args.location;\n        if (dragCol !== undefined && dropCol !== col && col >= lockColumns) {\n            setDragColActive(true);\n            setDropCol(col);\n        }\n        else if (dragRow !== undefined && row !== undefined) {\n            setDragRowActive(true);\n            setDropRow(Math.max(0, row));\n            // Don't emit onItemHovered if resizing or reordering a column or row.\n        }\n        else if (resizeCol === undefined && !dragColActive && !dragRowActive) {\n            onItemHovered?.(args);\n        }\n    }, [dragCol, dragRow, dropCol, onItemHovered, lockColumns, resizeCol, dragColActive, dragRowActive]);\n    const canDragCol = onColumnMoved !== undefined;\n    const onMouseDownImpl = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((args) => {\n        if (args.button === 0) {\n            const [col, row] = args.location;\n            if (args.kind === \"out-of-bounds\" && args.isEdge && canResize) {\n                const bounds = gridRef?.current?.getBounds(columns.length - 1, -1);\n                if (bounds !== undefined) {\n                    setResizeColStartX(bounds.x);\n                    setResizeCol(columns.length - 1);\n                }\n            }\n            else if (args.kind === \"header\" && col >= lockColumns) {\n                const canvas = canvasRef?.current;\n                if (args.isEdge && canResize && canvas) {\n                    setResizeColStartX(args.bounds.x);\n                    setResizeCol(col);\n                    const rect = canvas.getBoundingClientRect();\n                    const scale = rect.width / canvas.offsetWidth;\n                    const width = args.bounds.width / scale;\n                    onColumnResizeStart?.(columns[col], width, col, width + (columns[col].growOffset ?? 0));\n                }\n                else if (args.kind === \"header\" && canDragCol) {\n                    setDragStartX(args.bounds.x);\n                    setDragCol(col);\n                }\n            }\n            else if (args.kind === \"cell\" &&\n                lockColumns > 0 &&\n                col === 0 &&\n                row !== undefined &&\n                onRowMoved !== undefined) {\n                setDragStartY(args.bounds.y);\n                setDragRow(row);\n            }\n        }\n        onMouseDown?.(args);\n    }, [onMouseDown, canResize, lockColumns, onRowMoved, gridRef, columns, canDragCol, onColumnResizeStart, canvasRef]);\n    const onHeaderMenuClickMangled = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((col, screenPosition) => {\n        if (dragColActive || dragRowActive)\n            return;\n        onHeaderMenuClick?.(col, screenPosition);\n    }, [dragColActive, dragRowActive, onHeaderMenuClick]);\n    const lastResizeWidthRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(-1);\n    const clearAll = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {\n        lastResizeWidthRef.current = -1;\n        setDragRow(undefined);\n        setDropRow(undefined);\n        setDragStartY(undefined);\n        setDragRowActive(false);\n        setDragCol(undefined);\n        setDropCol(undefined);\n        setDragStartX(undefined);\n        setDragColActive(false);\n        setResizeCol(undefined);\n        setResizeColStartX(undefined);\n    }, []);\n    const onMouseUpImpl = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((args, isOutside) => {\n        if (args.button === 0) {\n            if (resizeCol !== undefined) {\n                // if the column is in selection, the selection may contain extra cols, so lets just re-send the last\n                // resize event to all those columns.\n                if (selectedColumns?.hasIndex(resizeCol) === true) {\n                    for (const c of selectedColumns) {\n                        if (c === resizeCol)\n                            continue;\n                        const col = columns[c];\n                        const newSize = offsetColumnSize(col, lastResizeWidthRef.current, minColumnWidth, maxColumnWidth);\n                        onColumnResize?.(col, newSize, c, newSize + (col.growOffset ?? 0));\n                    }\n                }\n                const ns = offsetColumnSize(columns[resizeCol], lastResizeWidthRef.current, minColumnWidth, maxColumnWidth);\n                onColumnResizeEnd?.(columns[resizeCol], ns, resizeCol, ns + (columns[resizeCol].growOffset ?? 0));\n                if (selectedColumns.hasIndex(resizeCol)) {\n                    for (const c of selectedColumns) {\n                        if (c === resizeCol)\n                            continue;\n                        const col = columns[c];\n                        const s = offsetColumnSize(col, lastResizeWidthRef.current, minColumnWidth, maxColumnWidth);\n                        onColumnResizeEnd?.(col, s, c, s + (col.growOffset ?? 0));\n                    }\n                }\n            }\n            clearAll();\n            if (dragCol !== undefined && dropCol !== undefined) {\n                onColumnMoved?.(dragCol, dropCol);\n            }\n            if (dragRow !== undefined && dropRow !== undefined) {\n                onRowMoved?.(dragRow, dropRow);\n            }\n        }\n        onMouseUp?.(args, isOutside);\n    }, [\n        onMouseUp,\n        resizeCol,\n        dragCol,\n        dropCol,\n        dragRow,\n        dropRow,\n        selectedColumns,\n        onColumnResizeEnd,\n        columns,\n        minColumnWidth,\n        maxColumnWidth,\n        onColumnResize,\n        onColumnMoved,\n        onRowMoved,\n        clearAll,\n    ]);\n    const dragOffset = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {\n        if (dragCol === undefined || dropCol === undefined)\n            return undefined;\n        if (dragCol === dropCol)\n            return undefined;\n        if (onColumnProposeMove?.(dragCol, dropCol) === false)\n            return undefined;\n        return {\n            src: dragCol,\n            dest: dropCol,\n        };\n    }, [dragCol, dropCol, onColumnProposeMove]);\n    const onMouseMove = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((event) => {\n        const canvas = canvasRef?.current;\n        if (dragCol !== undefined && dragStartX !== undefined) {\n            const diff = Math.abs(event.clientX - dragStartX);\n            if (diff > 20) {\n                setDragColActive(true);\n            }\n        }\n        else if (dragRow !== undefined && dragStartY !== undefined) {\n            const diff = Math.abs(event.clientY - dragStartY);\n            if (diff > 20) {\n                setDragRowActive(true);\n            }\n        }\n        else if (resizeCol !== undefined && resizeColStartX !== undefined && canvas) {\n            const rect = canvas.getBoundingClientRect();\n            const scale = rect.width / canvas.offsetWidth;\n            const newWidth = (event.clientX - resizeColStartX) / scale;\n            const column = columns[resizeCol];\n            const ns = offsetColumnSize(column, newWidth, minColumnWidth, maxColumnWidth);\n            onColumnResize?.(column, ns, resizeCol, ns + (column.growOffset ?? 0));\n            lastResizeWidthRef.current = newWidth;\n            if (selectedColumns?.first() === resizeCol) {\n                for (const c of selectedColumns) {\n                    if (c === resizeCol)\n                        continue;\n                    const col = columns[c];\n                    const s = offsetColumnSize(col, lastResizeWidthRef.current, minColumnWidth, maxColumnWidth);\n                    onColumnResize?.(col, s, c, s + (col.growOffset ?? 0));\n                }\n            }\n        }\n    }, [\n        dragCol,\n        dragStartX,\n        dragRow,\n        dragStartY,\n        resizeCol,\n        resizeColStartX,\n        columns,\n        minColumnWidth,\n        maxColumnWidth,\n        onColumnResize,\n        selectedColumns,\n        canvasRef,\n    ]);\n    const getMangledCellContent = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((cell, forceStrict) => {\n        if (dragRow === undefined || dropRow === undefined)\n            return getCellContent(cell, forceStrict);\n        // eslint-disable-next-line prefer-const\n        let [col, row] = cell;\n        if (row === dropRow) {\n            row = dragRow;\n        }\n        else {\n            if (row > dropRow)\n                row -= 1;\n            if (row >= dragRow)\n                row += 1;\n        }\n        return getCellContent([col, row], forceStrict);\n    }, [dragRow, dropRow, getCellContent]);\n    const onDragStartImpl = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(args => {\n        onDragStart?.(args);\n        if (!args.defaultPrevented()) {\n            clearAll();\n        }\n    }, [clearAll, onDragStart]);\n    return (react__WEBPACK_IMPORTED_MODULE_1__.createElement(_data_grid_data_grid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { accessibilityHeight: p.accessibilityHeight, canvasRef: p.canvasRef, cellXOffset: p.cellXOffset, cellYOffset: p.cellYOffset, columns: p.columns, disabledRows: p.disabledRows, drawFocusRing: p.drawFocusRing, drawHeader: p.drawHeader, drawCell: p.drawCell, enableGroups: p.enableGroups, eventTargetRef: p.eventTargetRef, experimental: p.experimental, fillHandle: p.fillHandle, firstColAccessible: p.firstColAccessible, fixedShadowX: p.fixedShadowX, fixedShadowY: p.fixedShadowY, freezeColumns: p.freezeColumns, getCellRenderer: p.getCellRenderer, getGroupDetails: p.getGroupDetails, getRowThemeOverride: p.getRowThemeOverride, groupHeaderHeight: p.groupHeaderHeight, headerHeight: p.headerHeight, headerIcons: p.headerIcons, height: p.height, highlightRegions: p.highlightRegions, imageWindowLoader: p.imageWindowLoader, resizeColumn: resizeCol, isDraggable: p.isDraggable, isFilling: p.isFilling, isFocused: p.isFocused, onCanvasBlur: p.onCanvasBlur, onCanvasFocused: p.onCanvasFocused, onCellFocused: p.onCellFocused, onContextMenu: p.onContextMenu, onDragEnd: p.onDragEnd, onDragLeave: p.onDragLeave, onDragOverCell: p.onDragOverCell, onDrop: p.onDrop, onKeyDown: p.onKeyDown, onKeyUp: p.onKeyUp, onMouseMove: p.onMouseMove, prelightCells: p.prelightCells, rowHeight: p.rowHeight, rows: p.rows, selection: p.selection, smoothScrollX: p.smoothScrollX, smoothScrollY: p.smoothScrollY, theme: p.theme, freezeTrailingRows: p.freezeTrailingRows, hasAppendRow: p.hasAppendRow, translateX: p.translateX, translateY: p.translateY, verticalBorder: p.verticalBorder, width: p.width, getCellContent: getMangledCellContent, isResizing: resizeCol !== undefined, onHeaderMenuClick: onHeaderMenuClickMangled, isDragging: dragColActive, onItemHovered: onItemHoveredImpl, onDragStart: onDragStartImpl, onMouseDown: onMouseDownImpl, allowResize: canResize, onMouseUp: onMouseUpImpl, dragAndDropState: dragOffset, onMouseMoveRaw: onMouseMove, ref: gridRef }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataGridDnd);\n//# sourceMappingURL=data-grid-dnd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-dnd/data-grid-dnd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor-style.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor-style.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataGridOverlayEditorStyle: () => (/* binding */ DataGridOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst _exp2 = /*#__PURE__*/() => p => p.targetX;\nconst _exp3 = /*#__PURE__*/() => p => p.targetY;\nconst _exp4 = /*#__PURE__*/() => p => p.targetWidth;\nconst _exp5 = /*#__PURE__*/() => p => p.targetHeight;\nconst _exp6 = /*#__PURE__*/() => p => p.targetY + 10;\nconst _exp7 = /*#__PURE__*/() => p => Math.max(0, (p.targetHeight - 28) / 2);\nconst DataGridOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"DataGridOverlayEditorStyle\",\n  class: \"gdg-d19meir1\",\n  propsAsIs: false,\n  vars: {\n    \"d19meir1-0\": [_exp3(), \"px\"],\n    \"d19meir1-1\": [_exp2(), \"px\"],\n    \"d19meir1-2\": [_exp4(), \"px\"],\n    \"d19meir1-3\": [_exp5(), \"px\"],\n    \"d19meir1-4\": [_exp6(), \"px\"],\n    \"d19meir1-5\": [_exp7(), \"px\"]\n  }\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci1zdHlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnREFBZ0Qsc0RBQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQtb3ZlcmxheS1lZGl0b3IvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzPzZhMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5jb25zdCBfZXhwMiA9IC8qI19fUFVSRV9fKi8oKSA9PiBwID0+IHAudGFyZ2V0WDtcbmNvbnN0IF9leHAzID0gLyojX19QVVJFX18qLygpID0+IHAgPT4gcC50YXJnZXRZO1xuY29uc3QgX2V4cDQgPSAvKiNfX1BVUkVfXyovKCkgPT4gcCA9PiBwLnRhcmdldFdpZHRoO1xuY29uc3QgX2V4cDUgPSAvKiNfX1BVUkVfXyovKCkgPT4gcCA9PiBwLnRhcmdldEhlaWdodDtcbmNvbnN0IF9leHA2ID0gLyojX19QVVJFX18qLygpID0+IHAgPT4gcC50YXJnZXRZICsgMTA7XG5jb25zdCBfZXhwNyA9IC8qI19fUFVSRV9fKi8oKSA9PiBwID0+IE1hdGgubWF4KDAsIChwLnRhcmdldEhlaWdodCAtIDI4KSAvIDIpO1xuZXhwb3J0IGNvbnN0IERhdGFHcmlkT3ZlcmxheUVkaXRvclN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIkRhdGFHcmlkT3ZlcmxheUVkaXRvclN0eWxlXCIsXG4gIGNsYXNzOiBcImdkZy1kMTltZWlyMVwiLFxuICBwcm9wc0FzSXM6IGZhbHNlLFxuICB2YXJzOiB7XG4gICAgXCJkMTltZWlyMS0wXCI6IFtfZXhwMygpLCBcInB4XCJdLFxuICAgIFwiZDE5bWVpcjEtMVwiOiBbX2V4cDIoKSwgXCJweFwiXSxcbiAgICBcImQxOW1laXIxLTJcIjogW19leHA0KCksIFwicHhcIl0sXG4gICAgXCJkMTltZWlyMS0zXCI6IFtfZXhwNSgpLCBcInB4XCJdLFxuICAgIFwiZDE5bWVpcjEtNFwiOiBbX2V4cDYoKSwgXCJweFwiXSxcbiAgICBcImQxOW1laXIxLTVcIjogW19leHA3KCksIFwicHhcIl1cbiAgfVxufSk7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _click_outside_container_click_outside_container_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../click-outside-container/click-outside-container.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/click-outside-container/click-outside-container.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n/* harmony import */ var _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _data_grid_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data-grid-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor-style.js\");\n/* harmony import */ var _use_stay_on_screen_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-stay-on-screen.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/use-stay-on-screen.js\");\n\n\n\n\n\n\n\nconst DataGridOverlayEditor = p => {\n    const { target, content, onFinishEditing: onFinishEditingIn, forceEditMode, initialValue, imageEditorOverride, markdownDivCreateNode, highlight, className, theme, id, cell, bloom, validateCell, getCellRenderer, provideEditor, isOutsideClick, } = p;\n    const [tempValue, setTempValueRaw] = react__WEBPACK_IMPORTED_MODULE_0__.useState(forceEditMode ? content : undefined);\n    const lastValueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(tempValue ?? content);\n    lastValueRef.current = tempValue ?? content;\n    const [isValid, setIsValid] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => {\n        if (validateCell === undefined)\n            return true;\n        return !((0,_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.isEditableGridCell)(content) && validateCell?.(cell, content, lastValueRef.current) === false);\n    });\n    const onFinishEditing = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newCell, movement) => {\n        onFinishEditingIn(isValid ? newCell : undefined, movement);\n    }, [isValid, onFinishEditingIn]);\n    const setTempValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newVal) => {\n        if (validateCell !== undefined && newVal !== undefined && (0,_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.isEditableGridCell)(newVal)) {\n            const validResult = validateCell(cell, newVal, lastValueRef.current);\n            if (validResult === false) {\n                setIsValid(false);\n            }\n            else if (typeof validResult === \"object\") {\n                newVal = validResult;\n                setIsValid(true);\n            }\n            else {\n                setIsValid(true);\n            }\n        }\n        setTempValueRaw(newVal);\n    }, [cell, validateCell]);\n    const finished = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const customMotion = react__WEBPACK_IMPORTED_MODULE_0__.useRef(undefined);\n    const onClickOutside = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        onFinishEditing(tempValue, [0, 0]);\n        finished.current = true;\n    }, [tempValue, onFinishEditing]);\n    const onEditorFinished = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newValue, movement) => {\n        onFinishEditing(newValue, movement ?? customMotion.current ?? [0, 0]);\n        finished.current = true;\n    }, [onFinishEditing]);\n    const onKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async (event) => {\n        let save = false;\n        if (event.key === \"Escape\") {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [0, 0];\n        }\n        else if (event.key === \"Enter\" && !event.shiftKey) {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [0, 1];\n            save = true;\n        }\n        else if (event.key === \"Tab\") {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [event.shiftKey ? -1 : 1, 0];\n            save = true;\n        }\n        window.setTimeout(() => {\n            if (!finished.current && customMotion.current !== undefined) {\n                onFinishEditing(save ? tempValue : undefined, customMotion.current);\n                finished.current = true;\n            }\n        }, 0);\n    }, [onFinishEditing, tempValue]);\n    const targetValue = tempValue ?? content;\n    const [editorProvider, useLabel] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if ((0,_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.isInnerOnlyCell)(content))\n            return [];\n        const external = provideEditor?.(content);\n        if (external !== undefined)\n            return [external, false];\n        return [getCellRenderer(content)?.provideEditor?.(content), false];\n    }, [content, getCellRenderer, provideEditor]);\n    const { ref, style: stayOnScreenStyle } = (0,_use_stay_on_screen_js__WEBPACK_IMPORTED_MODULE_3__.useStayOnScreen)();\n    let pad = true;\n    let editor;\n    let style = true;\n    let styleOverride;\n    if (editorProvider !== undefined) {\n        pad = editorProvider.disablePadding !== true;\n        style = editorProvider.disableStyling !== true;\n        const isObjectEditor = (0,_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.isObjectEditorCallbackResult)(editorProvider);\n        if (isObjectEditor) {\n            styleOverride = editorProvider.styleOverride;\n        }\n        const CustomEditor = isObjectEditor ? editorProvider.editor : editorProvider;\n        editor = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(CustomEditor, { isHighlighted: highlight, onChange: setTempValue, value: targetValue, initialValue: initialValue, onFinishedEditing: onEditorFinished, validatedSelection: (0,_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.isEditableGridCell)(targetValue) ? targetValue.selectionRange : undefined, forceEditMode: forceEditMode, target: target, imageEditorOverride: imageEditorOverride, markdownDivCreateNode: markdownDivCreateNode, isValid: isValid, theme: theme }));\n    }\n    styleOverride = { ...styleOverride, ...stayOnScreenStyle };\n    // Consider imperatively creating and adding the element to the dom?\n    const portalElement = document.getElementById(\"portal\");\n    if (portalElement === null) {\n        // eslint-disable-next-line no-console\n        console.error('Cannot open Data Grid overlay editor, because portal not found.  Please add `<div id=\"portal\" />` as the last child of your `<body>`.');\n        return null;\n    }\n    let classWrap = style ? \"gdg-style\" : \"gdg-unstyle\";\n    if (!isValid) {\n        classWrap += \" gdg-invalid\";\n    }\n    if (pad) {\n        classWrap += \" gdg-pad\";\n    }\n    const bloomX = bloom?.[0] ?? 1;\n    const bloomY = bloom?.[1] ?? 1;\n    return (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_styles_js__WEBPACK_IMPORTED_MODULE_4__.ThemeContext.Provider, { value: theme },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_click_outside_container_click_outside_container_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { style: (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_4__.makeCSSStyle)(theme), className: className, onClickOutside: onClickOutside, isOutsideClick: isOutsideClick },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_data_grid_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_6__.DataGridOverlayEditorStyle, { ref: ref, id: id, className: classWrap, style: styleOverride, as: useLabel === true ? \"label\" : undefined, targetX: target.x - bloomX, targetY: target.y - bloomY, targetWidth: target.width + bloomX * 2, targetHeight: target.height + bloomY * 2 },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-clip-region\", onKeyDown: onKeyDown }, editor)))), portalElement);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataGridOverlayEditor);\n//# sourceMappingURL=data-grid-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor-style.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor-style.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BubblesOverlayEditorStyle: () => (/* binding */ BubblesOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst BubblesOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"BubblesOverlayEditorStyle\",\n  class: \"gdg-b1ygi5by\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvYnViYmxlcy1vdmVybGF5LWVkaXRvci1zdHlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQywrQ0FBK0Msc0RBQU07QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL2J1YmJsZXMtb3ZlcmxheS1lZGl0b3Itc3R5bGUuanM/Y2EyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQGxpbmFyaWEvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCBCdWJibGVzT3ZlcmxheUVkaXRvclN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIkJ1YmJsZXNPdmVybGF5RWRpdG9yU3R5bGVcIixcbiAgY2xhc3M6IFwiZ2RnLWIxeWdpNWJ5XCIsXG4gIHByb3BzQXNJczogZmFsc2Vcbn0pO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _bubbles_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bubbles-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor-style.js\");\n\n\nconst BubblesOverlayEditor = p => {\n    const { bubbles } = p;\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_bubbles_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__.BubblesOverlayEditorStyle, null,\n        bubbles.map((b, i) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { key: i, className: \"boe-bubble\" }, b))),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"textarea\", { className: \"gdg-input\", autoFocus: true })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BubblesOverlayEditor);\n//# sourceMappingURL=bubbles-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvYnViYmxlcy1vdmVybGF5LWVkaXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0I7QUFDK0M7QUFDOUU7QUFDQSxZQUFZLFVBQVU7QUFDdEIsWUFBWSxnREFBbUIsQ0FBQyx1RkFBeUI7QUFDekQsK0JBQStCLGdEQUFtQixVQUFVLGlDQUFpQztBQUM3RixRQUFRLGdEQUFtQixlQUFlLHlDQUF5QztBQUNuRjtBQUNBLGlFQUFlLG9CQUFvQixFQUFDO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvYnViYmxlcy1vdmVybGF5LWVkaXRvci5qcz85ZTg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQnViYmxlc092ZXJsYXlFZGl0b3JTdHlsZSB9IGZyb20gXCIuL2J1YmJsZXMtb3ZlcmxheS1lZGl0b3Itc3R5bGUuanNcIjtcbmNvbnN0IEJ1YmJsZXNPdmVybGF5RWRpdG9yID0gcCA9PiB7XG4gICAgY29uc3QgeyBidWJibGVzIH0gPSBwO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChCdWJibGVzT3ZlcmxheUVkaXRvclN0eWxlLCBudWxsLFxuICAgICAgICBidWJibGVzLm1hcCgoYiwgaSkgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBrZXk6IGksIGNsYXNzTmFtZTogXCJib2UtYnViYmxlXCIgfSwgYikpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIsIHsgY2xhc3NOYW1lOiBcImdkZy1pbnB1dFwiLCBhdXRvRm9jdXM6IHRydWUgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBCdWJibGVzT3ZlcmxheUVkaXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1YmJsZXMtb3ZlcmxheS1lZGl0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/bubbles-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/drilldown-overlay-editor.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/drilldown-overlay-editor.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\n\nconst DrilldownOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_1__.styled)('div')({\n  name: \"DrilldownOverlayEditorStyle\",\n  class: \"gdg-d4zsq0x\",\n  propsAsIs: false\n});\nconst DrilldownOverlayEditor = p => {\n  const {\n    drilldowns\n  } = p;\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(DrilldownOverlayEditorStyle, null, drilldowns.map((d, i) => react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    key: i,\n    className: \"doe-bubble\"\n  }, d.img !== undefined && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n    src: d.img\n  }), react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, d.text))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DrilldownOverlayEditor);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvZHJpbGxkb3duLW92ZXJsYXktZWRpdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUNTO0FBQ3hDLGlEQUFpRCxzREFBTTtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLFNBQVMsZ0RBQW1CLDZEQUE2RCxnREFBbUI7QUFDNUc7QUFDQTtBQUNBLEdBQUcseUJBQXlCLGdEQUFtQjtBQUMvQztBQUNBLEdBQUcsR0FBRyxnREFBbUI7QUFDekI7QUFDQSxpRUFBZSxzQkFBc0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL2RyaWxsZG93bi1vdmVybGF5LWVkaXRvci5qcz83YmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5jb25zdCBEcmlsbGRvd25PdmVybGF5RWRpdG9yU3R5bGUgPSAvKiNfX1BVUkVfXyovc3R5bGVkKCdkaXYnKSh7XG4gIG5hbWU6IFwiRHJpbGxkb3duT3ZlcmxheUVkaXRvclN0eWxlXCIsXG4gIGNsYXNzOiBcImdkZy1kNHpzcTB4XCIsXG4gIHByb3BzQXNJczogZmFsc2Vcbn0pO1xuY29uc3QgRHJpbGxkb3duT3ZlcmxheUVkaXRvciA9IHAgPT4ge1xuICBjb25zdCB7XG4gICAgZHJpbGxkb3duc1xuICB9ID0gcDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJpbGxkb3duT3ZlcmxheUVkaXRvclN0eWxlLCBudWxsLCBkcmlsbGRvd25zLm1hcCgoZCwgaSkgPT4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAga2V5OiBpLFxuICAgIGNsYXNzTmFtZTogXCJkb2UtYnViYmxlXCJcbiAgfSwgZC5pbWcgIT09IHVuZGVmaW5lZCAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtcbiAgICBzcmM6IGQuaW1nXG4gIH0pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIGQudGV4dCkpKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgRHJpbGxkb3duT3ZlcmxheUVkaXRvcjtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/drilldown-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor-style.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor-style.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageOverlayEditorStyle: () => (/* binding */ ImageOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst ImageOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"ImageOverlayEditorStyle\",\n  class: \"gdg-i2iowwq\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvaW1hZ2Utb3ZlcmxheS1lZGl0b3Itc3R5bGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDakMsNkNBQTZDLHNEQUFNO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQtb3ZlcmxheS1lZGl0b3IvcHJpdmF0ZS9pbWFnZS1vdmVybGF5LWVkaXRvci1zdHlsZS5qcz85YzU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAbGluYXJpYS9yZWFjdFwiO1xuZXhwb3J0IGNvbnN0IEltYWdlT3ZlcmxheUVkaXRvclN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIkltYWdlT3ZlcmxheUVkaXRvclN0eWxlXCIsXG4gIGNsYXNzOiBcImdkZy1pMmlvd3dxXCIsXG4gIHByb3BzQXNJczogZmFsc2Vcbn0pO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageOverlayEditor: () => (/* binding */ ImageOverlayEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _image_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./image-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor-style.js\");\n/* harmony import */ var react_responsive_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-responsive-carousel */ \"(ssr)/./node_modules/react-responsive-carousel/lib/js/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n\n\n\n\n/** @category Renderers */\nconst ImageOverlayEditor = p => {\n    const { urls, canWrite, onEditClick, renderImage } = p;\n    const filtered = urls.filter(u => u !== \"\");\n    if (filtered.length === 0) {\n        return null;\n    }\n    const allowMove = filtered.length > 1;\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_image_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_2__.ImageOverlayEditorStyle, { \"data-testid\": \"GDG-default-image-overlay-editor\" },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_responsive_carousel__WEBPACK_IMPORTED_MODULE_1__.Carousel, { showArrows: allowMove, showThumbs: false, swipeable: allowMove, emulateTouch: allowMove, infiniteLoop: allowMove }, filtered.map(url => {\n            const innerContent = renderImage?.(url) ?? react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", { draggable: false, src: url });\n            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-centering-container\", key: url }, innerContent));\n        })),\n        canWrite && onEditClick && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: \"gdg-edit-icon\", onClick: onEditClick },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.EditPencil, null)))));\n};\n//# sourceMappingURL=image-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvaW1hZ2Utb3ZlcmxheS1lZGl0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0I7QUFDMkM7QUFDckI7QUFDQztBQUN0RDtBQUNPO0FBQ1AsWUFBWSwyQ0FBMkM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0RBQW1CLENBQUMsbUZBQXVCLElBQUksbURBQW1EO0FBQzlHLFFBQVEsZ0RBQW1CLENBQUMsK0RBQVEsSUFBSSxrSEFBa0g7QUFDMUosdURBQXVELGdEQUFtQixVQUFVLDRCQUE0QjtBQUNoSCxvQkFBb0IsZ0RBQW1CLFVBQVUsZ0RBQWdEO0FBQ2pHLFNBQVM7QUFDVCxvQ0FBb0MsZ0RBQW1CLGFBQWEsa0RBQWtEO0FBQ3RILFlBQVksZ0RBQW1CLENBQUMsd0RBQVU7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL2ltYWdlLW92ZXJsYXktZWRpdG9yLmpzP2YzMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBJbWFnZU92ZXJsYXlFZGl0b3JTdHlsZSB9IGZyb20gXCIuL2ltYWdlLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzXCI7XG5pbXBvcnQgeyBDYXJvdXNlbCB9IGZyb20gXCJyZWFjdC1yZXNwb25zaXZlLWNhcm91c2VsXCI7XG5pbXBvcnQgeyBFZGl0UGVuY2lsIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi91dGlscy5qc1wiO1xuLyoqIEBjYXRlZ29yeSBSZW5kZXJlcnMgKi9cbmV4cG9ydCBjb25zdCBJbWFnZU92ZXJsYXlFZGl0b3IgPSBwID0+IHtcbiAgICBjb25zdCB7IHVybHMsIGNhbldyaXRlLCBvbkVkaXRDbGljaywgcmVuZGVySW1hZ2UgfSA9IHA7XG4gICAgY29uc3QgZmlsdGVyZWQgPSB1cmxzLmZpbHRlcih1ID0+IHUgIT09IFwiXCIpO1xuICAgIGlmIChmaWx0ZXJlZC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IGFsbG93TW92ZSA9IGZpbHRlcmVkLmxlbmd0aCA+IDE7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEltYWdlT3ZlcmxheUVkaXRvclN0eWxlLCB7IFwiZGF0YS10ZXN0aWRcIjogXCJHREctZGVmYXVsdC1pbWFnZS1vdmVybGF5LWVkaXRvclwiIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2Fyb3VzZWwsIHsgc2hvd0Fycm93czogYWxsb3dNb3ZlLCBzaG93VGh1bWJzOiBmYWxzZSwgc3dpcGVhYmxlOiBhbGxvd01vdmUsIGVtdWxhdGVUb3VjaDogYWxsb3dNb3ZlLCBpbmZpbml0ZUxvb3A6IGFsbG93TW92ZSB9LCBmaWx0ZXJlZC5tYXAodXJsID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlubmVyQ29udGVudCA9IHJlbmRlckltYWdlPy4odXJsKSA/PyBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHsgZHJhZ2dhYmxlOiBmYWxzZSwgc3JjOiB1cmwgfSk7XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZ2RnLWNlbnRlcmluZy1jb250YWluZXJcIiwga2V5OiB1cmwgfSwgaW5uZXJDb250ZW50KSk7XG4gICAgICAgIH0pKSxcbiAgICAgICAgY2FuV3JpdGUgJiYgb25FZGl0Q2xpY2sgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzc05hbWU6IFwiZ2RnLWVkaXQtaWNvblwiLCBvbkNsaWNrOiBvbkVkaXRDbGljayB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFZGl0UGVuY2lsLCBudWxsKSkpKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2Utb3ZlcmxheS1lZGl0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/image-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor-style.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor-style.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkdownOverlayEditorStyle: () => (/* binding */ MarkdownOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst _exp = /*#__PURE__*/() => p => p.targetWidth;\nconst MarkdownOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"MarkdownOverlayEditorStyle\",\n  class: \"gdg-m1pnx84e\",\n  propsAsIs: false,\n  vars: {\n    \"m1pnx84e-0\": [_exp(), \"px\"]\n  }\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbWFya2Rvd24tb3ZlcmxheS1lZGl0b3Itc3R5bGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDeEM7QUFDTyxnREFBZ0Qsc0RBQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL21hcmtkb3duLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzP2M5YmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5jb25zdCBfZXhwID0gLyojX19QVVJFX18qLygpID0+IHAgPT4gcC50YXJnZXRXaWR0aDtcbmV4cG9ydCBjb25zdCBNYXJrZG93bk92ZXJsYXlFZGl0b3JTdHlsZSA9IC8qI19fUFVSRV9fKi9zdHlsZWQoJ2RpdicpKHtcbiAgbmFtZTogXCJNYXJrZG93bk92ZXJsYXlFZGl0b3JTdHlsZVwiLFxuICBjbGFzczogXCJnZGctbTFwbng4NGVcIixcbiAgcHJvcHNBc0lzOiBmYWxzZSxcbiAgdmFyczoge1xuICAgIFwibTFwbng4NGUtMFwiOiBbX2V4cCgpLCBcInB4XCJdXG4gIH1cbn0pO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkdownOverlayEditor: () => (/* binding */ MarkdownOverlayEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _markdown_div_markdown_div_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../markdown-div/markdown-div.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/markdown-div.js\");\n/* harmony import */ var _growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../growing-entry/growing-entry.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js\");\n/* harmony import */ var _markdown_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markdown-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor-style.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n\n\n\n\n\nconst MarkdownOverlayEditor = p => {\n    const { value, onChange, forceEditMode, createNode, targetRect, onFinish, validatedSelection } = p;\n    const markdown = value.data;\n    const readonly = value.readonly === true;\n    const [editMode, setEditMode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(markdown === \"\" || forceEditMode);\n    const onEditClick = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        setEditMode(e => !e);\n    }, []);\n    const addLeftPad = markdown ? \"gdg-ml-6\" : \"\";\n    if (editMode) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_markdown_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__.MarkdownOverlayEditorStyle, { targetWidth: targetRect.width - 20 },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_2__.GrowingEntry, { autoFocus: true, highlight: false, validatedSelection: validatedSelection, value: markdown, onKeyDown: e => {\n                    if (e.key === \"Enter\")\n                        e.stopPropagation();\n                }, onChange: onChange }),\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: `gdg-edit-icon gdg-checkmark-hover ${addLeftPad}`, onClick: () => onFinish(value) },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.Checkmark, null))));\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_markdown_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__.MarkdownOverlayEditorStyle, { targetWidth: targetRect.width },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_markdown_div_markdown_div_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { contents: markdown, createNode: createNode }),\n        !readonly && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"spacer\" }),\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: `gdg-edit-icon gdg-edit-hover ${addLeftPad}`, onClick: onEditClick },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.EditPencil, null)))),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"textarea\", { className: \"gdg-md-edit-textarea gdg-input\", autoFocus: true })));\n};\n//# sourceMappingURL=markdown-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbWFya2Rvd24tb3ZlcmxheS1lZGl0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStCO0FBQzhCO0FBQ087QUFDWTtBQUNmO0FBQzFEO0FBQ1AsWUFBWSx1RkFBdUY7QUFDbkc7QUFDQTtBQUNBLG9DQUFvQywyQ0FBYztBQUNsRCx3QkFBd0IsOENBQWlCO0FBQ3pDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxnQkFBZ0IsZ0RBQW1CLENBQUMseUZBQTBCLElBQUksb0NBQW9DO0FBQ3RHLFlBQVksZ0RBQW1CLENBQUMseUVBQVksSUFBSTtBQUNoRDtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QyxZQUFZLGdEQUFtQixVQUFVLGdEQUFnRCxXQUFXLG1DQUFtQztBQUN2SSxnQkFBZ0IsZ0RBQW1CLENBQUMsdURBQVM7QUFDN0M7QUFDQSxZQUFZLGdEQUFtQixDQUFDLHlGQUEwQixJQUFJLCtCQUErQjtBQUM3RixRQUFRLGdEQUFtQixDQUFDLHFFQUFXLElBQUksNENBQTRDO0FBQ3ZGLHNCQUFzQixnREFBbUIsQ0FBQywyQ0FBYztBQUN4RCxZQUFZLGdEQUFtQixVQUFVLHFCQUFxQjtBQUM5RCxZQUFZLGdEQUFtQixVQUFVLDJDQUEyQyxXQUFXLHlCQUF5QjtBQUN4SCxnQkFBZ0IsZ0RBQW1CLENBQUMsd0RBQVU7QUFDOUMsUUFBUSxnREFBbUIsZUFBZSw4REFBOEQ7QUFDeEc7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL21hcmtkb3duLW92ZXJsYXktZWRpdG9yLmpzPzFiM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTWFya2Rvd25EaXYgZnJvbSBcIi4uLy4uL21hcmtkb3duLWRpdi9tYXJrZG93bi1kaXYuanNcIjtcbmltcG9ydCB7IEdyb3dpbmdFbnRyeSB9IGZyb20gXCIuLi8uLi9ncm93aW5nLWVudHJ5L2dyb3dpbmctZW50cnkuanNcIjtcbmltcG9ydCB7IE1hcmtkb3duT3ZlcmxheUVkaXRvclN0eWxlIH0gZnJvbSBcIi4vbWFya2Rvd24tb3ZlcmxheS1lZGl0b3Itc3R5bGUuanNcIjtcbmltcG9ydCB7IEVkaXRQZW5jaWwsIENoZWNrbWFyayB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vdXRpbHMuanNcIjtcbmV4cG9ydCBjb25zdCBNYXJrZG93bk92ZXJsYXlFZGl0b3IgPSBwID0+IHtcbiAgICBjb25zdCB7IHZhbHVlLCBvbkNoYW5nZSwgZm9yY2VFZGl0TW9kZSwgY3JlYXRlTm9kZSwgdGFyZ2V0UmVjdCwgb25GaW5pc2gsIHZhbGlkYXRlZFNlbGVjdGlvbiB9ID0gcDtcbiAgICBjb25zdCBtYXJrZG93biA9IHZhbHVlLmRhdGE7XG4gICAgY29uc3QgcmVhZG9ubHkgPSB2YWx1ZS5yZWFkb25seSA9PT0gdHJ1ZTtcbiAgICBjb25zdCBbZWRpdE1vZGUsIHNldEVkaXRNb2RlXSA9IFJlYWN0LnVzZVN0YXRlKG1hcmtkb3duID09PSBcIlwiIHx8IGZvcmNlRWRpdE1vZGUpO1xuICAgIGNvbnN0IG9uRWRpdENsaWNrID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzZXRFZGl0TW9kZShlID0+ICFlKTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgYWRkTGVmdFBhZCA9IG1hcmtkb3duID8gXCJnZGctbWwtNlwiIDogXCJcIjtcbiAgICBpZiAoZWRpdE1vZGUpIHtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE1hcmtkb3duT3ZlcmxheUVkaXRvclN0eWxlLCB7IHRhcmdldFdpZHRoOiB0YXJnZXRSZWN0LndpZHRoIC0gMjAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoR3Jvd2luZ0VudHJ5LCB7IGF1dG9Gb2N1czogdHJ1ZSwgaGlnaGxpZ2h0OiBmYWxzZSwgdmFsaWRhdGVkU2VsZWN0aW9uOiB2YWxpZGF0ZWRTZWxlY3Rpb24sIHZhbHVlOiBtYXJrZG93biwgb25LZXlEb3duOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIH0sIG9uQ2hhbmdlOiBvbkNoYW5nZSB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGBnZGctZWRpdC1pY29uIGdkZy1jaGVja21hcmstaG92ZXIgJHthZGRMZWZ0UGFkfWAsIG9uQ2xpY2s6ICgpID0+IG9uRmluaXNoKHZhbHVlKSB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2ttYXJrLCBudWxsKSkpKTtcbiAgICB9XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE1hcmtkb3duT3ZlcmxheUVkaXRvclN0eWxlLCB7IHRhcmdldFdpZHRoOiB0YXJnZXRSZWN0LndpZHRoIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWFya2Rvd25EaXYsIHsgY29udGVudHM6IG1hcmtkb3duLCBjcmVhdGVOb2RlOiBjcmVhdGVOb2RlIH0pLFxuICAgICAgICAhcmVhZG9ubHkgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNwYWNlclwiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogYGdkZy1lZGl0LWljb24gZ2RnLWVkaXQtaG92ZXIgJHthZGRMZWZ0UGFkfWAsIG9uQ2xpY2s6IG9uRWRpdENsaWNrIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFZGl0UGVuY2lsLCBudWxsKSkpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIsIHsgY2xhc3NOYW1lOiBcImdkZy1tZC1lZGl0LXRleHRhcmVhIGdkZy1pbnB1dFwiLCBhdXRvRm9jdXM6IHRydWUgfSkpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXJrZG93bi1vdmVybGF5LWVkaXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/markdown-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor-style.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor-style.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NumberOverlayEditorStyle: () => (/* binding */ NumberOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst NumberOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"NumberOverlayEditorStyle\",\n  class: \"gdg-n15fjm3e\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbnVtYmVyLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ2pDLDhDQUE4QyxzREFBTTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbnVtYmVyLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzPzA2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgTnVtYmVyT3ZlcmxheUVkaXRvclN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIk51bWJlck92ZXJsYXlFZGl0b3JTdHlsZVwiLFxuICBjbGFzczogXCJnZGctbjE1ZmptM2VcIixcbiAgcHJvcHNBc0lzOiBmYWxzZVxufSk7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _number_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor-style.js\");\n/* harmony import */ var react_number_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-number-format */ \"(ssr)/./node_modules/react-number-format/dist/react-number-format.es.js\");\n\n\n\nfunction getDecimalSeparator() {\n    const numberWithDecimalSeparator = 1.1;\n    const result = Intl.NumberFormat()\n        ?.formatToParts(numberWithDecimalSeparator)\n        ?.find(part => part.type === \"decimal\")?.value;\n    return result ?? \".\";\n}\nfunction getThousandSeprator() {\n    return getDecimalSeparator() === \".\" ? \",\" : \".\";\n}\nconst NumberOverlayEditor = p => {\n    const { value, onChange, disabled, highlight, validatedSelection, fixedDecimals, allowNegative, thousandSeparator, decimalSeparator, } = p;\n    const inputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (validatedSelection !== undefined) {\n            const range = typeof validatedSelection === \"number\" ? [validatedSelection, null] : validatedSelection;\n            inputRef.current?.setSelectionRange(range[0], range[1]);\n        }\n    }, [validatedSelection]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_number_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_1__.NumberOverlayEditorStyle, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_number_format__WEBPACK_IMPORTED_MODULE_2__.NumericFormat, { autoFocus: true, getInputRef: inputRef, className: \"gdg-input\", onFocus: (e) => e.target.setSelectionRange(highlight ? 0 : e.target.value.length, e.target.value.length), disabled: disabled === true, decimalScale: fixedDecimals, allowNegative: allowNegative, thousandSeparator: thousandSeparator ?? getThousandSeprator(), decimalSeparator: decimalSeparator ?? getDecimalSeparator(), value: Object.is(value, -0) ? \"-\" : value ?? \"\", \n            // decimalScale={3}\n            // prefix={\"$\"}\n            onValueChange: onChange })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NumberOverlayEditor);\n//# sourceMappingURL=number-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvbnVtYmVyLW92ZXJsYXktZWRpdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFDNkM7QUFDeEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0hBQStIO0FBQzNJLHFCQUFxQix5Q0FBWTtBQUNqQyxJQUFJLGtEQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZLGdEQUFtQixDQUFDLHFGQUF3QjtBQUN4RCxRQUFRLGdEQUFtQixDQUFDLDhEQUFhLElBQUk7QUFDN0MsNkJBQTZCO0FBQzdCLHVCQUF1QjtBQUN2QixxQ0FBcUM7QUFDckM7QUFDQSxpRUFBZSxtQkFBbUIsRUFBQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci9wcml2YXRlL251bWJlci1vdmVybGF5LWVkaXRvci5qcz80YmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTnVtYmVyT3ZlcmxheUVkaXRvclN0eWxlIH0gZnJvbSBcIi4vbnVtYmVyLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzXCI7XG5pbXBvcnQgeyBOdW1lcmljRm9ybWF0IH0gZnJvbSBcInJlYWN0LW51bWJlci1mb3JtYXRcIjtcbmZ1bmN0aW9uIGdldERlY2ltYWxTZXBhcmF0b3IoKSB7XG4gICAgY29uc3QgbnVtYmVyV2l0aERlY2ltYWxTZXBhcmF0b3IgPSAxLjE7XG4gICAgY29uc3QgcmVzdWx0ID0gSW50bC5OdW1iZXJGb3JtYXQoKVxuICAgICAgICA/LmZvcm1hdFRvUGFydHMobnVtYmVyV2l0aERlY2ltYWxTZXBhcmF0b3IpXG4gICAgICAgID8uZmluZChwYXJ0ID0+IHBhcnQudHlwZSA9PT0gXCJkZWNpbWFsXCIpPy52YWx1ZTtcbiAgICByZXR1cm4gcmVzdWx0ID8/IFwiLlwiO1xufVxuZnVuY3Rpb24gZ2V0VGhvdXNhbmRTZXByYXRvcigpIHtcbiAgICByZXR1cm4gZ2V0RGVjaW1hbFNlcGFyYXRvcigpID09PSBcIi5cIiA/IFwiLFwiIDogXCIuXCI7XG59XG5jb25zdCBOdW1iZXJPdmVybGF5RWRpdG9yID0gcCA9PiB7XG4gICAgY29uc3QgeyB2YWx1ZSwgb25DaGFuZ2UsIGRpc2FibGVkLCBoaWdobGlnaHQsIHZhbGlkYXRlZFNlbGVjdGlvbiwgZml4ZWREZWNpbWFscywgYWxsb3dOZWdhdGl2ZSwgdGhvdXNhbmRTZXBhcmF0b3IsIGRlY2ltYWxTZXBhcmF0b3IsIH0gPSBwO1xuICAgIGNvbnN0IGlucHV0UmVmID0gUmVhY3QudXNlUmVmKCk7XG4gICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHZhbGlkYXRlZFNlbGVjdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IHR5cGVvZiB2YWxpZGF0ZWRTZWxlY3Rpb24gPT09IFwibnVtYmVyXCIgPyBbdmFsaWRhdGVkU2VsZWN0aW9uLCBudWxsXSA6IHZhbGlkYXRlZFNlbGVjdGlvbjtcbiAgICAgICAgICAgIGlucHV0UmVmLmN1cnJlbnQ/LnNldFNlbGVjdGlvblJhbmdlKHJhbmdlWzBdLCByYW5nZVsxXSk7XG4gICAgICAgIH1cbiAgICB9LCBbdmFsaWRhdGVkU2VsZWN0aW9uXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE51bWJlck92ZXJsYXlFZGl0b3JTdHlsZSwgbnVsbCxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChOdW1lcmljRm9ybWF0LCB7IGF1dG9Gb2N1czogdHJ1ZSwgZ2V0SW5wdXRSZWY6IGlucHV0UmVmLCBjbGFzc05hbWU6IFwiZ2RnLWlucHV0XCIsIG9uRm9jdXM6IChlKSA9PiBlLnRhcmdldC5zZXRTZWxlY3Rpb25SYW5nZShoaWdobGlnaHQgPyAwIDogZS50YXJnZXQudmFsdWUubGVuZ3RoLCBlLnRhcmdldC52YWx1ZS5sZW5ndGgpLCBkaXNhYmxlZDogZGlzYWJsZWQgPT09IHRydWUsIGRlY2ltYWxTY2FsZTogZml4ZWREZWNpbWFscywgYWxsb3dOZWdhdGl2ZTogYWxsb3dOZWdhdGl2ZSwgdGhvdXNhbmRTZXBhcmF0b3I6IHRob3VzYW5kU2VwYXJhdG9yID8/IGdldFRob3VzYW5kU2VwcmF0b3IoKSwgZGVjaW1hbFNlcGFyYXRvcjogZGVjaW1hbFNlcGFyYXRvciA/PyBnZXREZWNpbWFsU2VwYXJhdG9yKCksIHZhbHVlOiBPYmplY3QuaXModmFsdWUsIC0wKSA/IFwiLVwiIDogdmFsdWUgPz8gXCJcIiwgXG4gICAgICAgICAgICAvLyBkZWNpbWFsU2NhbGU9ezN9XG4gICAgICAgICAgICAvLyBwcmVmaXg9e1wiJFwifVxuICAgICAgICAgICAgb25WYWx1ZUNoYW5nZTogb25DaGFuZ2UgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBOdW1iZXJPdmVybGF5RWRpdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bnVtYmVyLW92ZXJsYXktZWRpdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/number-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor-style.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor-style.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UriOverlayEditorStyle: () => (/* binding */ UriOverlayEditorStyle)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst UriOverlayEditorStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"UriOverlayEditorStyle\",\n  class: \"gdg-u1rrojo\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvdXJpLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ2pDLDJDQUEyQyxzREFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvdXJpLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzP2ZlZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgVXJpT3ZlcmxheUVkaXRvclN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIlVyaU92ZXJsYXlFZGl0b3JTdHlsZVwiLFxuICBjbGFzczogXCJnZGctdTFycm9qb1wiLFxuICBwcm9wc0FzSXM6IGZhbHNlXG59KTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../growing-entry/growing-entry.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js\");\n/* harmony import */ var _uri_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uri-overlay-editor-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor-style.js\");\n\n\n\n\nconst UriOverlayEditor = p => {\n    const { uri, onChange, forceEditMode, readonly, validatedSelection, preview } = p;\n    const [editMode, setEditMode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!readonly && (uri === \"\" || forceEditMode));\n    const onEditClick = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        setEditMode(true);\n    }, []);\n    if (editMode) {\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_growing_entry_growing_entry_js__WEBPACK_IMPORTED_MODULE_1__.GrowingEntry, { validatedSelection: validatedSelection, highlight: true, autoFocus: true, value: uri, onChange: onChange }));\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_uri_overlay_editor_style_js__WEBPACK_IMPORTED_MODULE_2__.UriOverlayEditorStyle, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", { className: \"gdg-link-area\", href: uri, target: \"_blank\", rel: \"noopener noreferrer\" }, preview),\n        !readonly && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-edit-icon\", onClick: onEditClick },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.EditPencil, null))),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"textarea\", { className: \"gdg-input\", autoFocus: true })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UriOverlayEditor);\n//# sourceMappingURL=uri-overlay-editor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvdXJpLW92ZXJsYXktZWRpdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNEO0FBQ3ZCO0FBQ3FDO0FBQ0U7QUFDdEU7QUFDQSxZQUFZLHNFQUFzRTtBQUNsRixvQ0FBb0MsMkNBQWM7QUFDbEQsd0JBQXdCLDhDQUFpQjtBQUN6QztBQUNBLEtBQUs7QUFDTDtBQUNBLGdCQUFnQixnREFBbUIsQ0FBQyx5RUFBWSxJQUFJLDBHQUEwRztBQUM5SjtBQUNBLFlBQVksZ0RBQW1CLENBQUMsK0VBQXFCO0FBQ3JELFFBQVEsZ0RBQW1CLFFBQVEscUZBQXFGO0FBQ3hILHNCQUFzQixnREFBbUIsVUFBVSxrREFBa0Q7QUFDckcsWUFBWSxnREFBbUIsQ0FBQyx3REFBVTtBQUMxQyxRQUFRLGdEQUFtQixlQUFlLHlDQUF5QztBQUNuRjtBQUNBLGlFQUFlLGdCQUFnQixFQUFDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3ByaXZhdGUvdXJpLW92ZXJsYXktZWRpdG9yLmpzP2I4ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWRpdFBlbmNpbCB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vdXRpbHMuanNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgR3Jvd2luZ0VudHJ5IH0gZnJvbSBcIi4uLy4uL2dyb3dpbmctZW50cnkvZ3Jvd2luZy1lbnRyeS5qc1wiO1xuaW1wb3J0IHsgVXJpT3ZlcmxheUVkaXRvclN0eWxlIH0gZnJvbSBcIi4vdXJpLW92ZXJsYXktZWRpdG9yLXN0eWxlLmpzXCI7XG5jb25zdCBVcmlPdmVybGF5RWRpdG9yID0gcCA9PiB7XG4gICAgY29uc3QgeyB1cmksIG9uQ2hhbmdlLCBmb3JjZUVkaXRNb2RlLCByZWFkb25seSwgdmFsaWRhdGVkU2VsZWN0aW9uLCBwcmV2aWV3IH0gPSBwO1xuICAgIGNvbnN0IFtlZGl0TW9kZSwgc2V0RWRpdE1vZGVdID0gUmVhY3QudXNlU3RhdGUoIXJlYWRvbmx5ICYmICh1cmkgPT09IFwiXCIgfHwgZm9yY2VFZGl0TW9kZSkpO1xuICAgIGNvbnN0IG9uRWRpdENsaWNrID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzZXRFZGl0TW9kZSh0cnVlKTtcbiAgICB9LCBbXSk7XG4gICAgaWYgKGVkaXRNb2RlKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChHcm93aW5nRW50cnksIHsgdmFsaWRhdGVkU2VsZWN0aW9uOiB2YWxpZGF0ZWRTZWxlY3Rpb24sIGhpZ2hsaWdodDogdHJ1ZSwgYXV0b0ZvY3VzOiB0cnVlLCB2YWx1ZTogdXJpLCBvbkNoYW5nZTogb25DaGFuZ2UgfSkpO1xuICAgIH1cbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoVXJpT3ZlcmxheUVkaXRvclN0eWxlLCBudWxsLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7IGNsYXNzTmFtZTogXCJnZGctbGluay1hcmVhXCIsIGhyZWY6IHVyaSwgdGFyZ2V0OiBcIl9ibGFua1wiLCByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiIH0sIHByZXZpZXcpLFxuICAgICAgICAhcmVhZG9ubHkgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZ2RnLWVkaXQtaWNvblwiLCBvbkNsaWNrOiBvbkVkaXRDbGljayB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFZGl0UGVuY2lsLCBudWxsKSkpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIiwgeyBjbGFzc05hbWU6IFwiZ2RnLWlucHV0XCIsIGF1dG9Gb2N1czogdHJ1ZSB9KSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFVyaU92ZXJsYXlFZGl0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmktb3ZlcmxheS1lZGl0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/private/uri-overlay-editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/use-stay-on-screen.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/use-stay-on-screen.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStayOnScreen: () => (/* binding */ useStayOnScreen)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction useRefState() {\n    const [refState, setRefState] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    return [refState ?? undefined, setRefState];\n}\nfunction useStayOnScreen() {\n    const [ref, setRef] = useRefState();\n    const [xOffset, setXOffset] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [isIntersecting, setIsIntersecting] = react__WEBPACK_IMPORTED_MODULE_0__.useState(true);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (ref === undefined)\n            return;\n        if (!(\"IntersectionObserver\" in window))\n            return;\n        const observer = new IntersectionObserver(ents => {\n            if (ents.length === 0)\n                return;\n            setIsIntersecting(ents[0].isIntersecting);\n        }, { threshold: 1 });\n        observer.observe(ref);\n        return () => observer.disconnect();\n    }, [ref]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (isIntersecting || ref === undefined)\n            return;\n        let rafHandle;\n        const fn = () => {\n            const { right: refRight } = ref.getBoundingClientRect();\n            setXOffset(cv => Math.min(cv + window.innerWidth - refRight - 10, 0));\n            rafHandle = requestAnimationFrame(fn);\n        };\n        rafHandle = requestAnimationFrame(fn);\n        return () => {\n            if (rafHandle !== undefined) {\n                cancelAnimationFrame(rafHandle);\n            }\n        };\n    }, [ref, isIntersecting]);\n    const style = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        return { transform: `translateX(${xOffset}px)` };\n    }, [xOffset]);\n    return {\n        ref: setRef,\n        style,\n    };\n}\n//# sourceMappingURL=use-stay-on-screen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLW92ZXJsYXktZWRpdG9yL3VzZS1zdGF5LW9uLXNjcmVlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUMvQjtBQUNBLG9DQUFvQywyQ0FBYztBQUNsRDtBQUNBO0FBQ087QUFDUDtBQUNBLGtDQUFrQywyQ0FBYztBQUNoRCxnREFBZ0QsMkNBQWM7QUFDOUQsSUFBSSxrREFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSSxjQUFjO0FBQzNCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSw0Q0FBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGtCQUFrQiwwQ0FBYTtBQUMvQixpQkFBaUIseUJBQXlCLFFBQVE7QUFDbEQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC1vdmVybGF5LWVkaXRvci91c2Utc3RheS1vbi1zY3JlZW4uanM/ZTkzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZVJlZlN0YXRlKCkge1xuICAgIGNvbnN0IFtyZWZTdGF0ZSwgc2V0UmVmU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoKTtcbiAgICByZXR1cm4gW3JlZlN0YXRlID8/IHVuZGVmaW5lZCwgc2V0UmVmU3RhdGVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0YXlPblNjcmVlbigpIHtcbiAgICBjb25zdCBbcmVmLCBzZXRSZWZdID0gdXNlUmVmU3RhdGUoKTtcbiAgICBjb25zdCBbeE9mZnNldCwgc2V0WE9mZnNldF0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbaXNJbnRlcnNlY3RpbmcsIHNldElzSW50ZXJzZWN0aW5nXSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuICAgIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChyZWYgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKCEoXCJJbnRlcnNlY3Rpb25PYnNlcnZlclwiIGluIHdpbmRvdykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGVudHMgPT4ge1xuICAgICAgICAgICAgaWYgKGVudHMubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHNldElzSW50ZXJzZWN0aW5nKGVudHNbMF0uaXNJbnRlcnNlY3RpbmcpO1xuICAgICAgICB9LCB7IHRocmVzaG9sZDogMSB9KTtcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShyZWYpO1xuICAgICAgICByZXR1cm4gKCkgPT4gb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH0sIFtyZWZdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoaXNJbnRlcnNlY3RpbmcgfHwgcmVmID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGxldCByYWZIYW5kbGU7XG4gICAgICAgIGNvbnN0IGZuID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyByaWdodDogcmVmUmlnaHQgfSA9IHJlZi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHNldFhPZmZzZXQoY3YgPT4gTWF0aC5taW4oY3YgKyB3aW5kb3cuaW5uZXJXaWR0aCAtIHJlZlJpZ2h0IC0gMTAsIDApKTtcbiAgICAgICAgICAgIHJhZkhhbmRsZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmbik7XG4gICAgICAgIH07XG4gICAgICAgIHJhZkhhbmRsZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmbik7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBpZiAocmFmSGFuZGxlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShyYWZIYW5kbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0sIFtyZWYsIGlzSW50ZXJzZWN0aW5nXSk7XG4gICAgY29uc3Qgc3R5bGUgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlWCgke3hPZmZzZXR9cHgpYCB9O1xuICAgIH0sIFt4T2Zmc2V0XSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVmOiBzZXRSZWYsXG4gICAgICAgIHN0eWxlLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2Utc3RheS1vbi1zY3JlZW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/use-stay-on-screen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search-style.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search-style.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchWrapper: () => (/* binding */ SearchWrapper)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst SearchWrapper = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"SearchWrapper\",\n  class: \"gdg-seveqep\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLXNlYXJjaC9kYXRhLWdyaWQtc2VhcmNoLXN0eWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ2pDLG1DQUFtQyxzREFBTTtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkLXNlYXJjaC9kYXRhLWdyaWQtc2VhcmNoLXN0eWxlLmpzP2FkNjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgU2VhcmNoV3JhcHBlciA9IC8qI19fUFVSRV9fKi9zdHlsZWQoJ2RpdicpKHtcbiAgbmFtZTogXCJTZWFyY2hXcmFwcGVyXCIsXG4gIGNsYXNzOiBcImdkZy1zZXZlcWVwXCIsXG4gIHByb3BzQXNJczogZmFsc2Vcbn0pO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data-grid/data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _scrolling_data_grid_scrolling_data_grid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scrolling-data-grid/scrolling-data-grid.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/scrolling-data-grid.js\");\n/* harmony import */ var _data_grid_search_style_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-grid-search-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search-style.js\");\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* eslint-disable unicorn/consistent-destructuring */\n\n\n\n\n\n// icons\nconst upArrow = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", { className: \"button-icon\", viewBox: \"0 0 512 512\" },\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: \"48\", d: \"M112 244l144-144 144 144M256 120v292\" })));\nconst downArrow = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", { className: \"button-icon\", viewBox: \"0 0 512 512\" },\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: \"48\", d: \"M112 268l144 144 144-144M256 392V100\" })));\nconst closeX = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", { className: \"button-icon\", viewBox: \"0 0 512 512\" },\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: \"32\", d: \"M368 368L144 144M368 144L144 368\" })));\nconst targetSearchTimeMS = 10;\nconst DataGridSearch = p => {\n    const { canvasRef, cellYOffset, rows, columns, searchInputRef, searchValue, searchResults: searchResultsIn, onSearchValueChange, getCellsForSelection, onSearchResultsChanged, showSearch = false, onSearchClose, } = p;\n    const [searchID] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => \"search-box-\" + Math.round(Math.random() * 1000));\n    const [searchStringInner, setSearchStringInner] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"\");\n    const searchString = searchValue ?? searchStringInner;\n    // always emit both, this allows the user to spy on the search value without controlling it.\n    const setSearchString = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newVal) => {\n        setSearchStringInner(newVal);\n        onSearchValueChange?.(newVal);\n    }, [onSearchValueChange]);\n    const [searchStatus, setSearchStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const searchStatusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(searchStatus);\n    searchStatusRef.current = searchStatus;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (searchResultsIn === undefined)\n            return;\n        if (searchResultsIn.length > 0) {\n            setSearchStatus(cv => ({\n                rowsSearched: rows,\n                results: searchResultsIn.length,\n                selectedIndex: cv?.selectedIndex ?? -1,\n            }));\n        }\n        else {\n            setSearchStatus(undefined);\n        }\n    }, [rows, searchResultsIn]);\n    const abortControllerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    if (abortControllerRef.current === undefined)\n        abortControllerRef.current = new AbortController();\n    const searchHandle = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [searchResultsInner, setSearchResultsInner] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    const searchResults = searchResultsIn ?? searchResultsInner;\n    const cancelSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (searchHandle.current !== undefined) {\n            window.cancelAnimationFrame(searchHandle.current);\n            searchHandle.current = undefined;\n            abortControllerRef.current.abort();\n        }\n    }, []);\n    const cellYOffsetRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(cellYOffset);\n    cellYOffsetRef.current = cellYOffset;\n    const beginSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((str) => {\n        const regex = new RegExp(str.replace(/([$()*+.?[\\\\\\]^{|}-])/g, \"\\\\$1\"), \"i\");\n        let startY = cellYOffsetRef.current;\n        // Lets assume we can do 10 rows at a time\n        // This is usually very safe and limits the damage for bad\n        // performing sheets.\n        let searchStride = Math.min(10, rows);\n        let rowsSearched = 0;\n        setSearchStatus(undefined);\n        setSearchResultsInner([]);\n        const runningResult = [];\n        const tick = async () => {\n            if (getCellsForSelection === undefined)\n                return;\n            const tStart = performance.now();\n            const rowsLeft = rows - rowsSearched;\n            let data = getCellsForSelection({\n                x: 0,\n                y: startY,\n                width: columns.length,\n                height: Math.min(searchStride, rowsLeft, rows - startY),\n            }, abortControllerRef.current.signal);\n            if (typeof data === \"function\") {\n                data = await data();\n            }\n            let added = false;\n            for (const [row, d] of data.entries()) {\n                for (const [col, cell] of d.entries()) {\n                    let testString;\n                    switch (cell.kind) {\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Text:\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Number:\n                            testString = cell.displayData;\n                            break;\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Uri:\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Markdown:\n                            testString = cell.data;\n                            break;\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Boolean:\n                            testString = typeof cell.data === \"boolean\" ? cell.data.toString() : undefined;\n                            break;\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Image:\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Bubble:\n                            // I know its lazy, but unless someone is actually\n                            // searching for the whale emoji, this is pretty side effect\n                            // free. And ya know... it's nice and easy to do...\n                            testString = cell.data.join(\"🐳\");\n                            break;\n                        case _data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.GridCellKind.Custom:\n                            testString = cell.copyData;\n                            break;\n                    }\n                    if (testString !== undefined && regex.test(testString)) {\n                        runningResult.push([col, row + startY]);\n                        added = true;\n                    }\n                }\n            }\n            const tEnd = performance.now();\n            if (added) {\n                setSearchResultsInner([...runningResult]);\n            }\n            rowsSearched += data.length;\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_2__.assert)(rowsSearched <= rows);\n            const selectedIndex = searchStatusRef.current?.selectedIndex ?? -1;\n            setSearchStatus({\n                results: runningResult.length,\n                rowsSearched,\n                selectedIndex,\n            });\n            onSearchResultsChanged?.(runningResult, selectedIndex);\n            if (startY + searchStride >= rows) {\n                startY = 0;\n            }\n            else {\n                startY += searchStride;\n            }\n            const tElapsed = tEnd - tStart;\n            const rounded = Math.max(tElapsed, 1);\n            const scalar = targetSearchTimeMS / rounded;\n            searchStride = Math.ceil(searchStride * scalar);\n            if (rowsSearched < rows && runningResult.length < 1000) {\n                searchHandle.current = window.requestAnimationFrame(tick);\n            }\n        };\n        cancelSearch();\n        searchHandle.current = window.requestAnimationFrame(tick);\n    }, [cancelSearch, columns.length, getCellsForSelection, onSearchResultsChanged, rows]);\n    const onClose = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        onSearchClose?.();\n        setSearchStatus(undefined);\n        setSearchResultsInner([]);\n        onSearchResultsChanged?.([], -1);\n        cancelSearch();\n        canvasRef?.current?.focus();\n    }, [cancelSearch, canvasRef, onSearchClose, onSearchResultsChanged]);\n    const onSearchChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        setSearchString(event.target.value);\n        if (searchResultsIn !== undefined)\n            return;\n        if (event.target.value === \"\") {\n            setSearchStatus(undefined);\n            setSearchResultsInner([]);\n            cancelSearch();\n        }\n        else {\n            beginSearch(event.target.value);\n        }\n    }, [beginSearch, cancelSearch, setSearchString, searchResultsIn]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (showSearch && searchInputRef.current !== null) {\n            setSearchString(\"\");\n            searchInputRef.current.focus({ preventScroll: true });\n        }\n    }, [showSearch, searchInputRef, setSearchString]);\n    const onNext = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        ev?.stopPropagation?.();\n        if (searchStatus === undefined)\n            return;\n        const newIndex = (searchStatus.selectedIndex + 1) % searchStatus.results;\n        setSearchStatus({\n            ...searchStatus,\n            selectedIndex: newIndex,\n        });\n        onSearchResultsChanged?.(searchResults, newIndex);\n    }, [searchStatus, onSearchResultsChanged, searchResults]);\n    const onPrev = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        ev?.stopPropagation?.();\n        if (searchStatus === undefined)\n            return;\n        let newIndex = (searchStatus.selectedIndex - 1) % searchStatus.results;\n        if (newIndex < 0)\n            newIndex += searchStatus.results;\n        setSearchStatus({\n            ...searchStatus,\n            selectedIndex: newIndex,\n        });\n        onSearchResultsChanged?.(searchResults, newIndex);\n    }, [onSearchResultsChanged, searchResults, searchStatus]);\n    const onSearchKeyDown = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        if (((event.ctrlKey || event.metaKey) && event.nativeEvent.code === \"KeyF\") || event.key === \"Escape\") {\n            onClose();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        else if (event.key === \"Enter\") {\n            if (event.shiftKey) {\n                onPrev();\n            }\n            else {\n                onNext();\n            }\n        }\n    }, [onClose, onNext, onPrev]);\n    // cancel search if the component is unmounted\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        return () => {\n            cancelSearch();\n        };\n    }, [cancelSearch]);\n    const [isAnimatingOut, setIsAnimatingOut] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (showSearch) {\n            setIsAnimatingOut(true);\n        }\n        else {\n            const timeoutId = setTimeout(() => setIsAnimatingOut(false), 150);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [showSearch]);\n    const searchbox = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (!showSearch && !isAnimatingOut) {\n            return null;\n        }\n        let resultString;\n        if (searchStatus !== undefined) {\n            resultString =\n                searchStatus.results >= 1000\n                    ? `over 1000`\n                    : `${searchStatus.results} result${searchStatus.results !== 1 ? \"s\" : \"\"}`;\n            if (searchStatus.selectedIndex >= 0) {\n                resultString = `${searchStatus.selectedIndex + 1} of ${resultString}`;\n            }\n        }\n        const cancelEvent = (ev) => {\n            ev.stopPropagation();\n        };\n        const rowsSearchedProgress = Math.floor(((searchStatus?.rowsSearched ?? 0) / rows) * 100);\n        const progressStyle = {\n            width: `${rowsSearchedProgress}%`,\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_data_grid_search_style_js__WEBPACK_IMPORTED_MODULE_3__.SearchWrapper, { className: showSearch ? \"\" : \"out\", onMouseDown: cancelEvent, onMouseMove: cancelEvent, onMouseUp: cancelEvent, onClick: cancelEvent },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-search-bar-inner\" },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", { id: searchID, \"aria-hidden\": !showSearch, \"data-testid\": \"search-input\", ref: searchInputRef, onChange: onSearchChange, value: searchString, tabIndex: showSearch ? undefined : -1, onKeyDownCapture: onSearchKeyDown }),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { \"aria-label\": \"Previous Result\", \"aria-hidden\": !showSearch, tabIndex: showSearch ? undefined : -1, onClick: onPrev, disabled: (searchStatus?.results ?? 0) === 0 }, upArrow),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { \"aria-label\": \"Next Result\", \"aria-hidden\": !showSearch, tabIndex: showSearch ? undefined : -1, onClick: onNext, disabled: (searchStatus?.results ?? 0) === 0 }, downArrow),\n                onSearchClose !== undefined && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { \"aria-label\": \"Close Search\", \"aria-hidden\": !showSearch, \"data-testid\": \"search-close-button\", tabIndex: showSearch ? undefined : -1, onClick: onClose }, closeX))),\n            searchStatus !== undefined ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-search-status\" },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { \"data-testid\": \"search-result-area\" }, resultString)),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-search-progress\", style: progressStyle }))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"gdg-search-status\" },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"label\", { htmlFor: searchID }, \"Type to search\")))));\n    }, [\n        showSearch,\n        isAnimatingOut,\n        searchStatus,\n        rows,\n        searchID,\n        searchInputRef,\n        onSearchChange,\n        searchString,\n        onSearchKeyDown,\n        onPrev,\n        onNext,\n        onSearchClose,\n        onClose,\n    ]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_scrolling_data_grid_scrolling_data_grid_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { prelightCells: searchResults, accessibilityHeight: p.accessibilityHeight, canvasRef: p.canvasRef, cellXOffset: p.cellXOffset, cellYOffset: p.cellYOffset, className: p.className, clientSize: p.clientSize, columns: p.columns, disabledRows: p.disabledRows, enableGroups: p.enableGroups, fillHandle: p.fillHandle, firstColAccessible: p.firstColAccessible, nonGrowWidth: p.nonGrowWidth, fixedShadowX: p.fixedShadowX, fixedShadowY: p.fixedShadowY, freezeColumns: p.freezeColumns, getCellContent: p.getCellContent, getCellRenderer: p.getCellRenderer, getGroupDetails: p.getGroupDetails, getRowThemeOverride: p.getRowThemeOverride, groupHeaderHeight: p.groupHeaderHeight, headerHeight: p.headerHeight, highlightRegions: p.highlightRegions, imageWindowLoader: p.imageWindowLoader, initialSize: p.initialSize, isFilling: p.isFilling, isFocused: p.isFocused, lockColumns: p.lockColumns, maxColumnWidth: p.maxColumnWidth, minColumnWidth: p.minColumnWidth, onHeaderMenuClick: p.onHeaderMenuClick, onMouseMove: p.onMouseMove, onVisibleRegionChanged: p.onVisibleRegionChanged, overscrollX: p.overscrollX, overscrollY: p.overscrollY, preventDiagonalScrolling: p.preventDiagonalScrolling, rightElement: p.rightElement, rightElementProps: p.rightElementProps, rowHeight: p.rowHeight, rows: p.rows, scrollRef: p.scrollRef, selection: p.selection, theme: p.theme, freezeTrailingRows: p.freezeTrailingRows, hasAppendRow: p.hasAppendRow, translateX: p.translateX, translateY: p.translateY, verticalBorder: p.verticalBorder, onColumnProposeMove: p.onColumnProposeMove, drawFocusRing: p.drawFocusRing, drawCell: p.drawCell, drawHeader: p.drawHeader, experimental: p.experimental, gridRef: p.gridRef, headerIcons: p.headerIcons, isDraggable: p.isDraggable, onCanvasBlur: p.onCanvasBlur, onCanvasFocused: p.onCanvasFocused, onCellFocused: p.onCellFocused, onColumnMoved: p.onColumnMoved, onColumnResize: p.onColumnResize, onColumnResizeEnd: p.onColumnResizeEnd, onColumnResizeStart: p.onColumnResizeStart, onContextMenu: p.onContextMenu, onDragEnd: p.onDragEnd, onDragLeave: p.onDragLeave, onDragOverCell: p.onDragOverCell, onDragStart: p.onDragStart, onDrop: p.onDrop, onItemHovered: p.onItemHovered, onKeyDown: p.onKeyDown, onKeyUp: p.onKeyUp, onMouseDown: p.onMouseDown, onMouseUp: p.onMouseUp, onRowMoved: p.onRowMoved, smoothScrollX: p.smoothScrollX, smoothScrollY: p.smoothScrollY }),\n        searchbox));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataGridSearch);\n//# sourceMappingURL=data-grid-search.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-search/data-grid-search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/animation-manager.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/animation-manager.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnimationManager: () => (/* binding */ AnimationManager)\n/* harmony export */ });\n/* harmony import */ var lodash_clamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/clamp.js */ \"(ssr)/./node_modules/lodash/clamp.js\");\n/* harmony import */ var _render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n\n\nconst hoverTime = 80;\nfunction easeOutCubic(x) {\n    const x1 = x - 1;\n    return x1 * x1 * x1 + 1;\n}\nclass AnimationManager {\n    callback;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    currentHoveredItem = undefined;\n    leavingItems = [];\n    lastAnimationTime;\n    addToLeavingItems = (item) => {\n        const isAlreadyLeaving = this.leavingItems.some(i => (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.itemsAreEqual)(i.item, item.item));\n        if (isAlreadyLeaving) {\n            return;\n        }\n        this.leavingItems.push(item);\n    };\n    /**\n     * @returns the hover amount of the item, if it was leaving (0 if not).\n     */\n    removeFromLeavingItems = (item) => {\n        const leavingItem = this.leavingItems.find(e => (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.itemsAreEqual)(e.item, item));\n        this.leavingItems = this.leavingItems.filter(i => i !== leavingItem);\n        return leavingItem?.hoverAmount ?? 0;\n    };\n    cleanUpLeavingElements = () => {\n        this.leavingItems = this.leavingItems.filter(i => i.hoverAmount > 0);\n    };\n    shouldStep = () => {\n        const hasLeavingItems = this.leavingItems.length > 0;\n        const currentHoveredIsAnimating = this.currentHoveredItem !== undefined && this.currentHoveredItem.hoverAmount < 1;\n        return hasLeavingItems || currentHoveredIsAnimating;\n    };\n    getAnimatingItems = () => {\n        // this is horrible. We shoudl be mutating the array in place. The reason we don't right now is because the\n        // hoveramount is used as both the tweened value and the raw value. We should separate these two things.\n        // Then we can stop doing the allocation insanity dance.\n        if (this.currentHoveredItem !== undefined) {\n            return [...this.leavingItems, this.currentHoveredItem];\n        }\n        return this.leavingItems.map(x => ({ ...x, hoverAmount: easeOutCubic(x.hoverAmount) }));\n    };\n    step = (timestamp) => {\n        if (this.lastAnimationTime === undefined) {\n            this.lastAnimationTime = timestamp;\n        }\n        else {\n            const step = timestamp - this.lastAnimationTime;\n            const delta = step / hoverTime;\n            for (const item of this.leavingItems) {\n                item.hoverAmount = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_0__(item.hoverAmount - delta, 0, 1);\n            }\n            if (this.currentHoveredItem !== undefined) {\n                this.currentHoveredItem.hoverAmount = lodash_clamp_js__WEBPACK_IMPORTED_MODULE_0__(this.currentHoveredItem.hoverAmount + delta, 0, 1);\n            }\n            const animating = this.getAnimatingItems();\n            this.callback(animating);\n            this.cleanUpLeavingElements();\n        }\n        if (this.shouldStep()) {\n            this.lastAnimationTime = timestamp;\n            window.requestAnimationFrame(this.step);\n        }\n        else {\n            this.lastAnimationTime = undefined;\n        }\n    };\n    setHovered = (item) => {\n        if ((0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.itemsAreEqual)(this.currentHoveredItem?.item, item)) {\n            return;\n        }\n        if (this.currentHoveredItem !== undefined) {\n            this.addToLeavingItems(this.currentHoveredItem);\n        }\n        if (item !== undefined) {\n            const hoverAmount = this.removeFromLeavingItems(item);\n            this.currentHoveredItem = {\n                item,\n                hoverAmount,\n            };\n        }\n        else {\n            this.currentHoveredItem = undefined;\n        }\n        if (this.lastAnimationTime === undefined) {\n            window.requestAnimationFrame(this.step);\n        }\n    };\n}\n//# sourceMappingURL=animation-manager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2FuaW1hdGlvbi1tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUNzQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELHVFQUFhO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCx1RUFBYTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsZ0RBQWdEO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0Q0FBSztBQUN4QztBQUNBO0FBQ0Esc0RBQXNELDRDQUFLO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVFQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC9hbmltYXRpb24tbWFuYWdlci5qcz9mZjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFtcCBmcm9tIFwibG9kYXNoL2NsYW1wLmpzXCI7XG5pbXBvcnQgeyBpdGVtc0FyZUVxdWFsIH0gZnJvbSBcIi4vcmVuZGVyL2RhdGEtZ3JpZC1saWIuanNcIjtcbmNvbnN0IGhvdmVyVGltZSA9IDgwO1xuZnVuY3Rpb24gZWFzZU91dEN1YmljKHgpIHtcbiAgICBjb25zdCB4MSA9IHggLSAxO1xuICAgIHJldHVybiB4MSAqIHgxICogeDEgKyAxO1xufVxuZXhwb3J0IGNsYXNzIEFuaW1hdGlvbk1hbmFnZXIge1xuICAgIGNhbGxiYWNrO1xuICAgIGNvbnN0cnVjdG9yKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG4gICAgY3VycmVudEhvdmVyZWRJdGVtID0gdW5kZWZpbmVkO1xuICAgIGxlYXZpbmdJdGVtcyA9IFtdO1xuICAgIGxhc3RBbmltYXRpb25UaW1lO1xuICAgIGFkZFRvTGVhdmluZ0l0ZW1zID0gKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgaXNBbHJlYWR5TGVhdmluZyA9IHRoaXMubGVhdmluZ0l0ZW1zLnNvbWUoaSA9PiBpdGVtc0FyZUVxdWFsKGkuaXRlbSwgaXRlbS5pdGVtKSk7XG4gICAgICAgIGlmIChpc0FscmVhZHlMZWF2aW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sZWF2aW5nSXRlbXMucHVzaChpdGVtKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHRoZSBob3ZlciBhbW91bnQgb2YgdGhlIGl0ZW0sIGlmIGl0IHdhcyBsZWF2aW5nICgwIGlmIG5vdCkuXG4gICAgICovXG4gICAgcmVtb3ZlRnJvbUxlYXZpbmdJdGVtcyA9IChpdGVtKSA9PiB7XG4gICAgICAgIGNvbnN0IGxlYXZpbmdJdGVtID0gdGhpcy5sZWF2aW5nSXRlbXMuZmluZChlID0+IGl0ZW1zQXJlRXF1YWwoZS5pdGVtLCBpdGVtKSk7XG4gICAgICAgIHRoaXMubGVhdmluZ0l0ZW1zID0gdGhpcy5sZWF2aW5nSXRlbXMuZmlsdGVyKGkgPT4gaSAhPT0gbGVhdmluZ0l0ZW0pO1xuICAgICAgICByZXR1cm4gbGVhdmluZ0l0ZW0/LmhvdmVyQW1vdW50ID8/IDA7XG4gICAgfTtcbiAgICBjbGVhblVwTGVhdmluZ0VsZW1lbnRzID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmxlYXZpbmdJdGVtcyA9IHRoaXMubGVhdmluZ0l0ZW1zLmZpbHRlcihpID0+IGkuaG92ZXJBbW91bnQgPiAwKTtcbiAgICB9O1xuICAgIHNob3VsZFN0ZXAgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhc0xlYXZpbmdJdGVtcyA9IHRoaXMubGVhdmluZ0l0ZW1zLmxlbmd0aCA+IDA7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRIb3ZlcmVkSXNBbmltYXRpbmcgPSB0aGlzLmN1cnJlbnRIb3ZlcmVkSXRlbSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuY3VycmVudEhvdmVyZWRJdGVtLmhvdmVyQW1vdW50IDwgMTtcbiAgICAgICAgcmV0dXJuIGhhc0xlYXZpbmdJdGVtcyB8fCBjdXJyZW50SG92ZXJlZElzQW5pbWF0aW5nO1xuICAgIH07XG4gICAgZ2V0QW5pbWF0aW5nSXRlbXMgPSAoKSA9PiB7XG4gICAgICAgIC8vIHRoaXMgaXMgaG9ycmlibGUuIFdlIHNob3VkbCBiZSBtdXRhdGluZyB0aGUgYXJyYXkgaW4gcGxhY2UuIFRoZSByZWFzb24gd2UgZG9uJ3QgcmlnaHQgbm93IGlzIGJlY2F1c2UgdGhlXG4gICAgICAgIC8vIGhvdmVyYW1vdW50IGlzIHVzZWQgYXMgYm90aCB0aGUgdHdlZW5lZCB2YWx1ZSBhbmQgdGhlIHJhdyB2YWx1ZS4gV2Ugc2hvdWxkIHNlcGFyYXRlIHRoZXNlIHR3byB0aGluZ3MuXG4gICAgICAgIC8vIFRoZW4gd2UgY2FuIHN0b3AgZG9pbmcgdGhlIGFsbG9jYXRpb24gaW5zYW5pdHkgZGFuY2UuXG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRIb3ZlcmVkSXRlbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gWy4uLnRoaXMubGVhdmluZ0l0ZW1zLCB0aGlzLmN1cnJlbnRIb3ZlcmVkSXRlbV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubGVhdmluZ0l0ZW1zLm1hcCh4ID0+ICh7IC4uLngsIGhvdmVyQW1vdW50OiBlYXNlT3V0Q3ViaWMoeC5ob3ZlckFtb3VudCkgfSkpO1xuICAgIH07XG4gICAgc3RlcCA9ICh0aW1lc3RhbXApID0+IHtcbiAgICAgICAgaWYgKHRoaXMubGFzdEFuaW1hdGlvblRpbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0QW5pbWF0aW9uVGltZSA9IHRpbWVzdGFtcDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHN0ZXAgPSB0aW1lc3RhbXAgLSB0aGlzLmxhc3RBbmltYXRpb25UaW1lO1xuICAgICAgICAgICAgY29uc3QgZGVsdGEgPSBzdGVwIC8gaG92ZXJUaW1lO1xuICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHRoaXMubGVhdmluZ0l0ZW1zKSB7XG4gICAgICAgICAgICAgICAgaXRlbS5ob3ZlckFtb3VudCA9IGNsYW1wKGl0ZW0uaG92ZXJBbW91bnQgLSBkZWx0YSwgMCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50SG92ZXJlZEl0ZW0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEhvdmVyZWRJdGVtLmhvdmVyQW1vdW50ID0gY2xhbXAodGhpcy5jdXJyZW50SG92ZXJlZEl0ZW0uaG92ZXJBbW91bnQgKyBkZWx0YSwgMCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhbmltYXRpbmcgPSB0aGlzLmdldEFuaW1hdGluZ0l0ZW1zKCk7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGFuaW1hdGluZyk7XG4gICAgICAgICAgICB0aGlzLmNsZWFuVXBMZWF2aW5nRWxlbWVudHMoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zaG91bGRTdGVwKCkpIHtcbiAgICAgICAgICAgIHRoaXMubGFzdEFuaW1hdGlvblRpbWUgPSB0aW1lc3RhbXA7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuc3RlcCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxhc3RBbmltYXRpb25UaW1lID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBzZXRIb3ZlcmVkID0gKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGl0ZW1zQXJlRXF1YWwodGhpcy5jdXJyZW50SG92ZXJlZEl0ZW0/Lml0ZW0sIGl0ZW0pKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY3VycmVudEhvdmVyZWRJdGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYWRkVG9MZWF2aW5nSXRlbXModGhpcy5jdXJyZW50SG92ZXJlZEl0ZW0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGhvdmVyQW1vdW50ID0gdGhpcy5yZW1vdmVGcm9tTGVhdmluZ0l0ZW1zKGl0ZW0pO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50SG92ZXJlZEl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgaXRlbSxcbiAgICAgICAgICAgICAgICBob3ZlckFtb3VudCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRIb3ZlcmVkSXRlbSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0QW5pbWF0aW9uVGltZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuc3RlcCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW5pbWF0aW9uLW1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/animation-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellSet: () => (/* binding */ CellSet)\n/* harmony export */ });\n/* harmony import */ var _common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/render-state-provider.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js\");\n\nclass CellSet {\n    cells;\n    constructor(items = []) {\n        this.cells = new Set(items.map(x => (0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.packColRowToNumber)(x[0], x[1])));\n    }\n    add(cell) {\n        this.cells.add((0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.packColRowToNumber)(cell[0], cell[1]));\n    }\n    has(cell) {\n        if (cell === undefined)\n            return false;\n        return this.cells.has((0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.packColRowToNumber)(cell[0], cell[1]));\n    }\n    remove(cell) {\n        this.cells.delete((0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.packColRowToNumber)(cell[0], cell[1]));\n    }\n    clear() {\n        this.cells.clear();\n    }\n    get size() {\n        return this.cells.size;\n    }\n    hasHeader() {\n        for (const cellNumber of this.cells) {\n            const row = (0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.unpackRow)(cellNumber);\n            if (row < 0)\n                return true;\n        }\n        return false;\n    }\n    hasItemInRectangle(rect) {\n        for (let row = rect.y; row < rect.y + rect.height; row++) {\n            for (let col = rect.x; col < rect.x + rect.width; col++) {\n                if (this.cells.has((0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.packColRowToNumber)(col, row))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    hasItemInRegion(rect) {\n        for (const r of rect) {\n            if (this.hasItemInRectangle(r)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    *values() {\n        for (const cellNumber of this.cells) {\n            yield (0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_0__.unpackNumberToColRow)(cellNumber);\n        }\n    }\n}\n//# sourceMappingURL=cell-set.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2NlbGwtc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRHO0FBQ3JHO0FBQ1A7QUFDQTtBQUNBLDRDQUE0QyxvRkFBa0I7QUFDOUQ7QUFDQTtBQUNBLHVCQUF1QixvRkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0ZBQWtCO0FBQ2hEO0FBQ0E7QUFDQSwwQkFBMEIsb0ZBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNEJBQTRCO0FBQzNELG1DQUFtQywyQkFBMkI7QUFDOUQsbUNBQW1DLG9GQUFrQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzRkFBb0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQvY2VsbC1zZXQuanM/YTk1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYWNrQ29sUm93VG9OdW1iZXIsIHVucGFja051bWJlclRvQ29sUm93LCB1bnBhY2tSb3cgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3JlbmRlci1zdGF0ZS1wcm92aWRlci5qc1wiO1xuZXhwb3J0IGNsYXNzIENlbGxTZXQge1xuICAgIGNlbGxzO1xuICAgIGNvbnN0cnVjdG9yKGl0ZW1zID0gW10pIHtcbiAgICAgICAgdGhpcy5jZWxscyA9IG5ldyBTZXQoaXRlbXMubWFwKHggPT4gcGFja0NvbFJvd1RvTnVtYmVyKHhbMF0sIHhbMV0pKSk7XG4gICAgfVxuICAgIGFkZChjZWxsKSB7XG4gICAgICAgIHRoaXMuY2VsbHMuYWRkKHBhY2tDb2xSb3dUb051bWJlcihjZWxsWzBdLCBjZWxsWzFdKSk7XG4gICAgfVxuICAgIGhhcyhjZWxsKSB7XG4gICAgICAgIGlmIChjZWxsID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiB0aGlzLmNlbGxzLmhhcyhwYWNrQ29sUm93VG9OdW1iZXIoY2VsbFswXSwgY2VsbFsxXSkpO1xuICAgIH1cbiAgICByZW1vdmUoY2VsbCkge1xuICAgICAgICB0aGlzLmNlbGxzLmRlbGV0ZShwYWNrQ29sUm93VG9OdW1iZXIoY2VsbFswXSwgY2VsbFsxXSkpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5jZWxscy5jbGVhcigpO1xuICAgIH1cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2VsbHMuc2l6ZTtcbiAgICB9XG4gICAgaGFzSGVhZGVyKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNlbGxOdW1iZXIgb2YgdGhpcy5jZWxscykge1xuICAgICAgICAgICAgY29uc3Qgcm93ID0gdW5wYWNrUm93KGNlbGxOdW1iZXIpO1xuICAgICAgICAgICAgaWYgKHJvdyA8IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBoYXNJdGVtSW5SZWN0YW5nbGUocmVjdCkge1xuICAgICAgICBmb3IgKGxldCByb3cgPSByZWN0Lnk7IHJvdyA8IHJlY3QueSArIHJlY3QuaGVpZ2h0OyByb3crKykge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sID0gcmVjdC54OyBjb2wgPCByZWN0LnggKyByZWN0LndpZHRoOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNlbGxzLmhhcyhwYWNrQ29sUm93VG9OdW1iZXIoY29sLCByb3cpKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBoYXNJdGVtSW5SZWdpb24ocmVjdCkge1xuICAgICAgICBmb3IgKGNvbnN0IHIgb2YgcmVjdCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaGFzSXRlbUluUmVjdGFuZ2xlKHIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNlbGxOdW1iZXIgb2YgdGhpcy5jZWxscykge1xuICAgICAgICAgICAgeWllbGQgdW5wYWNrTnVtYmVyVG9Db2xSb3coY2VsbE51bWJlcik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jZWxsLXNldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blend: () => (/* binding */ blend),\n/* harmony export */   blendCache: () => (/* binding */ blendCache),\n/* harmony export */   getLuminance: () => (/* binding */ getLuminance),\n/* harmony export */   interpolateColors: () => (/* binding */ interpolateColors),\n/* harmony export */   parseToRgba: () => (/* binding */ parseToRgba),\n/* harmony export */   withAlpha: () => (/* binding */ withAlpha)\n/* harmony export */ });\n// Shamelessly stolen from https://github.com/ricokahler/color2k\n// We don't need all the color functions but we deeply appreciate their work.\nconst cache = {};\nlet div = null;\nfunction createDiv() {\n    const d = document.createElement(\"div\");\n    d.style.opacity = \"0\";\n    d.style.pointerEvents = \"none\";\n    d.style.position = \"fixed\";\n    // div must be mounted for `getComputedStyle` to work\n    document.body.append(d);\n    return d;\n}\n/** @category Drawing */\nfunction parseToRgba(color) {\n    // normalize the color\n    const normalizedColor = color.toLowerCase().trim();\n    if (cache[normalizedColor] !== undefined)\n        return cache[normalizedColor];\n    div = div || createDiv();\n    div.style.color = \"#000\";\n    div.style.color = normalizedColor;\n    const control = getComputedStyle(div).color;\n    div.style.color = \"#fff\";\n    div.style.color = normalizedColor;\n    const computedColor = getComputedStyle(div).color;\n    if (computedColor !== control)\n        return [0, 0, 0, 1];\n    let result = computedColor\n        // eslint-disable-next-line unicorn/better-regex\n        .replace(/[^\\d.,]/g, \"\")\n        .split(\",\")\n        .map(Number.parseFloat);\n    if (result.length < 4) {\n        result.push(1);\n    }\n    result = result.map(x => {\n        const isNaN = Number.isNaN(x);\n        if ( true && isNaN) {\n            // eslint-disable-next-line no-console\n            console.warn(\"Could not parse color\", color);\n        }\n        return isNaN ? 0 : x;\n    });\n    cache[normalizedColor] = result;\n    return result;\n}\n/** @category Drawing */\nfunction withAlpha(color, alpha) {\n    const [r, g, b] = parseToRgba(color);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\nconst blendResultCache = new Map();\nfunction blendCache(color, background) {\n    const cacheKey = `${color}-${background}`;\n    const maybe = blendResultCache.get(cacheKey);\n    if (maybe !== undefined)\n        return maybe;\n    const result = blend(color, background);\n    blendResultCache.set(cacheKey, result);\n    return result;\n}\n/** @category Drawing */\nfunction blend(color, background) {\n    if (background === undefined)\n        return color;\n    const [r, g, b, a] = parseToRgba(color);\n    if (a === 1)\n        return color;\n    const [br, bg, bb, ba] = parseToRgba(background);\n    const ao = a + ba * (1 - a);\n    // (xaA + xaB·(1−aA))/aR\n    const ro = (a * r + ba * br * (1 - a)) / ao;\n    const go = (a * g + ba * bg * (1 - a)) / ao;\n    const bo = (a * b + ba * bb * (1 - a)) / ao;\n    return `rgba(${ro}, ${go}, ${bo}, ${ao})`;\n}\n/** @category Drawing */\nfunction interpolateColors(leftColor, rightColor, val) {\n    // toot toot im a GPU\n    if (val <= 0)\n        return leftColor;\n    if (val >= 1)\n        return rightColor;\n    // Parse to rgba returns straight alpha colors, for interpolation we want pre-multiplied alpha\n    // FIXME: This can be faster if instead of makign an array we just use variables. No memory allocation.\n    const left = [...parseToRgba(leftColor)];\n    left[0] = left[0] * left[3];\n    left[1] = left[1] * left[3];\n    left[2] = left[2] * left[3];\n    const right = [...parseToRgba(rightColor)];\n    right[0] = right[0] * right[3];\n    right[1] = right[1] * right[3];\n    right[2] = right[2] * right[3];\n    const hScaler = val;\n    const nScaler = 1 - val;\n    const a = left[3] * nScaler + right[3] * hScaler;\n    // now we need to divide the alpha back out to get linear alpha back for the final result\n    const r = Math.floor((left[0] * nScaler + right[0] * hScaler) / a);\n    const g = Math.floor((left[1] * nScaler + right[1] * hScaler) / a);\n    const b = Math.floor((left[2] * nScaler + right[2] * hScaler) / a);\n    return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n/**\n * Returns a number (float) representing the luminance of a color.\n *\n * @category Drawing\n */\nfunction getLuminance(color) {\n    if (color === \"transparent\")\n        return 0;\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    function f(x) {\n        const channel = x / 255;\n        return channel <= 0.04045 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n    }\n    const [r, g, b] = parseToRgba(color);\n    return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n//# sourceMappingURL=color-parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2NvbG9yLXBhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFxQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksTUFBTTtBQUMzQztBQUNBO0FBQ087QUFDUCx3QkFBd0IsTUFBTSxHQUFHLFdBQVc7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixHQUFHLElBQUksR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHO0FBQzNDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2NvbG9yLXBhcnNlci5qcz8zM2U1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNoYW1lbGVzc2x5IHN0b2xlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9yaWNva2FobGVyL2NvbG9yMmtcbi8vIFdlIGRvbid0IG5lZWQgYWxsIHRoZSBjb2xvciBmdW5jdGlvbnMgYnV0IHdlIGRlZXBseSBhcHByZWNpYXRlIHRoZWlyIHdvcmsuXG5jb25zdCBjYWNoZSA9IHt9O1xubGV0IGRpdiA9IG51bGw7XG5mdW5jdGlvbiBjcmVhdGVEaXYoKSB7XG4gICAgY29uc3QgZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZC5zdHlsZS5vcGFjaXR5ID0gXCIwXCI7XG4gICAgZC5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gICAgZC5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgICAvLyBkaXYgbXVzdCBiZSBtb3VudGVkIGZvciBgZ2V0Q29tcHV0ZWRTdHlsZWAgdG8gd29ya1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKGQpO1xuICAgIHJldHVybiBkO1xufVxuLyoqIEBjYXRlZ29yeSBEcmF3aW5nICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUb1JnYmEoY29sb3IpIHtcbiAgICAvLyBub3JtYWxpemUgdGhlIGNvbG9yXG4gICAgY29uc3Qgbm9ybWFsaXplZENvbG9yID0gY29sb3IudG9Mb3dlckNhc2UoKS50cmltKCk7XG4gICAgaWYgKGNhY2hlW25vcm1hbGl6ZWRDb2xvcl0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGNhY2hlW25vcm1hbGl6ZWRDb2xvcl07XG4gICAgZGl2ID0gZGl2IHx8IGNyZWF0ZURpdigpO1xuICAgIGRpdi5zdHlsZS5jb2xvciA9IFwiIzAwMFwiO1xuICAgIGRpdi5zdHlsZS5jb2xvciA9IG5vcm1hbGl6ZWRDb2xvcjtcbiAgICBjb25zdCBjb250cm9sID0gZ2V0Q29tcHV0ZWRTdHlsZShkaXYpLmNvbG9yO1xuICAgIGRpdi5zdHlsZS5jb2xvciA9IFwiI2ZmZlwiO1xuICAgIGRpdi5zdHlsZS5jb2xvciA9IG5vcm1hbGl6ZWRDb2xvcjtcbiAgICBjb25zdCBjb21wdXRlZENvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZShkaXYpLmNvbG9yO1xuICAgIGlmIChjb21wdXRlZENvbG9yICE9PSBjb250cm9sKVxuICAgICAgICByZXR1cm4gWzAsIDAsIDAsIDFdO1xuICAgIGxldCByZXN1bHQgPSBjb21wdXRlZENvbG9yXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL2JldHRlci1yZWdleFxuICAgICAgICAucmVwbGFjZSgvW15cXGQuLF0vZywgXCJcIilcbiAgICAgICAgLnNwbGl0KFwiLFwiKVxuICAgICAgICAubWFwKE51bWJlci5wYXJzZUZsb2F0KTtcbiAgICBpZiAocmVzdWx0Lmxlbmd0aCA8IDQpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goMSk7XG4gICAgfVxuICAgIHJlc3VsdCA9IHJlc3VsdC5tYXAoeCA9PiB7XG4gICAgICAgIGNvbnN0IGlzTmFOID0gTnVtYmVyLmlzTmFOKHgpO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiICYmIGlzTmFOKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiQ291bGQgbm90IHBhcnNlIGNvbG9yXCIsIGNvbG9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNOYU4gPyAwIDogeDtcbiAgICB9KTtcbiAgICBjYWNoZVtub3JtYWxpemVkQ29sb3JdID0gcmVzdWx0O1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKiogQGNhdGVnb3J5IERyYXdpbmcgKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoQWxwaGEoY29sb3IsIGFscGhhKSB7XG4gICAgY29uc3QgW3IsIGcsIGJdID0gcGFyc2VUb1JnYmEoY29sb3IpO1xuICAgIHJldHVybiBgcmdiYSgke3J9LCAke2d9LCAke2J9LCAke2FscGhhfSlgO1xufVxuY29uc3QgYmxlbmRSZXN1bHRDYWNoZSA9IG5ldyBNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiBibGVuZENhY2hlKGNvbG9yLCBiYWNrZ3JvdW5kKSB7XG4gICAgY29uc3QgY2FjaGVLZXkgPSBgJHtjb2xvcn0tJHtiYWNrZ3JvdW5kfWA7XG4gICAgY29uc3QgbWF5YmUgPSBibGVuZFJlc3VsdENhY2hlLmdldChjYWNoZUtleSk7XG4gICAgaWYgKG1heWJlICE9PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBtYXliZTtcbiAgICBjb25zdCByZXN1bHQgPSBibGVuZChjb2xvciwgYmFja2dyb3VuZCk7XG4gICAgYmxlbmRSZXN1bHRDYWNoZS5zZXQoY2FjaGVLZXksIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKiBAY2F0ZWdvcnkgRHJhd2luZyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJsZW5kKGNvbG9yLCBiYWNrZ3JvdW5kKSB7XG4gICAgaWYgKGJhY2tncm91bmQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGNvbG9yO1xuICAgIGNvbnN0IFtyLCBnLCBiLCBhXSA9IHBhcnNlVG9SZ2JhKGNvbG9yKTtcbiAgICBpZiAoYSA9PT0gMSlcbiAgICAgICAgcmV0dXJuIGNvbG9yO1xuICAgIGNvbnN0IFticiwgYmcsIGJiLCBiYV0gPSBwYXJzZVRvUmdiYShiYWNrZ3JvdW5kKTtcbiAgICBjb25zdCBhbyA9IGEgKyBiYSAqICgxIC0gYSk7XG4gICAgLy8gKHhhQSArIHhhQsK3KDHiiJJhQSkpL2FSXG4gICAgY29uc3Qgcm8gPSAoYSAqIHIgKyBiYSAqIGJyICogKDEgLSBhKSkgLyBhbztcbiAgICBjb25zdCBnbyA9IChhICogZyArIGJhICogYmcgKiAoMSAtIGEpKSAvIGFvO1xuICAgIGNvbnN0IGJvID0gKGEgKiBiICsgYmEgKiBiYiAqICgxIC0gYSkpIC8gYW87XG4gICAgcmV0dXJuIGByZ2JhKCR7cm99LCAke2dvfSwgJHtib30sICR7YW99KWA7XG59XG4vKiogQGNhdGVnb3J5IERyYXdpbmcgKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnBvbGF0ZUNvbG9ycyhsZWZ0Q29sb3IsIHJpZ2h0Q29sb3IsIHZhbCkge1xuICAgIC8vIHRvb3QgdG9vdCBpbSBhIEdQVVxuICAgIGlmICh2YWwgPD0gMClcbiAgICAgICAgcmV0dXJuIGxlZnRDb2xvcjtcbiAgICBpZiAodmFsID49IDEpXG4gICAgICAgIHJldHVybiByaWdodENvbG9yO1xuICAgIC8vIFBhcnNlIHRvIHJnYmEgcmV0dXJucyBzdHJhaWdodCBhbHBoYSBjb2xvcnMsIGZvciBpbnRlcnBvbGF0aW9uIHdlIHdhbnQgcHJlLW11bHRpcGxpZWQgYWxwaGFcbiAgICAvLyBGSVhNRTogVGhpcyBjYW4gYmUgZmFzdGVyIGlmIGluc3RlYWQgb2YgbWFraWduIGFuIGFycmF5IHdlIGp1c3QgdXNlIHZhcmlhYmxlcy4gTm8gbWVtb3J5IGFsbG9jYXRpb24uXG4gICAgY29uc3QgbGVmdCA9IFsuLi5wYXJzZVRvUmdiYShsZWZ0Q29sb3IpXTtcbiAgICBsZWZ0WzBdID0gbGVmdFswXSAqIGxlZnRbM107XG4gICAgbGVmdFsxXSA9IGxlZnRbMV0gKiBsZWZ0WzNdO1xuICAgIGxlZnRbMl0gPSBsZWZ0WzJdICogbGVmdFszXTtcbiAgICBjb25zdCByaWdodCA9IFsuLi5wYXJzZVRvUmdiYShyaWdodENvbG9yKV07XG4gICAgcmlnaHRbMF0gPSByaWdodFswXSAqIHJpZ2h0WzNdO1xuICAgIHJpZ2h0WzFdID0gcmlnaHRbMV0gKiByaWdodFszXTtcbiAgICByaWdodFsyXSA9IHJpZ2h0WzJdICogcmlnaHRbM107XG4gICAgY29uc3QgaFNjYWxlciA9IHZhbDtcbiAgICBjb25zdCBuU2NhbGVyID0gMSAtIHZhbDtcbiAgICBjb25zdCBhID0gbGVmdFszXSAqIG5TY2FsZXIgKyByaWdodFszXSAqIGhTY2FsZXI7XG4gICAgLy8gbm93IHdlIG5lZWQgdG8gZGl2aWRlIHRoZSBhbHBoYSBiYWNrIG91dCB0byBnZXQgbGluZWFyIGFscGhhIGJhY2sgZm9yIHRoZSBmaW5hbCByZXN1bHRcbiAgICBjb25zdCByID0gTWF0aC5mbG9vcigobGVmdFswXSAqIG5TY2FsZXIgKyByaWdodFswXSAqIGhTY2FsZXIpIC8gYSk7XG4gICAgY29uc3QgZyA9IE1hdGguZmxvb3IoKGxlZnRbMV0gKiBuU2NhbGVyICsgcmlnaHRbMV0gKiBoU2NhbGVyKSAvIGEpO1xuICAgIGNvbnN0IGIgPSBNYXRoLmZsb29yKChsZWZ0WzJdICogblNjYWxlciArIHJpZ2h0WzJdICogaFNjYWxlcikgLyBhKTtcbiAgICByZXR1cm4gYHJnYmEoJHtyfSwgJHtnfSwgJHtifSwgJHthfSlgO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIChmbG9hdCkgcmVwcmVzZW50aW5nIHRoZSBsdW1pbmFuY2Ugb2YgYSBjb2xvci5cbiAqXG4gKiBAY2F0ZWdvcnkgRHJhd2luZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0THVtaW5hbmNlKGNvbG9yKSB7XG4gICAgaWYgKGNvbG9yID09PSBcInRyYW5zcGFyZW50XCIpXG4gICAgICAgIHJldHVybiAwO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL2NvbnNpc3RlbnQtZnVuY3Rpb24tc2NvcGluZ1xuICAgIGZ1bmN0aW9uIGYoeCkge1xuICAgICAgICBjb25zdCBjaGFubmVsID0geCAvIDI1NTtcbiAgICAgICAgcmV0dXJuIGNoYW5uZWwgPD0gMC4wNDA0NSA/IGNoYW5uZWwgLyAxMi45MiA6IE1hdGgucG93KChjaGFubmVsICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XG4gICAgfVxuICAgIGNvbnN0IFtyLCBnLCBiXSA9IHBhcnNlVG9SZ2JhKGNvbG9yKTtcbiAgICByZXR1cm4gMC4yMTI2ICogZihyKSArIDAuNzE1MiAqIGYoZykgKyAwLjA3MjIgKiBmKGIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29sb3ItcGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-sprites.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-sprites.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpriteManager: () => (/* binding */ SpriteManager)\n/* harmony export */ });\n\nfunction getColors(variant, theme) {\n    if (variant === \"normal\") {\n        return [theme.bgIconHeader, theme.fgIconHeader];\n    }\n    else if (variant === \"selected\") {\n        return [\"white\", theme.accentColor];\n    }\n    else {\n        return [theme.accentColor, theme.bgHeader];\n    }\n}\n/** @category Columns */\nclass SpriteManager {\n    onSettled;\n    spriteMap = new Map();\n    headerIcons;\n    inFlight = 0;\n    constructor(headerIcons, onSettled) {\n        this.onSettled = onSettled;\n        this.headerIcons = headerIcons ?? {};\n    }\n    drawSprite(sprite, variant, ctx, x, y, size, theme, alpha = 1) {\n        const [bgColor, fgColor] = getColors(variant, theme);\n        const rSize = size * Math.ceil(window.devicePixelRatio);\n        const key = `${bgColor}_${fgColor}_${rSize}_${sprite}`;\n        let spriteCanvas = this.spriteMap.get(key);\n        if (spriteCanvas === undefined) {\n            const spriteCb = this.headerIcons[sprite];\n            if (spriteCb === undefined)\n                return;\n            spriteCanvas = document.createElement(\"canvas\");\n            const spriteCtx = spriteCanvas.getContext(\"2d\");\n            if (spriteCtx === null)\n                return;\n            const imgSource = new Image();\n            imgSource.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(spriteCb({ fgColor, bgColor }))}`;\n            this.spriteMap.set(key, spriteCanvas);\n            const promise = imgSource.decode();\n            if (promise === undefined)\n                return;\n            this.inFlight++;\n            promise\n                .then(() => {\n                spriteCtx.drawImage(imgSource, 0, 0, rSize, rSize);\n            })\n                .finally(() => {\n                this.inFlight--;\n                if (this.inFlight === 0) {\n                    this.onSettled();\n                }\n            });\n        }\n        else {\n            if (alpha < 1) {\n                ctx.globalAlpha = alpha;\n            }\n            ctx.drawImage(spriteCanvas, 0, 0, rSize, rSize, x, y, size, size);\n            if (alpha < 1) {\n                ctx.globalAlpha = 1;\n            }\n        }\n    }\n}\n//# sourceMappingURL=data-grid-sprites.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2RhdGEtZ3JpZC1zcHJpdGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFFBQVEsR0FBRyxRQUFRLEdBQUcsTUFBTSxHQUFHLE9BQU87QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZ0JBQWdCLDhCQUE4QixrQkFBa0IsR0FBRztBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQvZGF0YS1ncmlkLXNwcml0ZXMuanM/YWUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge30gZnJvbSBcIi4vc3ByaXRlcy5qc1wiO1xuZnVuY3Rpb24gZ2V0Q29sb3JzKHZhcmlhbnQsIHRoZW1lKSB7XG4gICAgaWYgKHZhcmlhbnQgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgcmV0dXJuIFt0aGVtZS5iZ0ljb25IZWFkZXIsIHRoZW1lLmZnSWNvbkhlYWRlcl07XG4gICAgfVxuICAgIGVsc2UgaWYgKHZhcmlhbnQgPT09IFwic2VsZWN0ZWRcIikge1xuICAgICAgICByZXR1cm4gW1wid2hpdGVcIiwgdGhlbWUuYWNjZW50Q29sb3JdO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFt0aGVtZS5hY2NlbnRDb2xvciwgdGhlbWUuYmdIZWFkZXJdO1xuICAgIH1cbn1cbi8qKiBAY2F0ZWdvcnkgQ29sdW1ucyAqL1xuZXhwb3J0IGNsYXNzIFNwcml0ZU1hbmFnZXIge1xuICAgIG9uU2V0dGxlZDtcbiAgICBzcHJpdGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgaGVhZGVySWNvbnM7XG4gICAgaW5GbGlnaHQgPSAwO1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlckljb25zLCBvblNldHRsZWQpIHtcbiAgICAgICAgdGhpcy5vblNldHRsZWQgPSBvblNldHRsZWQ7XG4gICAgICAgIHRoaXMuaGVhZGVySWNvbnMgPSBoZWFkZXJJY29ucyA/PyB7fTtcbiAgICB9XG4gICAgZHJhd1Nwcml0ZShzcHJpdGUsIHZhcmlhbnQsIGN0eCwgeCwgeSwgc2l6ZSwgdGhlbWUsIGFscGhhID0gMSkge1xuICAgICAgICBjb25zdCBbYmdDb2xvciwgZmdDb2xvcl0gPSBnZXRDb2xvcnModmFyaWFudCwgdGhlbWUpO1xuICAgICAgICBjb25zdCByU2l6ZSA9IHNpemUgKiBNYXRoLmNlaWwod2luZG93LmRldmljZVBpeGVsUmF0aW8pO1xuICAgICAgICBjb25zdCBrZXkgPSBgJHtiZ0NvbG9yfV8ke2ZnQ29sb3J9XyR7clNpemV9XyR7c3ByaXRlfWA7XG4gICAgICAgIGxldCBzcHJpdGVDYW52YXMgPSB0aGlzLnNwcml0ZU1hcC5nZXQoa2V5KTtcbiAgICAgICAgaWYgKHNwcml0ZUNhbnZhcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBzcHJpdGVDYiA9IHRoaXMuaGVhZGVySWNvbnNbc3ByaXRlXTtcbiAgICAgICAgICAgIGlmIChzcHJpdGVDYiA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHNwcml0ZUNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgICAgICBjb25zdCBzcHJpdGVDdHggPSBzcHJpdGVDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICAgICAgaWYgKHNwcml0ZUN0eCA9PT0gbnVsbClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjb25zdCBpbWdTb3VyY2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICAgIGltZ1NvdXJjZS5zcmMgPSBgZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmLTgsJHtlbmNvZGVVUklDb21wb25lbnQoc3ByaXRlQ2IoeyBmZ0NvbG9yLCBiZ0NvbG9yIH0pKX1gO1xuICAgICAgICAgICAgdGhpcy5zcHJpdGVNYXAuc2V0KGtleSwgc3ByaXRlQ2FudmFzKTtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSBpbWdTb3VyY2UuZGVjb2RlKCk7XG4gICAgICAgICAgICBpZiAocHJvbWlzZSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHRoaXMuaW5GbGlnaHQrKztcbiAgICAgICAgICAgIHByb21pc2VcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3ByaXRlQ3R4LmRyYXdJbWFnZShpbWdTb3VyY2UsIDAsIDAsIHJTaXplLCByU2l6ZSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmluRmxpZ2h0LS07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaW5GbGlnaHQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vblNldHRsZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChhbHBoYSA8IDEpIHtcbiAgICAgICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBhbHBoYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2Uoc3ByaXRlQ2FudmFzLCAwLCAwLCByU2l6ZSwgclNpemUsIHgsIHksIHNpemUsIHNpemUpO1xuICAgICAgICAgICAgaWYgKGFscGhhIDwgMSkge1xuICAgICAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhLWdyaWQtc3ByaXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-sprites.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanEmpty: () => (/* binding */ BooleanEmpty),\n/* harmony export */   BooleanIndeterminate: () => (/* binding */ BooleanIndeterminate),\n/* harmony export */   CompactSelection: () => (/* binding */ CompactSelection),\n/* harmony export */   GridCellKind: () => (/* binding */ GridCellKind),\n/* harmony export */   GridColumnIcon: () => (/* binding */ GridColumnIcon),\n/* harmony export */   GridColumnMenuIcon: () => (/* binding */ GridColumnMenuIcon),\n/* harmony export */   InnerGridCellKind: () => (/* binding */ InnerGridCellKind),\n/* harmony export */   booleanCellIsEditable: () => (/* binding */ booleanCellIsEditable),\n/* harmony export */   isEditableGridCell: () => (/* binding */ isEditableGridCell),\n/* harmony export */   isInnerOnlyCell: () => (/* binding */ isInnerOnlyCell),\n/* harmony export */   isObjectEditorCallbackResult: () => (/* binding */ isObjectEditorCallbackResult),\n/* harmony export */   isReadWriteCell: () => (/* binding */ isReadWriteCell),\n/* harmony export */   isRectangleEqual: () => (/* binding */ isRectangleEqual),\n/* harmony export */   isSizedGridColumn: () => (/* binding */ isSizedGridColumn),\n/* harmony export */   isTextEditableGridCell: () => (/* binding */ isTextEditableGridCell),\n/* harmony export */   resolveCellsThunk: () => (/* binding */ resolveCellsThunk)\n/* harmony export */ });\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var lodash_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/has.js */ \"(ssr)/./node_modules/lodash/has.js\");\n\n\n/** @category Types */\nconst BooleanEmpty = null;\n/** @category Types */\nconst BooleanIndeterminate = undefined;\n/** @category Cells */\nvar GridCellKind;\n(function (GridCellKind) {\n    GridCellKind[\"Uri\"] = \"uri\";\n    GridCellKind[\"Text\"] = \"text\";\n    GridCellKind[\"Image\"] = \"image\";\n    GridCellKind[\"RowID\"] = \"row-id\";\n    GridCellKind[\"Number\"] = \"number\";\n    GridCellKind[\"Bubble\"] = \"bubble\";\n    GridCellKind[\"Boolean\"] = \"boolean\";\n    GridCellKind[\"Loading\"] = \"loading\";\n    GridCellKind[\"Markdown\"] = \"markdown\";\n    GridCellKind[\"Drilldown\"] = \"drilldown\";\n    GridCellKind[\"Protected\"] = \"protected\";\n    GridCellKind[\"Custom\"] = \"custom\";\n})(GridCellKind || (GridCellKind = {}));\n/** @category Columns */\nvar GridColumnIcon;\n(function (GridColumnIcon) {\n    GridColumnIcon[\"HeaderRowID\"] = \"headerRowID\";\n    GridColumnIcon[\"HeaderCode\"] = \"headerCode\";\n    GridColumnIcon[\"HeaderNumber\"] = \"headerNumber\";\n    GridColumnIcon[\"HeaderString\"] = \"headerString\";\n    GridColumnIcon[\"HeaderBoolean\"] = \"headerBoolean\";\n    GridColumnIcon[\"HeaderAudioUri\"] = \"headerAudioUri\";\n    GridColumnIcon[\"HeaderVideoUri\"] = \"headerVideoUri\";\n    GridColumnIcon[\"HeaderEmoji\"] = \"headerEmoji\";\n    GridColumnIcon[\"HeaderImage\"] = \"headerImage\";\n    GridColumnIcon[\"HeaderUri\"] = \"headerUri\";\n    GridColumnIcon[\"HeaderPhone\"] = \"headerPhone\";\n    GridColumnIcon[\"HeaderMarkdown\"] = \"headerMarkdown\";\n    GridColumnIcon[\"HeaderDate\"] = \"headerDate\";\n    GridColumnIcon[\"HeaderTime\"] = \"headerTime\";\n    GridColumnIcon[\"HeaderEmail\"] = \"headerEmail\";\n    GridColumnIcon[\"HeaderReference\"] = \"headerReference\";\n    GridColumnIcon[\"HeaderIfThenElse\"] = \"headerIfThenElse\";\n    GridColumnIcon[\"HeaderSingleValue\"] = \"headerSingleValue\";\n    GridColumnIcon[\"HeaderLookup\"] = \"headerLookup\";\n    GridColumnIcon[\"HeaderTextTemplate\"] = \"headerTextTemplate\";\n    GridColumnIcon[\"HeaderMath\"] = \"headerMath\";\n    GridColumnIcon[\"HeaderRollup\"] = \"headerRollup\";\n    GridColumnIcon[\"HeaderJoinStrings\"] = \"headerJoinStrings\";\n    GridColumnIcon[\"HeaderSplitString\"] = \"headerSplitString\";\n    GridColumnIcon[\"HeaderGeoDistance\"] = \"headerGeoDistance\";\n    GridColumnIcon[\"HeaderArray\"] = \"headerArray\";\n    GridColumnIcon[\"RowOwnerOverlay\"] = \"rowOwnerOverlay\";\n    GridColumnIcon[\"ProtectedColumnOverlay\"] = \"protectedColumnOverlay\";\n})(GridColumnIcon || (GridColumnIcon = {}));\n/** @category Columns */\nvar GridColumnMenuIcon;\n(function (GridColumnMenuIcon) {\n    GridColumnMenuIcon[\"Triangle\"] = \"triangle\";\n    GridColumnMenuIcon[\"Dots\"] = \"dots\";\n})(GridColumnMenuIcon || (GridColumnMenuIcon = {}));\n/** @category Columns */\nfunction isSizedGridColumn(c) {\n    return \"width\" in c && typeof c.width === \"number\";\n}\n/** @category Types */\nasync function resolveCellsThunk(thunk) {\n    if (typeof thunk === \"object\")\n        return thunk;\n    return await thunk();\n}\n// All EditableGridCells are inherently ValidatedGridCells, and this is more specific and thus more useful.\n/** @category Cells */\nfunction isEditableGridCell(cell) {\n    if (cell.kind === GridCellKind.Loading ||\n        cell.kind === GridCellKind.Bubble ||\n        cell.kind === GridCellKind.RowID ||\n        cell.kind === GridCellKind.Protected ||\n        cell.kind === GridCellKind.Drilldown) {\n        return false;\n    }\n    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_1__.proveType)(cell);\n    return true;\n}\n/** @category Cells */\nfunction isTextEditableGridCell(cell) {\n    if (cell.kind === GridCellKind.Loading ||\n        cell.kind === GridCellKind.Bubble ||\n        cell.kind === GridCellKind.RowID ||\n        cell.kind === GridCellKind.Protected ||\n        cell.kind === GridCellKind.Drilldown ||\n        cell.kind === GridCellKind.Boolean ||\n        cell.kind === GridCellKind.Image ||\n        cell.kind === GridCellKind.Custom) {\n        return false;\n    }\n    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_1__.proveType)(cell);\n    return true;\n}\n/** @category Cells */\nfunction isInnerOnlyCell(cell) {\n    return cell.kind === InnerGridCellKind.Marker || cell.kind === InnerGridCellKind.NewRow;\n}\n/** @category Cells */\nfunction isReadWriteCell(cell) {\n    if (!isEditableGridCell(cell) || cell.kind === GridCellKind.Image)\n        return false;\n    if (cell.kind === GridCellKind.Text ||\n        cell.kind === GridCellKind.Number ||\n        cell.kind === GridCellKind.Markdown ||\n        cell.kind === GridCellKind.Uri ||\n        cell.kind === GridCellKind.Custom ||\n        cell.kind === GridCellKind.Boolean) {\n        return cell.readonly !== true;\n    }\n    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_1__.assertNever)(cell, \"A cell was passed with an invalid kind\");\n}\nfunction isRectangleEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a === undefined || b === undefined)\n        return false;\n    return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n/** @category Renderers */\nfunction isObjectEditorCallbackResult(obj) {\n    return lodash_has_js__WEBPACK_IMPORTED_MODULE_0__(obj, \"editor\");\n}\n// Can be written more concisely, not easier to read if more concise.\n/** @category Cells */\nfunction booleanCellIsEditable(cell) {\n    return !(cell.readonly ?? false);\n}\n/** @category Cells */\nvar InnerGridCellKind;\n(function (InnerGridCellKind) {\n    InnerGridCellKind[\"NewRow\"] = \"new-row\";\n    InnerGridCellKind[\"Marker\"] = \"marker\";\n})(InnerGridCellKind || (InnerGridCellKind = {}));\nfunction mergeRanges(input) {\n    if (input.length === 0) {\n        return [];\n    }\n    const ranges = [...input];\n    const stack = [];\n    ranges.sort(function (a, b) {\n        return a[0] - b[0];\n    });\n    stack.push([...ranges[0]]);\n    for (const range of ranges.slice(1)) {\n        const top = stack[stack.length - 1];\n        if (top[1] < range[0]) {\n            stack.push([...range]);\n        }\n        else if (top[1] < range[1]) {\n            top[1] = range[1];\n        }\n    }\n    return stack;\n}\nlet emptyCompactSelection;\n/** @category Selection */\nclass CompactSelection {\n    items;\n    constructor(items) {\n        this.items = items;\n    }\n    static empty = () => {\n        return emptyCompactSelection ?? (emptyCompactSelection = new CompactSelection([]));\n    };\n    static fromSingleSelection = (selection) => {\n        return CompactSelection.empty().add(selection);\n    };\n    offset(amount) {\n        if (amount === 0)\n            return this;\n        const newItems = this.items.map(x => [x[0] + amount, x[1] + amount]);\n        return new CompactSelection(newItems);\n    }\n    add(selection) {\n        const slice = typeof selection === \"number\" ? [selection, selection + 1] : selection;\n        const newItems = mergeRanges([...this.items, slice]);\n        return new CompactSelection(newItems);\n    }\n    remove(selection) {\n        const items = [...this.items];\n        const selMin = typeof selection === \"number\" ? selection : selection[0];\n        const selMax = typeof selection === \"number\" ? selection + 1 : selection[1];\n        for (const [i, slice] of items.entries()) {\n            const [start, end] = slice;\n            // Remove part of slice that intersects removed selection.\n            if (start <= selMax && selMin <= end) {\n                const toAdd = [];\n                if (start < selMin) {\n                    toAdd.push([start, selMin]);\n                }\n                if (selMax < end) {\n                    toAdd.push([selMax, end]);\n                }\n                items.splice(i, 1, ...toAdd);\n            }\n        }\n        return new CompactSelection(items);\n    }\n    first() {\n        if (this.items.length === 0)\n            return undefined;\n        return this.items[0][0];\n    }\n    last() {\n        if (this.items.length === 0)\n            return undefined;\n        return this.items.slice(-1)[0][1] - 1;\n    }\n    hasIndex(index) {\n        for (let i = 0; i < this.items.length; i++) {\n            const [start, end] = this.items[i];\n            if (index >= start && index < end)\n                return true;\n        }\n        return false;\n    }\n    hasAll(index) {\n        for (let x = index[0]; x < index[1]; x++) {\n            if (!this.hasIndex(x))\n                return false;\n        }\n        return true;\n    }\n    some(predicate) {\n        for (const i of this) {\n            if (predicate(i))\n                return true;\n        }\n        return false;\n    }\n    equals(other) {\n        if (other === this)\n            return true;\n        if (other.items.length !== this.items.length)\n            return false;\n        for (let i = 0; i < this.items.length; i++) {\n            const left = other.items[i];\n            const right = this.items[i];\n            if (left[0] !== right[0] || left[1] !== right[1])\n                return false;\n        }\n        return true;\n    }\n    // Really old JS wont have access to the iterator and babel will stop people using it\n    // when trying to support browsers so old we don't support them anyway. What goes on\n    // between an engineer and their bundler in the privacy of their CI server is none of\n    // my business anyway.\n    toArray() {\n        const result = [];\n        for (const [start, end] of this.items) {\n            for (let x = start; x < end; x++) {\n                result.push(x);\n            }\n        }\n        return result;\n    }\n    get length() {\n        let len = 0;\n        for (const [start, end] of this.items) {\n            len += end - start;\n        }\n        return len;\n    }\n    *[Symbol.iterator]() {\n        for (const [start, end] of this.items) {\n            for (let x = start; x < end; x++) {\n                yield x;\n            }\n        }\n    }\n}\n//# sourceMappingURL=data-grid-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./render/data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _cell_set_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cell-set.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js\");\n/* harmony import */ var _data_grid_sprites_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-grid-sprites.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-sprites.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/clamp.js */ \"(ssr)/./node_modules/lodash/clamp.js\");\n/* harmony import */ var lodash_range_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/range.js */ \"(ssr)/./node_modules/lodash/range.js\");\n/* harmony import */ var _render_data_grid_render_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./render/data-grid-render.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.js\");\n/* harmony import */ var _animation_manager_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./animation-manager.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/animation-manager.js\");\n/* harmony import */ var _common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/render-state-provider.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js\");\n/* harmony import */ var _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/browser-detect.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\");\n/* harmony import */ var _use_animation_queue_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./use-animation-queue.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-animation-queue.js\");\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var _event_args_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./event-args.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/event-args.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _render_data_grid_render_cells_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./render/data-grid-render.cells.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.cells.js\");\n/* harmony import */ var _render_data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./render/data-grid-render.header.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.header.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst fillHandleClickSize = 6;\nconst getRowData = (cell, getCellRenderer) => {\n    if (cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.GridCellKind.Custom)\n        return cell.copyData;\n    const r = getCellRenderer?.(cell);\n    return r?.getAccessibilityString(cell) ?? \"\";\n};\nconst DataGrid = (p, forwardedRef) => {\n    const { width, height, accessibilityHeight, columns, cellXOffset: cellXOffsetReal, cellYOffset, headerHeight, fillHandle = false, groupHeaderHeight, rowHeight, rows, getCellContent, getRowThemeOverride, onHeaderMenuClick, enableGroups, isFilling, onCanvasFocused, onCanvasBlur, isFocused, selection, freezeColumns, onContextMenu, freezeTrailingRows, fixedShadowX = true, fixedShadowY = true, drawFocusRing, onMouseDown, onMouseUp, onMouseMoveRaw, onMouseMove, onItemHovered, dragAndDropState, firstColAccessible, onKeyDown, onKeyUp, highlightRegions, canvasRef, onDragStart, onDragEnd, eventTargetRef, isResizing, resizeColumn: resizeCol, isDragging, isDraggable = false, allowResize, disabledRows, hasAppendRow, getGroupDetails, theme, prelightCells, headerIcons, verticalBorder, drawCell: drawCellCallback, drawHeader: drawHeaderCallback, onCellFocused, onDragOverCell, onDrop, onDragLeave, imageWindowLoader, smoothScrollX = false, smoothScrollY = false, experimental, getCellRenderer, } = p;\n    const translateX = p.translateX ?? 0;\n    const translateY = p.translateY ?? 0;\n    const cellXOffset = Math.max(freezeColumns, Math.min(columns.length - 1, cellXOffsetReal));\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const imageLoader = imageWindowLoader;\n    const damageRegion = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [scrolling, setScrolling] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const hoverValues = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const lastBlitData = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [hoveredItemInfo, setHoveredItemInfo] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const [hoveredOnEdge, setHoveredOnEdge] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const overlayRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [drawCursorOverride, setDrawCursorOverride] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const [lastWasTouch, setLastWasTouch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const lastWasTouchRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(lastWasTouch);\n    lastWasTouchRef.current = lastWasTouch;\n    const spriteManager = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => new _data_grid_sprites_js__WEBPACK_IMPORTED_MODULE_4__.SpriteManager(headerIcons, () => {\n        lastArgsRef.current = undefined;\n        lastDrawRef.current();\n    }), [headerIcons]);\n    const totalHeaderHeight = enableGroups ? groupHeaderHeight + headerHeight : headerHeight;\n    const scrollingStopRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1);\n    const enableFirefoxRescaling = (experimental?.enableFirefoxRescaling ?? false) && _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_5__.browserIsFirefox.value;\n    const enableSafariRescaling = (experimental?.enableSafariRescaling ?? false) && _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_5__.browserIsSafari.value;\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (window.devicePixelRatio === 1 || (!enableFirefoxRescaling && !enableSafariRescaling))\n            return;\n        // We don't want to go into scroll mode for a single repaint\n        if (scrollingStopRef.current !== -1) {\n            setScrolling(true);\n        }\n        window.clearTimeout(scrollingStopRef.current);\n        scrollingStopRef.current = window.setTimeout(() => {\n            setScrolling(false);\n            scrollingStopRef.current = -1;\n        }, 200);\n    }, [cellYOffset, cellXOffset, translateX, translateY, enableFirefoxRescaling, enableSafariRescaling]);\n    const mappedColumns = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.useMappedColumns)(columns, freezeColumns);\n    const stickyX = fixedShadowX ? (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.getStickyWidth)(mappedColumns, dragAndDropState) : 0;\n    // row: -1 === columnHeader, -2 === groupHeader\n    const getBoundsForItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((canvas, col, row) => {\n        const rect = canvas.getBoundingClientRect();\n        if (col >= mappedColumns.length || row >= rows) {\n            return undefined;\n        }\n        const scale = rect.width / width;\n        const result = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.computeBounds)(col, row, width, height, groupHeaderHeight, totalHeaderHeight, cellXOffset, cellYOffset, translateX, translateY, rows, freezeColumns, freezeTrailingRows, mappedColumns, rowHeight);\n        if (scale !== 1) {\n            result.x *= scale;\n            result.y *= scale;\n            result.width *= scale;\n            result.height *= scale;\n        }\n        result.x += rect.x;\n        result.y += rect.y;\n        return result;\n    }, [\n        width,\n        height,\n        groupHeaderHeight,\n        totalHeaderHeight,\n        cellXOffset,\n        cellYOffset,\n        translateX,\n        translateY,\n        rows,\n        freezeColumns,\n        freezeTrailingRows,\n        mappedColumns,\n        rowHeight,\n    ]);\n    const getMouseArgsForPosition = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((canvas, posX, posY, ev) => {\n        const rect = canvas.getBoundingClientRect();\n        const scale = rect.width / width;\n        const x = (posX - rect.left) / scale;\n        const y = (posY - rect.top) / scale;\n        const edgeDetectionBuffer = 5;\n        const effectiveCols = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.getEffectiveColumns)(mappedColumns, cellXOffset, width, undefined, translateX);\n        let button = 0;\n        let buttons = 0;\n        if (ev instanceof MouseEvent) {\n            button = ev.button;\n            buttons = ev.buttons;\n        }\n        // -1 === off right edge\n        const col = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.getColumnIndexForX)(x, effectiveCols, translateX);\n        // -1: header or above\n        // undefined: offbottom\n        const row = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.getRowIndexForY)(y, height, enableGroups, headerHeight, groupHeaderHeight, rows, rowHeight, cellYOffset, translateY, freezeTrailingRows);\n        const shiftKey = ev?.shiftKey === true;\n        const ctrlKey = ev?.ctrlKey === true;\n        const metaKey = ev?.metaKey === true;\n        const isTouch = (ev !== undefined && !(ev instanceof MouseEvent)) || ev?.pointerType === \"touch\";\n        const scrollEdge = [\n            x < 0 ? -1 : width < x ? 1 : 0,\n            y < totalHeaderHeight ? -1 : height < y ? 1 : 0,\n        ];\n        let result;\n        if (col === -1 || y < 0 || x < 0 || row === undefined || x > width || y > height) {\n            const horizontal = x > width ? 1 : x < 0 ? -1 : 0;\n            const vertical = y > height ? 1 : y < 0 ? -1 : 0;\n            let innerHorizontal = horizontal * 2;\n            let innerVertical = vertical * 2;\n            if (horizontal === 0)\n                innerHorizontal = col === -1 ? _event_args_js__WEBPACK_IMPORTED_MODULE_7__.OutOfBoundsRegionAxis.EndPadding : _event_args_js__WEBPACK_IMPORTED_MODULE_7__.OutOfBoundsRegionAxis.Center;\n            if (vertical === 0)\n                innerVertical = row === undefined ? _event_args_js__WEBPACK_IMPORTED_MODULE_7__.OutOfBoundsRegionAxis.EndPadding : _event_args_js__WEBPACK_IMPORTED_MODULE_7__.OutOfBoundsRegionAxis.Center;\n            let isEdge = false;\n            if (col === -1 && row === -1) {\n                const b = getBoundsForItem(canvas, mappedColumns.length - 1, -1);\n                (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(b !== undefined);\n                isEdge = posX < b.x + b.width + edgeDetectionBuffer;\n            }\n            // This is used to ensure that clicking on the scrollbar doesn't unset the selection.\n            // Unfortunately this doesn't work for overlay scrollbars because they are just a broken interaction\n            // by design.\n            const isMaybeScrollbar = (x > width && x < width + (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.getScrollBarWidth)()) || (y > height && y < height + (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.getScrollBarWidth)());\n            result = {\n                kind: _event_args_js__WEBPACK_IMPORTED_MODULE_7__.outOfBoundsKind,\n                location: [col !== -1 ? col : x < 0 ? 0 : mappedColumns.length - 1, row ?? rows - 1],\n                region: [innerHorizontal, innerVertical],\n                shiftKey,\n                ctrlKey,\n                metaKey,\n                isEdge,\n                isTouch,\n                button,\n                buttons,\n                scrollEdge,\n                isMaybeScrollbar,\n            };\n        }\n        else if (row <= -1) {\n            let bounds = getBoundsForItem(canvas, col, row);\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(bounds !== undefined);\n            let isEdge = bounds !== undefined && bounds.x + bounds.width - posX <= edgeDetectionBuffer;\n            const previousCol = col - 1;\n            if (posX - bounds.x <= edgeDetectionBuffer && previousCol >= 0) {\n                isEdge = true;\n                bounds = getBoundsForItem(canvas, previousCol, row);\n                (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(bounds !== undefined);\n                result = {\n                    kind: enableGroups && row === -2 ? _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind : _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind,\n                    location: [previousCol, row],\n                    bounds: bounds,\n                    group: mappedColumns[previousCol].group ?? \"\",\n                    isEdge,\n                    shiftKey,\n                    ctrlKey,\n                    metaKey,\n                    isTouch,\n                    localEventX: posX - bounds.x,\n                    localEventY: posY - bounds.y,\n                    button,\n                    buttons,\n                    scrollEdge,\n                };\n            }\n            else {\n                result = {\n                    kind: enableGroups && row === -2 ? _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind : _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind,\n                    group: mappedColumns[col].group ?? \"\",\n                    location: [col, row],\n                    bounds: bounds,\n                    isEdge,\n                    shiftKey,\n                    ctrlKey,\n                    metaKey,\n                    isTouch,\n                    localEventX: posX - bounds.x,\n                    localEventY: posY - bounds.y,\n                    button,\n                    buttons,\n                    scrollEdge,\n                };\n            }\n        }\n        else {\n            const bounds = getBoundsForItem(canvas, col, row);\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(bounds !== undefined);\n            const isEdge = bounds !== undefined && bounds.x + bounds.width - posX < edgeDetectionBuffer;\n            let isFillHandle = false;\n            if (fillHandle && selection.current !== undefined) {\n                const fillHandleLocation = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.rectBottomRight)(selection.current.range);\n                const fillHandleCellBounds = getBoundsForItem(canvas, fillHandleLocation[0], fillHandleLocation[1]);\n                if (fillHandleCellBounds !== undefined) {\n                    const handleLogicalCenterX = fillHandleCellBounds.x + fillHandleCellBounds.width - 2;\n                    const handleLogicalCenterY = fillHandleCellBounds.y + fillHandleCellBounds.height - 2;\n                    //check if posX and posY are within fillHandleClickSize from handleLogicalCenter\n                    isFillHandle =\n                        Math.abs(handleLogicalCenterX - posX) < fillHandleClickSize &&\n                            Math.abs(handleLogicalCenterY - posY) < fillHandleClickSize;\n                }\n            }\n            result = {\n                kind: \"cell\",\n                location: [col, row],\n                bounds: bounds,\n                isEdge,\n                shiftKey,\n                ctrlKey,\n                isFillHandle,\n                metaKey,\n                isTouch,\n                localEventX: posX - bounds.x,\n                localEventY: posY - bounds.y,\n                button,\n                buttons,\n                scrollEdge,\n            };\n        }\n        return result;\n    }, [\n        width,\n        mappedColumns,\n        cellXOffset,\n        translateX,\n        height,\n        enableGroups,\n        headerHeight,\n        groupHeaderHeight,\n        rows,\n        rowHeight,\n        cellYOffset,\n        translateY,\n        freezeTrailingRows,\n        getBoundsForItem,\n        fillHandle,\n        selection,\n        totalHeaderHeight,\n    ]);\n    const [hoveredItem] = hoveredItemInfo ?? [];\n    const enqueueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(() => {\n        // do nothing\n    });\n    const hoverInfoRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(hoveredItemInfo);\n    hoverInfoRef.current = hoveredItemInfo;\n    const [bufferACtx, bufferBCtx] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        const a = document.createElement(\"canvas\");\n        const b = document.createElement(\"canvas\");\n        a.style[\"display\"] = \"none\";\n        a.style[\"opacity\"] = \"0\";\n        a.style[\"position\"] = \"fixed\";\n        b.style[\"display\"] = \"none\";\n        b.style[\"opacity\"] = \"0\";\n        b.style[\"position\"] = \"fixed\";\n        return [a.getContext(\"2d\", { alpha: false }), b.getContext(\"2d\", { alpha: false })];\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (bufferACtx === null || bufferBCtx === null)\n            return;\n        document.documentElement.append(bufferACtx.canvas);\n        document.documentElement.append(bufferBCtx.canvas);\n        return () => {\n            bufferACtx.canvas.remove();\n            bufferBCtx.canvas.remove();\n        };\n    }, [bufferACtx, bufferBCtx]);\n    const renderStateProvider = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => new _common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_10__.RenderStateProvider(), []);\n    const maxDPR = enableFirefoxRescaling && scrolling ? 1 : enableSafariRescaling && scrolling ? 2 : 5;\n    const minimumCellWidth = experimental?.disableMinimumCellWidth === true ? 1 : 10;\n    const lastArgsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const canvasCtx = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const overlayCtx = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const draw = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        const canvas = ref.current;\n        const overlay = overlayRef.current;\n        if (canvas === null || overlay === null)\n            return;\n        if (canvasCtx.current === null) {\n            canvasCtx.current = canvas.getContext(\"2d\", { alpha: false });\n            canvas.width = 0;\n            canvas.height = 0;\n        }\n        if (overlayCtx.current === null) {\n            overlayCtx.current = overlay.getContext(\"2d\", { alpha: false });\n            overlay.width = 0;\n            overlay.height = 0;\n        }\n        if (canvasCtx.current === null || overlayCtx.current === null || bufferACtx === null || bufferBCtx === null) {\n            return;\n        }\n        let didOverride = false;\n        const overrideCursor = (cursor) => {\n            didOverride = true;\n            setDrawCursorOverride(cursor);\n        };\n        const last = lastArgsRef.current;\n        const current = {\n            headerCanvasCtx: overlayCtx.current,\n            canvasCtx: canvasCtx.current,\n            bufferACtx,\n            bufferBCtx,\n            width,\n            height,\n            cellXOffset,\n            cellYOffset,\n            translateX: Math.round(translateX),\n            translateY: Math.round(translateY),\n            mappedColumns,\n            enableGroups,\n            freezeColumns,\n            dragAndDropState,\n            theme,\n            headerHeight,\n            groupHeaderHeight,\n            disabledRows: disabledRows ?? _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.CompactSelection.empty(),\n            rowHeight,\n            verticalBorder,\n            isResizing,\n            resizeCol,\n            isFocused,\n            selection,\n            fillHandle,\n            drawCellCallback,\n            hasAppendRow,\n            overrideCursor,\n            maxScaleFactor: maxDPR,\n            freezeTrailingRows,\n            rows,\n            drawFocus: drawFocusRing,\n            getCellContent,\n            getGroupDetails: getGroupDetails ?? (name => ({ name })),\n            getRowThemeOverride,\n            drawHeaderCallback,\n            prelightCells,\n            highlightRegions,\n            imageLoader,\n            lastBlitData,\n            damage: damageRegion.current,\n            hoverValues: hoverValues.current,\n            hoverInfo: hoverInfoRef.current,\n            spriteManager,\n            scrolling,\n            hyperWrapping: experimental?.hyperWrapping ?? false,\n            touchMode: lastWasTouch,\n            enqueue: enqueueRef.current,\n            renderStateProvider,\n            renderStrategy: experimental?.renderStrategy ?? (_common_browser_detect_js__WEBPACK_IMPORTED_MODULE_5__.browserIsSafari.value ? \"double-buffer\" : \"single-buffer\"),\n            getCellRenderer,\n            minimumCellWidth,\n        };\n        // This confusing bit of code due to some poor design. Long story short, the damage property is only used\n        // with what is effectively the \"last args\" for the last normal draw anyway. We don't want the drawing code\n        // to look at this and go \"shit dawg, nothing changed\" so we force it to draw frash, but the damage restricts\n        // the draw anyway.\n        //\n        // Dear future Jason, I'm sorry. It was expedient, it worked, and had almost zero perf overhead. THe universe\n        // basically made me do it. What choice did I have?\n        if (current.damage === undefined) {\n            lastArgsRef.current = current;\n            (0,_render_data_grid_render_js__WEBPACK_IMPORTED_MODULE_11__.drawGrid)(current, last);\n        }\n        else {\n            (0,_render_data_grid_render_js__WEBPACK_IMPORTED_MODULE_11__.drawGrid)(current, undefined);\n        }\n        // don't reset on damage events\n        if (!didOverride && (current.damage === undefined || current.damage.has(hoverInfoRef?.current?.[0]))) {\n            setDrawCursorOverride(undefined);\n        }\n    }, [\n        bufferACtx,\n        bufferBCtx,\n        width,\n        height,\n        cellXOffset,\n        cellYOffset,\n        translateX,\n        translateY,\n        mappedColumns,\n        enableGroups,\n        freezeColumns,\n        dragAndDropState,\n        theme,\n        headerHeight,\n        groupHeaderHeight,\n        disabledRows,\n        rowHeight,\n        verticalBorder,\n        isResizing,\n        hasAppendRow,\n        resizeCol,\n        isFocused,\n        selection,\n        fillHandle,\n        freezeTrailingRows,\n        rows,\n        drawFocusRing,\n        maxDPR,\n        getCellContent,\n        getGroupDetails,\n        getRowThemeOverride,\n        drawCellCallback,\n        drawHeaderCallback,\n        prelightCells,\n        highlightRegions,\n        imageLoader,\n        spriteManager,\n        scrolling,\n        experimental?.hyperWrapping,\n        experimental?.renderStrategy,\n        lastWasTouch,\n        renderStateProvider,\n        getCellRenderer,\n        minimumCellWidth,\n    ]);\n    const lastDrawRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(draw);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        draw();\n        lastDrawRef.current = draw;\n    }, [draw]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        const fn = async () => {\n            if (document?.fonts?.ready === undefined)\n                return;\n            await document.fonts.ready;\n            lastArgsRef.current = undefined;\n            lastDrawRef.current();\n        };\n        void fn();\n    }, []);\n    const damageInternal = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((locations) => {\n        damageRegion.current = locations;\n        lastDrawRef.current();\n        damageRegion.current = undefined;\n    }, []);\n    const enqueue = (0,_use_animation_queue_js__WEBPACK_IMPORTED_MODULE_12__.useAnimationQueue)(damageInternal);\n    enqueueRef.current = enqueue;\n    const damage = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((cells) => {\n        damageInternal(new _cell_set_js__WEBPACK_IMPORTED_MODULE_13__.CellSet(cells.map(x => x.cell)));\n    }, [damageInternal]);\n    imageLoader.setCallback(damageInternal);\n    const [overFill, setOverFill] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [hCol, hRow] = hoveredItem ?? [];\n    const headerHovered = hCol !== undefined && hRow === -1;\n    const groupHeaderHovered = hCol !== undefined && hRow === -2;\n    let clickableInnerCellHovered = false;\n    let editableBoolHovered = false;\n    let cursorOverride = drawCursorOverride;\n    if (cursorOverride === undefined && hCol !== undefined && hRow !== undefined && hRow > -1 && hRow < rows) {\n        const cell = getCellContent([hCol, hRow], true);\n        clickableInnerCellHovered =\n            cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.InnerGridCellKind.NewRow ||\n                (cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.InnerGridCellKind.Marker && cell.markerKind !== \"number\");\n        editableBoolHovered = cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.GridCellKind.Boolean && (0,_data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.booleanCellIsEditable)(cell);\n        cursorOverride = cell.cursor;\n    }\n    const canDrag = hoveredOnEdge ?? false;\n    const cursor = isDragging\n        ? \"grabbing\"\n        : canDrag || isResizing\n            ? \"col-resize\"\n            : overFill || isFilling\n                ? \"crosshair\"\n                : cursorOverride !== undefined\n                    ? cursorOverride\n                    : headerHovered || clickableInnerCellHovered || editableBoolHovered || groupHeaderHovered\n                        ? \"pointer\"\n                        : \"default\";\n    const style = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n        // width,\n        // height,\n        contain: \"strict\",\n        display: \"block\",\n        cursor,\n    }), [cursor]);\n    const lastSetCursor = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"default\");\n    const target = eventTargetRef?.current;\n    if (target !== null && target !== undefined && lastSetCursor.current !== style.cursor) {\n        // because we have an event target we need to set its cursor instead.\n        target.style.cursor = lastSetCursor.current = style.cursor;\n    }\n    const groupHeaderActionForEvent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((group, bounds, localEventX, localEventY) => {\n        if (getGroupDetails === undefined)\n            return undefined;\n        const groupDesc = getGroupDetails(group);\n        if (groupDesc.actions !== undefined) {\n            const boxes = (0,_render_data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_14__.getActionBoundsForGroup)(bounds, groupDesc.actions);\n            for (const [i, box] of boxes.entries()) {\n                if ((0,_common_math_js__WEBPACK_IMPORTED_MODULE_15__.pointInRect)(box, localEventX + bounds.x, localEventY + box.y)) {\n                    return groupDesc.actions[i];\n                }\n            }\n        }\n        return undefined;\n    }, [getGroupDetails]);\n    const isOverHeaderMenu = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((canvas, col, clientX, clientY) => {\n        const header = columns[col];\n        if (!isDragging && !isResizing && header.hasMenu === true && !(hoveredOnEdge ?? false)) {\n            const headerBounds = getBoundsForItem(canvas, col, -1);\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(headerBounds !== undefined);\n            const menuBounds = (0,_render_data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_14__.getHeaderMenuBounds)(headerBounds.x, headerBounds.y, headerBounds.width, headerBounds.height, (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.direction)(header.title) === \"rtl\");\n            if (clientX > menuBounds.x &&\n                clientX < menuBounds.x + menuBounds.width &&\n                clientY > menuBounds.y &&\n                clientY < menuBounds.y + menuBounds.height) {\n                return headerBounds;\n            }\n        }\n        return undefined;\n    }, [columns, getBoundsForItem, hoveredOnEdge, isDragging, isResizing]);\n    const downTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const downPosition = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const mouseDown = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const onMouseDownImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        const canvas = ref.current;\n        const eventTarget = eventTargetRef?.current;\n        if (canvas === null || (ev.target !== canvas && ev.target !== eventTarget))\n            return;\n        mouseDown.current = true;\n        let clientX;\n        let clientY;\n        if (ev instanceof MouseEvent) {\n            clientX = ev.clientX;\n            clientY = ev.clientY;\n        }\n        else {\n            clientX = ev.touches[0].clientX;\n            clientY = ev.touches[0].clientY;\n        }\n        if (ev.target === eventTarget && eventTarget !== null) {\n            const bounds = eventTarget.getBoundingClientRect();\n            if (clientX > bounds.right || clientY > bounds.bottom)\n                return;\n        }\n        const args = getMouseArgsForPosition(canvas, clientX, clientY, ev);\n        downPosition.current = args.location;\n        if (args.isTouch) {\n            downTime.current = Date.now();\n        }\n        if (lastWasTouchRef.current !== args.isTouch) {\n            setLastWasTouch(args.isTouch);\n        }\n        if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind &&\n            isOverHeaderMenu(canvas, args.location[0], clientX, clientY) !== undefined) {\n            return;\n        }\n        else if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind) {\n            const action = groupHeaderActionForEvent(args.group, args.bounds, args.localEventX, args.localEventY);\n            if (action !== undefined) {\n                return;\n            }\n        }\n        onMouseDown?.(args);\n        if (!args.isTouch &&\n            isDraggable !== true &&\n            isDraggable !== args.kind &&\n            args.button < 3 &&\n            args.button !== 1) {\n            // preventing default in touch events stops scroll\n            ev.preventDefault();\n        }\n    }, [eventTargetRef, isDraggable, getMouseArgsForPosition, groupHeaderActionForEvent, isOverHeaderMenu, onMouseDown]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"touchstart\", onMouseDownImpl, window, false);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"mousedown\", onMouseDownImpl, window, false);\n    const lastUpTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const onMouseUpImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        const lastUpTimeValue = lastUpTime.current;\n        lastUpTime.current = Date.now();\n        const canvas = ref.current;\n        mouseDown.current = false;\n        if (onMouseUp === undefined || canvas === null)\n            return;\n        const eventTarget = eventTargetRef?.current;\n        const isOutside = ev.target !== canvas && ev.target !== eventTarget;\n        let clientX;\n        let clientY;\n        let canCancel = true;\n        if (ev instanceof MouseEvent) {\n            clientX = ev.clientX;\n            clientY = ev.clientY;\n            canCancel = ev.button < 3;\n            if (ev.pointerType === \"touch\") {\n                return;\n            }\n        }\n        else {\n            clientX = ev.changedTouches[0].clientX;\n            clientY = ev.changedTouches[0].clientY;\n        }\n        let args = getMouseArgsForPosition(canvas, clientX, clientY, ev);\n        if (args.isTouch && downTime.current !== 0 && Date.now() - downTime.current > 500) {\n            args = {\n                ...args,\n                isLongTouch: true,\n            };\n        }\n        if (lastUpTimeValue !== 0 && Date.now() - lastUpTimeValue < (args.isTouch ? 1000 : 500)) {\n            args = {\n                ...args,\n                isDoubleClick: true,\n            };\n        }\n        if (lastWasTouchRef.current !== args.isTouch) {\n            setLastWasTouch(args.isTouch);\n        }\n        if (!isOutside && ev.cancelable && canCancel) {\n            ev.preventDefault();\n        }\n        const [col] = args.location;\n        const headerBounds = isOverHeaderMenu(canvas, col, clientX, clientY);\n        if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind && headerBounds !== undefined) {\n            if (args.button !== 0 || downPosition.current?.[0] !== col || downPosition.current?.[1] !== -1) {\n                // force outside so that click will not process\n                onMouseUp(args, true);\n            }\n            return;\n        }\n        else if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind) {\n            const action = groupHeaderActionForEvent(args.group, args.bounds, args.localEventX, args.localEventY);\n            if (action !== undefined) {\n                if (args.button === 0) {\n                    action.onClick(args);\n                }\n                return;\n            }\n        }\n        onMouseUp(args, isOutside);\n    }, [onMouseUp, eventTargetRef, getMouseArgsForPosition, isOverHeaderMenu, groupHeaderActionForEvent]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"mouseup\", onMouseUpImpl, window, false);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"touchend\", onMouseUpImpl, window, false);\n    const onClickImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        const canvas = ref.current;\n        if (canvas === null)\n            return;\n        const eventTarget = eventTargetRef?.current;\n        const isOutside = ev.target !== canvas && ev.target !== eventTarget;\n        let clientX;\n        let clientY;\n        let canCancel = true;\n        if (ev instanceof MouseEvent) {\n            clientX = ev.clientX;\n            clientY = ev.clientY;\n            canCancel = ev.button < 3;\n        }\n        else {\n            clientX = ev.changedTouches[0].clientX;\n            clientY = ev.changedTouches[0].clientY;\n        }\n        const args = getMouseArgsForPosition(canvas, clientX, clientY, ev);\n        if (lastWasTouchRef.current !== args.isTouch) {\n            setLastWasTouch(args.isTouch);\n        }\n        if (!isOutside && ev.cancelable && canCancel) {\n            ev.preventDefault();\n        }\n        const [col] = args.location;\n        const headerBounds = isOverHeaderMenu(canvas, col, clientX, clientY);\n        if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind && headerBounds !== undefined) {\n            if (args.button === 0 && downPosition.current?.[0] === col && downPosition.current?.[1] === -1) {\n                onHeaderMenuClick?.(col, headerBounds);\n            }\n        }\n        else if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind) {\n            const action = groupHeaderActionForEvent(args.group, args.bounds, args.localEventX, args.localEventY);\n            if (action !== undefined && args.button === 0) {\n                action.onClick(args);\n            }\n        }\n    }, [eventTargetRef, getMouseArgsForPosition, isOverHeaderMenu, onHeaderMenuClick, groupHeaderActionForEvent]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"click\", onClickImpl, window, false);\n    const onContextMenuImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        const canvas = ref.current;\n        const eventTarget = eventTargetRef?.current;\n        if (canvas === null || (ev.target !== canvas && ev.target !== eventTarget) || onContextMenu === undefined)\n            return;\n        const args = getMouseArgsForPosition(canvas, ev.clientX, ev.clientY, ev);\n        onContextMenu(args, () => {\n            if (ev.cancelable)\n                ev.preventDefault();\n        });\n    }, [eventTargetRef, getMouseArgsForPosition, onContextMenu]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"contextmenu\", onContextMenuImpl, eventTargetRef?.current ?? null, false);\n    const onAnimationFrame = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(values => {\n        damageRegion.current = new _cell_set_js__WEBPACK_IMPORTED_MODULE_13__.CellSet(values.map(x => x.item));\n        hoverValues.current = values;\n        lastDrawRef.current();\n        damageRegion.current = undefined;\n    }, []);\n    const animManagerValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => new _animation_manager_js__WEBPACK_IMPORTED_MODULE_16__.AnimationManager(onAnimationFrame), [onAnimationFrame]);\n    const animationManager = react__WEBPACK_IMPORTED_MODULE_0__.useRef(animManagerValue);\n    animationManager.current = animManagerValue;\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        const am = animationManager.current;\n        if (hoveredItem === undefined || hoveredItem[1] < 0) {\n            am.setHovered(hoveredItem);\n            return;\n        }\n        const cell = getCellContent(hoveredItem, true);\n        const r = getCellRenderer(cell);\n        const cellNeedsHover = (r === undefined && cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.GridCellKind.Custom) ||\n            (r?.needsHover !== undefined && (typeof r.needsHover === \"boolean\" ? r.needsHover : r.needsHover(cell)));\n        am.setHovered(cellNeedsHover ? hoveredItem : undefined);\n    }, [getCellContent, getCellRenderer, hoveredItem]);\n    const hoveredRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const onMouseMoveImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((ev) => {\n        const canvas = ref.current;\n        if (canvas === null)\n            return;\n        const eventTarget = eventTargetRef?.current;\n        const isIndirect = ev.target !== canvas && ev.target !== eventTarget;\n        const args = getMouseArgsForPosition(canvas, ev.clientX, ev.clientY, ev);\n        if (args.kind !== \"out-of-bounds\" && isIndirect && !mouseDown.current && !args.isTouch) {\n            // we are obscured by something else, so we want to not register events if we are not doing anything\n            // important already\n            return;\n        }\n        // the point here is not to trigger re-renders every time the mouse moves over a cell\n        // that doesn't care about the mouse positon.\n        const maybeSetHoveredInfo = (newVal, needPosition) => {\n            setHoveredItemInfo(cv => {\n                if (cv === newVal)\n                    return cv;\n                if (cv?.[0][0] === newVal?.[0][0] &&\n                    cv?.[0][1] === newVal?.[0][1] &&\n                    ((cv?.[1][0] === newVal?.[1][0] && cv?.[1][1] === newVal?.[1][1]) || !needPosition)) {\n                    return cv;\n                }\n                return newVal;\n            });\n        };\n        if (!(0,_event_args_js__WEBPACK_IMPORTED_MODULE_7__.mouseEventArgsAreEqual)(args, hoveredRef.current)) {\n            setDrawCursorOverride(undefined);\n            onItemHovered?.(args);\n            maybeSetHoveredInfo(args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.outOfBoundsKind ? undefined : [args.location, [args.localEventX, args.localEventY]], true);\n            hoveredRef.current = args;\n        }\n        else if (args.kind === \"cell\" || args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind || args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind) {\n            let needsDamageCell = false;\n            let needsHoverPosition = true;\n            if (args.kind === \"cell\") {\n                const toCheck = getCellContent(args.location);\n                const rendererNeeds = getCellRenderer(toCheck)?.needsHoverPosition;\n                // custom cells we will assume need the position if they don't explicitly say they don't, everything\n                // else we will assume doesn't need it.\n                needsHoverPosition = rendererNeeds ?? toCheck.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.GridCellKind.Custom;\n                needsDamageCell = needsHoverPosition;\n            }\n            else if (args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.groupHeaderKind) {\n                needsDamageCell = true;\n            }\n            const newInfo = [args.location, [args.localEventX, args.localEventY]];\n            maybeSetHoveredInfo(newInfo, needsHoverPosition);\n            hoverInfoRef.current = newInfo;\n            if (needsDamageCell) {\n                damageInternal(new _cell_set_js__WEBPACK_IMPORTED_MODULE_13__.CellSet([args.location]));\n            }\n        }\n        const notRowMarkerCol = args.location[0] >= (firstColAccessible ? 0 : 1);\n        setHoveredOnEdge(args.kind === _event_args_js__WEBPACK_IMPORTED_MODULE_7__.headerKind && args.isEdge && notRowMarkerCol && allowResize === true);\n        setOverFill(args.kind === \"cell\" && args.isFillHandle);\n        onMouseMoveRaw?.(ev);\n        onMouseMove(args);\n    }, [\n        eventTargetRef,\n        getMouseArgsForPosition,\n        firstColAccessible,\n        allowResize,\n        onMouseMoveRaw,\n        onMouseMove,\n        onItemHovered,\n        getCellContent,\n        getCellRenderer,\n        damageInternal,\n    ]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"mousemove\", onMouseMoveImpl, window, true);\n    const onKeyDownImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const canvas = ref.current;\n        if (canvas === null)\n            return;\n        let bounds;\n        let location = undefined;\n        if (selection.current !== undefined) {\n            bounds = getBoundsForItem(canvas, selection.current.cell[0], selection.current.cell[1]);\n            location = selection.current.cell;\n        }\n        onKeyDown?.({\n            bounds,\n            stopPropagation: () => event.stopPropagation(),\n            preventDefault: () => event.preventDefault(),\n            cancel: () => undefined,\n            ctrlKey: event.ctrlKey,\n            metaKey: event.metaKey,\n            shiftKey: event.shiftKey,\n            altKey: event.altKey,\n            key: event.key,\n            keyCode: event.keyCode,\n            rawEvent: event,\n            location,\n        });\n    }, [onKeyDown, selection, getBoundsForItem]);\n    const onKeyUpImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const canvas = ref.current;\n        if (canvas === null)\n            return;\n        let bounds;\n        let location = undefined;\n        if (selection.current !== undefined) {\n            bounds = getBoundsForItem(canvas, selection.current.cell[0], selection.current.cell[1]);\n            location = selection.current.cell;\n        }\n        onKeyUp?.({\n            bounds,\n            stopPropagation: () => event.stopPropagation(),\n            preventDefault: () => event.preventDefault(),\n            cancel: () => undefined,\n            ctrlKey: event.ctrlKey,\n            metaKey: event.metaKey,\n            shiftKey: event.shiftKey,\n            altKey: event.altKey,\n            key: event.key,\n            keyCode: event.keyCode,\n            rawEvent: event,\n            location,\n        });\n    }, [onKeyUp, selection, getBoundsForItem]);\n    const refImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((instance) => {\n        ref.current = instance;\n        if (canvasRef !== undefined) {\n            canvasRef.current = instance;\n        }\n    }, [canvasRef]);\n    const onDragStartImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const canvas = ref.current;\n        if (canvas === null || isDraggable === false || isResizing) {\n            event.preventDefault();\n            return;\n        }\n        let dragMime;\n        let dragData;\n        const args = getMouseArgsForPosition(canvas, event.clientX, event.clientY);\n        if (isDraggable !== true && args.kind !== isDraggable) {\n            event.preventDefault();\n            return;\n        }\n        const setData = (mime, payload) => {\n            dragMime = mime;\n            dragData = payload;\n        };\n        let dragImage;\n        let dragImageX;\n        let dragImageY;\n        const setDragImage = (image, x, y) => {\n            dragImage = image;\n            dragImageX = x;\n            dragImageY = y;\n        };\n        let prevented = false;\n        onDragStart?.({\n            ...args,\n            setData,\n            setDragImage,\n            preventDefault: () => (prevented = true),\n            defaultPrevented: () => prevented,\n        });\n        if (!prevented && dragMime !== undefined && dragData !== undefined && event.dataTransfer !== null) {\n            event.dataTransfer.setData(dragMime, dragData);\n            event.dataTransfer.effectAllowed = \"copyLink\";\n            if (dragImage !== undefined && dragImageX !== undefined && dragImageY !== undefined) {\n                event.dataTransfer.setDragImage(dragImage, dragImageX, dragImageY);\n            }\n            else {\n                const [col, row] = args.location;\n                if (row !== undefined) {\n                    const offscreen = document.createElement(\"canvas\");\n                    const boundsForDragTarget = getBoundsForItem(canvas, col, row);\n                    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(boundsForDragTarget !== undefined);\n                    const dpr = Math.ceil(window.devicePixelRatio ?? 1);\n                    offscreen.width = boundsForDragTarget.width * dpr;\n                    offscreen.height = boundsForDragTarget.height * dpr;\n                    const ctx = offscreen.getContext(\"2d\");\n                    if (ctx !== null) {\n                        ctx.scale(dpr, dpr);\n                        ctx.textBaseline = \"middle\";\n                        if (row === -1) {\n                            ctx.font = theme.headerFontFull;\n                            ctx.fillStyle = theme.bgHeader;\n                            ctx.fillRect(0, 0, offscreen.width, offscreen.height);\n                            (0,_render_data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_14__.drawHeader)(ctx, 0, 0, boundsForDragTarget.width, boundsForDragTarget.height, mappedColumns[col], false, theme, false, false, 0, spriteManager, drawHeaderCallback, false);\n                        }\n                        else {\n                            ctx.font = theme.baseFontFull;\n                            ctx.fillStyle = theme.bgCell;\n                            ctx.fillRect(0, 0, offscreen.width, offscreen.height);\n                            (0,_render_data_grid_render_cells_js__WEBPACK_IMPORTED_MODULE_17__.drawCell)(ctx, getCellContent([col, row]), 0, row, false, false, 0, 0, boundsForDragTarget.width, boundsForDragTarget.height, false, theme, theme.bgCell, imageLoader, spriteManager, 1, undefined, false, 0, undefined, undefined, undefined, renderStateProvider, getCellRenderer, () => undefined);\n                        }\n                    }\n                    offscreen.style.left = \"-100%\";\n                    offscreen.style.position = \"absolute\";\n                    offscreen.style.width = `${boundsForDragTarget.width}px`;\n                    offscreen.style.height = `${boundsForDragTarget.height}px`;\n                    document.body.append(offscreen);\n                    event.dataTransfer.setDragImage(offscreen, boundsForDragTarget.width / 2, boundsForDragTarget.height / 2);\n                    window.setTimeout(() => {\n                        offscreen.remove();\n                    }, 0);\n                }\n            }\n        }\n        else {\n            event.preventDefault();\n        }\n    }, [\n        isDraggable,\n        isResizing,\n        getMouseArgsForPosition,\n        onDragStart,\n        getBoundsForItem,\n        theme,\n        mappedColumns,\n        spriteManager,\n        drawHeaderCallback,\n        getCellContent,\n        imageLoader,\n        renderStateProvider,\n        getCellRenderer,\n    ]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"dragstart\", onDragStartImpl, eventTargetRef?.current ?? null, false, false);\n    const activeDropTarget = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const onDragOverImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const canvas = ref.current;\n        if (onDrop !== undefined) {\n            // Need to preventDefault to allow drop\n            event.preventDefault();\n        }\n        if (canvas === null || onDragOverCell === undefined) {\n            return;\n        }\n        const args = getMouseArgsForPosition(canvas, event.clientX, event.clientY);\n        const [rawCol, row] = args.location;\n        const col = rawCol - (firstColAccessible ? 0 : 1);\n        const [activeCol, activeRow] = activeDropTarget.current ?? [];\n        if (activeCol !== col || activeRow !== row) {\n            activeDropTarget.current = [col, row];\n            onDragOverCell([col, row], event.dataTransfer);\n        }\n    }, [firstColAccessible, getMouseArgsForPosition, onDragOverCell, onDrop]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"dragover\", onDragOverImpl, eventTargetRef?.current ?? null, false, false);\n    const onDragEndImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        activeDropTarget.current = undefined;\n        onDragEnd?.();\n    }, [onDragEnd]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"dragend\", onDragEndImpl, eventTargetRef?.current ?? null, false, false);\n    const onDropImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const canvas = ref.current;\n        if (canvas === null || onDrop === undefined) {\n            return;\n        }\n        // Default can mess up sometimes.\n        event.preventDefault();\n        const args = getMouseArgsForPosition(canvas, event.clientX, event.clientY);\n        const [rawCol, row] = args.location;\n        const col = rawCol - (firstColAccessible ? 0 : 1);\n        onDrop([col, row], event.dataTransfer);\n    }, [firstColAccessible, getMouseArgsForPosition, onDrop]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"drop\", onDropImpl, eventTargetRef?.current ?? null, false, false);\n    const onDragLeaveImpl = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        onDragLeave?.();\n    }, [onDragLeave]);\n    (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useEventListener)(\"dragleave\", onDragLeaveImpl, eventTargetRef?.current ?? null, false, false);\n    const selectionRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(selection);\n    selectionRef.current = selection;\n    const focusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const focusElement = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((el) => {\n        // We don't want to steal the focus if we don't currently own the focus.\n        if (ref.current === null || !ref.current.contains(document.activeElement))\n            return;\n        if (el === null && selectionRef.current.current !== undefined) {\n            canvasRef?.current?.focus({\n                preventScroll: true,\n            });\n        }\n        else if (el !== null) {\n            el.focus({\n                preventScroll: true,\n            });\n        }\n        focusRef.current = el;\n    }, [canvasRef]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(forwardedRef, () => ({\n        focus: () => {\n            const el = focusRef.current;\n            // The element in the ref may have been removed however our callback method ref\n            // won't see the removal so bad things happen. Checking to see if the element is\n            // no longer attached is enough to resolve the problem. In the future this\n            // should be replaced with something much more robust.\n            if (el === null || !document.contains(el)) {\n                canvasRef?.current?.focus({\n                    preventScroll: true,\n                });\n            }\n            else {\n                el.focus({\n                    preventScroll: true,\n                });\n            }\n        },\n        getBounds: (col, row) => {\n            if (canvasRef === undefined || canvasRef.current === null) {\n                return undefined;\n            }\n            return getBoundsForItem(canvasRef.current, col ?? 0, row ?? -1);\n        },\n        damage,\n    }), [canvasRef, damage, getBoundsForItem]);\n    const lastFocusedSubdomNode = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const accessibilityTree = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_9__.useDebouncedMemo)(() => {\n        if (width < 50 || experimental?.disableAccessibilityTree === true)\n            return null;\n        let effectiveCols = (0,_render_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_6__.getEffectiveColumns)(mappedColumns, cellXOffset, width, dragAndDropState, translateX);\n        const colOffset = firstColAccessible ? 0 : -1;\n        if (!firstColAccessible && effectiveCols[0]?.sourceIndex === 0) {\n            effectiveCols = effectiveCols.slice(1);\n        }\n        const [fCol, fRow] = selection.current?.cell ?? [];\n        const range = selection.current?.range;\n        const visibleCols = effectiveCols.map(c => c.sourceIndex);\n        const visibleRows = lodash_range_js__WEBPACK_IMPORTED_MODULE_2__(cellYOffset, Math.min(rows, cellYOffset + accessibilityHeight));\n        // Maintain focus within grid if we own it but focused cell is outside visible viewport\n        // and not rendered.\n        if (fCol !== undefined &&\n            fRow !== undefined &&\n            !(visibleCols.includes(fCol) && visibleRows.includes(fRow))) {\n            focusElement(null);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"table\", { key: \"access-tree\", role: \"grid\", \"aria-rowcount\": rows + 1, \"aria-multiselectable\": \"true\", \"aria-colcount\": mappedColumns.length + colOffset },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"thead\", { role: \"rowgroup\" },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"tr\", { role: \"row\", \"aria-rowindex\": 1 }, effectiveCols.map(c => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"th\", { role: \"columnheader\", \"aria-selected\": selection.columns.hasIndex(c.sourceIndex), \"aria-colindex\": c.sourceIndex + 1 + colOffset, tabIndex: -1, onFocus: e => {\n                        if (e.target === focusRef.current)\n                            return;\n                        return onCellFocused?.([c.sourceIndex, -1]);\n                    }, key: c.sourceIndex }, c.title))))),\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"tbody\", { role: \"rowgroup\" }, visibleRows.map(row => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"tr\", { role: \"row\", \"aria-selected\": selection.rows.hasIndex(row), key: row, \"aria-rowindex\": row + 2 }, effectiveCols.map(c => {\n                const col = c.sourceIndex;\n                const key = (0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_10__.packColRowToNumber)(col, row);\n                const focused = fCol === col && fRow === row;\n                const selected = range !== undefined &&\n                    col >= range.x &&\n                    col < range.x + range.width &&\n                    row >= range.y &&\n                    row < range.y + range.height;\n                const id = `glide-cell-${col}-${row}`;\n                const location = [col, row];\n                const cellContent = getCellContent(location, true);\n                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"td\", { key: key, role: \"gridcell\", \"aria-colindex\": col + 1 + colOffset, \"aria-selected\": selected, \"aria-readonly\": (0,_data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.isInnerOnlyCell)(cellContent) || !(0,_data_grid_types_js__WEBPACK_IMPORTED_MODULE_3__.isReadWriteCell)(cellContent), id: id, \"data-testid\": id, onClick: () => {\n                        const canvas = canvasRef?.current;\n                        if (canvas === null || canvas === undefined)\n                            return;\n                        return onKeyDown?.({\n                            bounds: getBoundsForItem(canvas, col, row),\n                            cancel: () => undefined,\n                            preventDefault: () => undefined,\n                            stopPropagation: () => undefined,\n                            ctrlKey: false,\n                            key: \"Enter\",\n                            keyCode: 13,\n                            metaKey: false,\n                            shiftKey: false,\n                            altKey: false,\n                            rawEvent: undefined,\n                            location,\n                        });\n                    }, onFocusCapture: e => {\n                        if (e.target === focusRef.current ||\n                            (lastFocusedSubdomNode.current?.[0] === col &&\n                                lastFocusedSubdomNode.current?.[1] === row))\n                            return;\n                        lastFocusedSubdomNode.current = location;\n                        return onCellFocused?.(location);\n                    }, ref: focused ? focusElement : undefined, tabIndex: -1 }, getRowData(cellContent, getCellRenderer)));\n            })))))));\n    }, [\n        width,\n        mappedColumns,\n        cellXOffset,\n        dragAndDropState,\n        translateX,\n        rows,\n        cellYOffset,\n        accessibilityHeight,\n        selection,\n        focusElement,\n        getCellContent,\n        canvasRef,\n        onKeyDown,\n        getBoundsForItem,\n        onCellFocused,\n    ], 200);\n    const opacityX = freezeColumns === 0 || !fixedShadowX ? 0 : cellXOffset > freezeColumns ? 1 : lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(-translateX / 100, 0, 1);\n    const absoluteOffsetY = -cellYOffset * 32 + translateY;\n    const opacityY = !fixedShadowY ? 0 : lodash_clamp_js__WEBPACK_IMPORTED_MODULE_1__(-absoluteOffsetY / 100, 0, 1);\n    const stickyShadow = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n        if (!opacityX && !opacityY) {\n            return null;\n        }\n        const styleX = {\n            position: \"absolute\",\n            top: 0,\n            left: stickyX,\n            width: width - stickyX,\n            height: height,\n            opacity: opacityX,\n            pointerEvents: \"none\",\n            transition: !smoothScrollX ? \"opacity 0.2s\" : undefined,\n            boxShadow: \"inset 13px 0 10px -13px rgba(0, 0, 0, 0.2)\",\n        };\n        const styleY = {\n            position: \"absolute\",\n            top: totalHeaderHeight,\n            left: 0,\n            width: width,\n            height: height,\n            opacity: opacityY,\n            pointerEvents: \"none\",\n            transition: !smoothScrollY ? \"opacity 0.2s\" : undefined,\n            boxShadow: \"inset 0 13px 10px -13px rgba(0, 0, 0, 0.2)\",\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n            opacityX > 0 && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { id: \"shadow-x\", style: styleX }),\n            opacityY > 0 && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { id: \"shadow-y\", style: styleY })));\n    }, [opacityX, opacityY, stickyX, width, smoothScrollX, totalHeaderHeight, height, smoothScrollY]);\n    const overlayStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n    }), []);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"canvas\", { \"data-testid\": \"data-grid-canvas\", tabIndex: 0, onKeyDown: onKeyDownImpl, onKeyUp: onKeyUpImpl, onFocus: onCanvasFocused, onBlur: onCanvasBlur, ref: refImpl, style: style }, accessibilityTree),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"canvas\", { ref: overlayRef, style: overlayStyle }),\n        stickyShadow));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (react__WEBPACK_IMPORTED_MODULE_0__.memo(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(DataGrid)));\n//# sourceMappingURL=data-grid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2RhdGEtZ3JpZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStCO0FBQ3lJO0FBQ3JCO0FBQzNHO0FBQ2U7QUFDa0Q7QUFDckU7QUFDSTtBQUNnQjtBQUNMO0FBQ087QUFDc0M7QUFDYjtBQUN0QjtBQUNaO0FBQzhFO0FBQzVFO0FBQ1k7QUFDZ0Q7QUFDL0c7QUFDQTtBQUNBLHNCQUFzQiw2REFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1OUJBQXU5QjtBQUNuK0I7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlDQUFZO0FBQzVCO0FBQ0EseUJBQXlCLHlDQUFZO0FBQ3JDLHNDQUFzQywyQ0FBYztBQUNwRCx3QkFBd0IseUNBQVk7QUFDcEMseUJBQXlCLHlDQUFZO0FBQ3JDLGtEQUFrRCwyQ0FBYztBQUNoRSw4Q0FBOEMsMkNBQWM7QUFDNUQsdUJBQXVCLHlDQUFZO0FBQ25DLHdEQUF3RCwyQ0FBYztBQUN0RSw0Q0FBNEMsMkNBQWM7QUFDMUQsNEJBQTRCLHlDQUFZO0FBQ3hDO0FBQ0EsMEJBQTBCLDBDQUFhLFdBQVcsZ0VBQWE7QUFDL0Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2Qix5Q0FBWTtBQUN6QyxzRkFBc0YsdUVBQWdCO0FBQ3RHLG9GQUFvRixzRUFBZTtBQUNuRyxJQUFJLGtEQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsMEJBQTBCLDBFQUFnQjtBQUMxQyxtQ0FBbUMsd0VBQWM7QUFDakQ7QUFDQSw2QkFBNkIsOENBQWlCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdUVBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsOENBQWlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNkVBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDRFQUFrQjtBQUN0QztBQUNBO0FBQ0Esb0JBQW9CLHlFQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpRUFBcUIsY0FBYyxpRUFBcUI7QUFDdkc7QUFDQSxvREFBb0QsaUVBQXFCLGNBQWMsaUVBQXFCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG1FQUFpQixtQ0FBbUMsbUVBQWlCO0FBQ3BJO0FBQ0Esc0JBQXNCLDJEQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBTTtBQUN0QjtBQUNBLHVEQUF1RCwyREFBZSxHQUFHLHNEQUFVO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsMkRBQWUsR0FBRyxzREFBVTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDBEQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx5RUFBZTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix5Q0FBWTtBQUNuQztBQUNBLEtBQUs7QUFDTCx5QkFBeUIseUNBQVk7QUFDckM7QUFDQSxxQ0FBcUMsMENBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxjQUFjLHdCQUF3QixjQUFjO0FBQ3pGLEtBQUs7QUFDTCxJQUFJLGtEQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGdDQUFnQywwQ0FBYSxXQUFXLGtGQUFtQjtBQUMzRTtBQUNBO0FBQ0Esd0JBQXdCLHlDQUFZO0FBQ3BDLHNCQUFzQix5Q0FBWTtBQUNsQyx1QkFBdUIseUNBQVk7QUFDbkMsaUJBQWlCLDhDQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGNBQWM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsY0FBYztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsaUVBQWdCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxNQUFNO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxzRUFBZTtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNFQUFRO0FBQ3BCO0FBQ0E7QUFDQSxZQUFZLHNFQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlDQUFZO0FBQ3BDLElBQUksa0RBQXFCO0FBQ3pCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxrREFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwyQkFBMkIsOENBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0IsMkVBQWlCO0FBQ3JDO0FBQ0EsbUJBQW1CLDhDQUFpQjtBQUNwQywyQkFBMkIsa0RBQU87QUFDbEMsS0FBSztBQUNMO0FBQ0Esb0NBQW9DLDJDQUFjO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrRUFBaUI7QUFDM0MsK0JBQStCLGtFQUFpQjtBQUNoRCw0Q0FBNEMsNkRBQVksWUFBWSwwRUFBcUI7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwwQ0FBYTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDBCQUEwQix5Q0FBWTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDhDQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0RkFBdUI7QUFDakQ7QUFDQSxvQkFBb0IsNkRBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw2QkFBNkIsOENBQWlCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQU07QUFDbEIsK0JBQStCLHdGQUFtQiwwRUFBMEUsMkRBQVM7QUFDckk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQkFBcUIseUNBQVk7QUFDakMseUJBQXlCLHlDQUFZO0FBQ3JDLHNCQUFzQix5Q0FBWTtBQUNsQyw0QkFBNEIsOENBQWlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHNEQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwyREFBZTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksa0VBQWdCO0FBQ3BCLElBQUksa0VBQWdCO0FBQ3BCLHVCQUF1Qix5Q0FBWTtBQUNuQywwQkFBMEIsOENBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJEQUFlO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFnQjtBQUNwQixJQUFJLGtFQUFnQjtBQUNwQix3QkFBd0IsOENBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMkRBQWU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFnQjtBQUNwQiw4QkFBOEIsOENBQWlCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLElBQUksa0VBQWdCO0FBQ3BCLDZCQUE2Qiw4Q0FBaUI7QUFDOUMsbUNBQW1DLGtEQUFPO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw2QkFBNkIsMENBQWEsV0FBVyxvRUFBZ0I7QUFDckUsNkJBQTZCLHlDQUFZO0FBQ3pDO0FBQ0EsSUFBSSxrREFBcUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsNkRBQVk7QUFDN0U7QUFDQTtBQUNBLEtBQUs7QUFDTCx1QkFBdUIseUNBQVk7QUFDbkMsNEJBQTRCLDhDQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYSxzRUFBc0I7QUFDbkM7QUFDQTtBQUNBLDhDQUE4QywyREFBZTtBQUM3RDtBQUNBO0FBQ0EsdURBQXVELHNEQUFVLGtCQUFrQiwyREFBZTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSw2REFBWTtBQUNuRjtBQUNBO0FBQ0EsbUNBQW1DLDJEQUFlO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBTztBQUMxQztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsc0RBQVU7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGtFQUFnQjtBQUNwQiwwQkFBMEIsOENBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCx3QkFBd0IsOENBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxvQkFBb0IsOENBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0Qiw4Q0FBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwREFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtFQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNEVBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsMEJBQTBCO0FBQ3pFLGdEQUFnRCwyQkFBMkI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGtFQUFnQjtBQUNwQiw2QkFBNkIseUNBQVk7QUFDekMsMkJBQTJCLDhDQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFnQjtBQUNwQiwwQkFBMEIsOENBQWlCO0FBQzNDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxrRUFBZ0I7QUFDcEIsdUJBQXVCLDhDQUFpQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFnQjtBQUNwQiw0QkFBNEIsOENBQWlCO0FBQzdDO0FBQ0EsS0FBSztBQUNMLElBQUksa0VBQWdCO0FBQ3BCLHlCQUF5Qix5Q0FBWTtBQUNyQztBQUNBLHFCQUFxQix5Q0FBWTtBQUNqQyx5QkFBeUIsOENBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksc0RBQXlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLGtDQUFrQyx5Q0FBWTtBQUM5Qyw4QkFBOEIsa0VBQWdCO0FBQzlDO0FBQ0E7QUFDQSw0QkFBNEIsNkVBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDRDQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdEQUFtQixZQUFZLGdKQUFnSjtBQUMvTCxZQUFZLGdEQUFtQixZQUFZLGtCQUFrQjtBQUM3RCxnQkFBZ0IsZ0RBQW1CLFNBQVMsaUNBQWlDLDBCQUEwQixnREFBbUIsU0FBUztBQUNuSTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0JBQXNCO0FBQzNDLFlBQVksZ0RBQW1CLFlBQVksa0JBQWtCLDBCQUEwQixnREFBbUIsU0FBUyxnR0FBZ0c7QUFDbk47QUFDQSw0QkFBNEIscUZBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxJQUFJLEdBQUcsSUFBSTtBQUNwRDtBQUNBO0FBQ0Esd0JBQXdCLGdEQUFtQixTQUFTLDhHQUE4RyxvRUFBZSxrQkFBa0Isb0VBQWU7QUFDbE47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix5REFBeUQ7QUFDOUUsYUFBYTtBQUNiLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtHQUFrRyw0Q0FBSztBQUN2RztBQUNBLHlDQUF5Qyw0Q0FBSztBQUM5Qyx5QkFBeUIsMENBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0RBQW1CLENBQUMsMkNBQWM7QUFDbEQsNEJBQTRCLGdEQUFtQixVQUFVLCtCQUErQjtBQUN4Riw0QkFBNEIsZ0RBQW1CLFVBQVUsK0JBQStCO0FBQ3hGLEtBQUs7QUFDTCx5QkFBeUIsMENBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVksZ0RBQW1CLENBQUMsMkNBQWM7QUFDOUMsUUFBUSxnREFBbUIsYUFBYSw0S0FBNEs7QUFDcE4sUUFBUSxnREFBbUIsYUFBYSxzQ0FBc0M7QUFDOUU7QUFDQTtBQUNBLGlFQUFlLHVDQUFVLENBQUMsNkNBQWdCLFdBQVcsRUFBQztBQUN0RCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC9kYXRhLWdyaWQuanM/NjlhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbXB1dGVCb3VuZHMsIGdldENvbHVtbkluZGV4Rm9yWCwgZ2V0RWZmZWN0aXZlQ29sdW1ucywgZ2V0Um93SW5kZXhGb3JZLCBnZXRTdGlja3lXaWR0aCwgcmVjdEJvdHRvbVJpZ2h0LCB1c2VNYXBwZWRDb2x1bW5zLCB9IGZyb20gXCIuL3JlbmRlci9kYXRhLWdyaWQtbGliLmpzXCI7XG5pbXBvcnQgeyBHcmlkQ2VsbEtpbmQsIElubmVyR3JpZENlbGxLaW5kLCBDb21wYWN0U2VsZWN0aW9uLCBpc1JlYWRXcml0ZUNlbGwsIGlzSW5uZXJPbmx5Q2VsbCwgYm9vbGVhbkNlbGxJc0VkaXRhYmxlLCB9IGZyb20gXCIuL2RhdGEtZ3JpZC10eXBlcy5qc1wiO1xuaW1wb3J0IHsgQ2VsbFNldCB9IGZyb20gXCIuL2NlbGwtc2V0LmpzXCI7XG5pbXBvcnQgeyBTcHJpdGVNYW5hZ2VyIH0gZnJvbSBcIi4vZGF0YS1ncmlkLXNwcml0ZXMuanNcIjtcbmltcG9ydCB7IGRpcmVjdGlvbiwgZ2V0U2Nyb2xsQmFyV2lkdGgsIHVzZURlYm91bmNlZE1lbW8sIHVzZUV2ZW50TGlzdGVuZXIgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3V0aWxzLmpzXCI7XG5pbXBvcnQgY2xhbXAgZnJvbSBcImxvZGFzaC9jbGFtcC5qc1wiO1xuaW1wb3J0IG1ha2VSYW5nZSBmcm9tIFwibG9kYXNoL3JhbmdlLmpzXCI7XG5pbXBvcnQgeyBkcmF3R3JpZCB9IGZyb20gXCIuL3JlbmRlci9kYXRhLWdyaWQtcmVuZGVyLmpzXCI7XG5pbXBvcnQge30gZnJvbSBcIi4vcmVuZGVyL2RhdGEtZ3JpZC1yZW5kZXIuYmxpdC5qc1wiO1xuaW1wb3J0IHsgQW5pbWF0aW9uTWFuYWdlciB9IGZyb20gXCIuL2FuaW1hdGlvbi1tYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBSZW5kZXJTdGF0ZVByb3ZpZGVyLCBwYWNrQ29sUm93VG9OdW1iZXIgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3JlbmRlci1zdGF0ZS1wcm92aWRlci5qc1wiO1xuaW1wb3J0IHsgYnJvd3NlcklzRmlyZWZveCwgYnJvd3NlcklzU2FmYXJpIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9icm93c2VyLWRldGVjdC5qc1wiO1xuaW1wb3J0IHsgdXNlQW5pbWF0aW9uUXVldWUgfSBmcm9tIFwiLi91c2UtYW5pbWF0aW9uLXF1ZXVlLmpzXCI7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3N1cHBvcnQuanNcIjtcbmltcG9ydCB7IE91dE9mQm91bmRzUmVnaW9uQXhpcywgb3V0T2ZCb3VuZHNLaW5kLCBncm91cEhlYWRlcktpbmQsIGhlYWRlcktpbmQsIG1vdXNlRXZlbnRBcmdzQXJlRXF1YWwsIH0gZnJvbSBcIi4vZXZlbnQtYXJncy5qc1wiO1xuaW1wb3J0IHsgcG9pbnRJblJlY3QgfSBmcm9tIFwiLi4vLi4vY29tbW9uL21hdGguanNcIjtcbmltcG9ydCB7IGRyYXdDZWxsLCB9IGZyb20gXCIuL3JlbmRlci9kYXRhLWdyaWQtcmVuZGVyLmNlbGxzLmpzXCI7XG5pbXBvcnQgeyBnZXRBY3Rpb25Cb3VuZHNGb3JHcm91cCwgZ2V0SGVhZGVyTWVudUJvdW5kcywgZHJhd0hlYWRlciB9IGZyb20gXCIuL3JlbmRlci9kYXRhLWdyaWQtcmVuZGVyLmhlYWRlci5qc1wiO1xuY29uc3QgZmlsbEhhbmRsZUNsaWNrU2l6ZSA9IDY7XG5jb25zdCBnZXRSb3dEYXRhID0gKGNlbGwsIGdldENlbGxSZW5kZXJlcikgPT4ge1xuICAgIGlmIChjZWxsLmtpbmQgPT09IEdyaWRDZWxsS2luZC5DdXN0b20pXG4gICAgICAgIHJldHVybiBjZWxsLmNvcHlEYXRhO1xuICAgIGNvbnN0IHIgPSBnZXRDZWxsUmVuZGVyZXI/LihjZWxsKTtcbiAgICByZXR1cm4gcj8uZ2V0QWNjZXNzaWJpbGl0eVN0cmluZyhjZWxsKSA/PyBcIlwiO1xufTtcbmNvbnN0IERhdGFHcmlkID0gKHAsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgYWNjZXNzaWJpbGl0eUhlaWdodCwgY29sdW1ucywgY2VsbFhPZmZzZXQ6IGNlbGxYT2Zmc2V0UmVhbCwgY2VsbFlPZmZzZXQsIGhlYWRlckhlaWdodCwgZmlsbEhhbmRsZSA9IGZhbHNlLCBncm91cEhlYWRlckhlaWdodCwgcm93SGVpZ2h0LCByb3dzLCBnZXRDZWxsQ29udGVudCwgZ2V0Um93VGhlbWVPdmVycmlkZSwgb25IZWFkZXJNZW51Q2xpY2ssIGVuYWJsZUdyb3VwcywgaXNGaWxsaW5nLCBvbkNhbnZhc0ZvY3VzZWQsIG9uQ2FudmFzQmx1ciwgaXNGb2N1c2VkLCBzZWxlY3Rpb24sIGZyZWV6ZUNvbHVtbnMsIG9uQ29udGV4dE1lbnUsIGZyZWV6ZVRyYWlsaW5nUm93cywgZml4ZWRTaGFkb3dYID0gdHJ1ZSwgZml4ZWRTaGFkb3dZID0gdHJ1ZSwgZHJhd0ZvY3VzUmluZywgb25Nb3VzZURvd24sIG9uTW91c2VVcCwgb25Nb3VzZU1vdmVSYXcsIG9uTW91c2VNb3ZlLCBvbkl0ZW1Ib3ZlcmVkLCBkcmFnQW5kRHJvcFN0YXRlLCBmaXJzdENvbEFjY2Vzc2libGUsIG9uS2V5RG93biwgb25LZXlVcCwgaGlnaGxpZ2h0UmVnaW9ucywgY2FudmFzUmVmLCBvbkRyYWdTdGFydCwgb25EcmFnRW5kLCBldmVudFRhcmdldFJlZiwgaXNSZXNpemluZywgcmVzaXplQ29sdW1uOiByZXNpemVDb2wsIGlzRHJhZ2dpbmcsIGlzRHJhZ2dhYmxlID0gZmFsc2UsIGFsbG93UmVzaXplLCBkaXNhYmxlZFJvd3MsIGhhc0FwcGVuZFJvdywgZ2V0R3JvdXBEZXRhaWxzLCB0aGVtZSwgcHJlbGlnaHRDZWxscywgaGVhZGVySWNvbnMsIHZlcnRpY2FsQm9yZGVyLCBkcmF3Q2VsbDogZHJhd0NlbGxDYWxsYmFjaywgZHJhd0hlYWRlcjogZHJhd0hlYWRlckNhbGxiYWNrLCBvbkNlbGxGb2N1c2VkLCBvbkRyYWdPdmVyQ2VsbCwgb25Ecm9wLCBvbkRyYWdMZWF2ZSwgaW1hZ2VXaW5kb3dMb2FkZXIsIHNtb290aFNjcm9sbFggPSBmYWxzZSwgc21vb3RoU2Nyb2xsWSA9IGZhbHNlLCBleHBlcmltZW50YWwsIGdldENlbGxSZW5kZXJlciwgfSA9IHA7XG4gICAgY29uc3QgdHJhbnNsYXRlWCA9IHAudHJhbnNsYXRlWCA/PyAwO1xuICAgIGNvbnN0IHRyYW5zbGF0ZVkgPSBwLnRyYW5zbGF0ZVkgPz8gMDtcbiAgICBjb25zdCBjZWxsWE9mZnNldCA9IE1hdGgubWF4KGZyZWV6ZUNvbHVtbnMsIE1hdGgubWluKGNvbHVtbnMubGVuZ3RoIC0gMSwgY2VsbFhPZmZzZXRSZWFsKSk7XG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGltYWdlTG9hZGVyID0gaW1hZ2VXaW5kb3dMb2FkZXI7XG4gICAgY29uc3QgZGFtYWdlUmVnaW9uID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgW3Njcm9sbGluZywgc2V0U2Nyb2xsaW5nXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBob3ZlclZhbHVlcyA9IFJlYWN0LnVzZVJlZihbXSk7XG4gICAgY29uc3QgbGFzdEJsaXREYXRhID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgW2hvdmVyZWRJdGVtSW5mbywgc2V0SG92ZXJlZEl0ZW1JbmZvXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgY29uc3QgW2hvdmVyZWRPbkVkZ2UsIHNldEhvdmVyZWRPbkVkZ2VdID0gUmVhY3QudXNlU3RhdGUoKTtcbiAgICBjb25zdCBvdmVybGF5UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IFtkcmF3Q3Vyc29yT3ZlcnJpZGUsIHNldERyYXdDdXJzb3JPdmVycmlkZV0gPSBSZWFjdC51c2VTdGF0ZSgpO1xuICAgIGNvbnN0IFtsYXN0V2FzVG91Y2gsIHNldExhc3RXYXNUb3VjaF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgbGFzdFdhc1RvdWNoUmVmID0gUmVhY3QudXNlUmVmKGxhc3RXYXNUb3VjaCk7XG4gICAgbGFzdFdhc1RvdWNoUmVmLmN1cnJlbnQgPSBsYXN0V2FzVG91Y2g7XG4gICAgY29uc3Qgc3ByaXRlTWFuYWdlciA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gbmV3IFNwcml0ZU1hbmFnZXIoaGVhZGVySWNvbnMsICgpID0+IHtcbiAgICAgICAgbGFzdEFyZ3NSZWYuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGFzdERyYXdSZWYuY3VycmVudCgpO1xuICAgIH0pLCBbaGVhZGVySWNvbnNdKTtcbiAgICBjb25zdCB0b3RhbEhlYWRlckhlaWdodCA9IGVuYWJsZUdyb3VwcyA/IGdyb3VwSGVhZGVySGVpZ2h0ICsgaGVhZGVySGVpZ2h0IDogaGVhZGVySGVpZ2h0O1xuICAgIGNvbnN0IHNjcm9sbGluZ1N0b3BSZWYgPSBSZWFjdC51c2VSZWYoLTEpO1xuICAgIGNvbnN0IGVuYWJsZUZpcmVmb3hSZXNjYWxpbmcgPSAoZXhwZXJpbWVudGFsPy5lbmFibGVGaXJlZm94UmVzY2FsaW5nID8/IGZhbHNlKSAmJiBicm93c2VySXNGaXJlZm94LnZhbHVlO1xuICAgIGNvbnN0IGVuYWJsZVNhZmFyaVJlc2NhbGluZyA9IChleHBlcmltZW50YWw/LmVuYWJsZVNhZmFyaVJlc2NhbGluZyA/PyBmYWxzZSkgJiYgYnJvd3NlcklzU2FmYXJpLnZhbHVlO1xuICAgIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA9PT0gMSB8fCAoIWVuYWJsZUZpcmVmb3hSZXNjYWxpbmcgJiYgIWVuYWJsZVNhZmFyaVJlc2NhbGluZykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gZ28gaW50byBzY3JvbGwgbW9kZSBmb3IgYSBzaW5nbGUgcmVwYWludFxuICAgICAgICBpZiAoc2Nyb2xsaW5nU3RvcFJlZi5jdXJyZW50ICE9PSAtMSkge1xuICAgICAgICAgICAgc2V0U2Nyb2xsaW5nKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoc2Nyb2xsaW5nU3RvcFJlZi5jdXJyZW50KTtcbiAgICAgICAgc2Nyb2xsaW5nU3RvcFJlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc2V0U2Nyb2xsaW5nKGZhbHNlKTtcbiAgICAgICAgICAgIHNjcm9sbGluZ1N0b3BSZWYuY3VycmVudCA9IC0xO1xuICAgICAgICB9LCAyMDApO1xuICAgIH0sIFtjZWxsWU9mZnNldCwgY2VsbFhPZmZzZXQsIHRyYW5zbGF0ZVgsIHRyYW5zbGF0ZVksIGVuYWJsZUZpcmVmb3hSZXNjYWxpbmcsIGVuYWJsZVNhZmFyaVJlc2NhbGluZ10pO1xuICAgIGNvbnN0IG1hcHBlZENvbHVtbnMgPSB1c2VNYXBwZWRDb2x1bW5zKGNvbHVtbnMsIGZyZWV6ZUNvbHVtbnMpO1xuICAgIGNvbnN0IHN0aWNreVggPSBmaXhlZFNoYWRvd1ggPyBnZXRTdGlja3lXaWR0aChtYXBwZWRDb2x1bW5zLCBkcmFnQW5kRHJvcFN0YXRlKSA6IDA7XG4gICAgLy8gcm93OiAtMSA9PT0gY29sdW1uSGVhZGVyLCAtMiA9PT0gZ3JvdXBIZWFkZXJcbiAgICBjb25zdCBnZXRCb3VuZHNGb3JJdGVtID0gUmVhY3QudXNlQ2FsbGJhY2soKGNhbnZhcywgY29sLCByb3cpID0+IHtcbiAgICAgICAgY29uc3QgcmVjdCA9IGNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgaWYgKGNvbCA+PSBtYXBwZWRDb2x1bW5zLmxlbmd0aCB8fCByb3cgPj0gcm93cykge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzY2FsZSA9IHJlY3Qud2lkdGggLyB3aWR0aDtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gY29tcHV0ZUJvdW5kcyhjb2wsIHJvdywgd2lkdGgsIGhlaWdodCwgZ3JvdXBIZWFkZXJIZWlnaHQsIHRvdGFsSGVhZGVySGVpZ2h0LCBjZWxsWE9mZnNldCwgY2VsbFlPZmZzZXQsIHRyYW5zbGF0ZVgsIHRyYW5zbGF0ZVksIHJvd3MsIGZyZWV6ZUNvbHVtbnMsIGZyZWV6ZVRyYWlsaW5nUm93cywgbWFwcGVkQ29sdW1ucywgcm93SGVpZ2h0KTtcbiAgICAgICAgaWYgKHNjYWxlICE9PSAxKSB7XG4gICAgICAgICAgICByZXN1bHQueCAqPSBzY2FsZTtcbiAgICAgICAgICAgIHJlc3VsdC55ICo9IHNjYWxlO1xuICAgICAgICAgICAgcmVzdWx0LndpZHRoICo9IHNjYWxlO1xuICAgICAgICAgICAgcmVzdWx0LmhlaWdodCAqPSBzY2FsZTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQueCArPSByZWN0Lng7XG4gICAgICAgIHJlc3VsdC55ICs9IHJlY3QueTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LCBbXG4gICAgICAgIHdpZHRoLFxuICAgICAgICBoZWlnaHQsXG4gICAgICAgIGdyb3VwSGVhZGVySGVpZ2h0LFxuICAgICAgICB0b3RhbEhlYWRlckhlaWdodCxcbiAgICAgICAgY2VsbFhPZmZzZXQsXG4gICAgICAgIGNlbGxZT2Zmc2V0LFxuICAgICAgICB0cmFuc2xhdGVYLFxuICAgICAgICB0cmFuc2xhdGVZLFxuICAgICAgICByb3dzLFxuICAgICAgICBmcmVlemVDb2x1bW5zLFxuICAgICAgICBmcmVlemVUcmFpbGluZ1Jvd3MsXG4gICAgICAgIG1hcHBlZENvbHVtbnMsXG4gICAgICAgIHJvd0hlaWdodCxcbiAgICBdKTtcbiAgICBjb25zdCBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbiA9IFJlYWN0LnVzZUNhbGxiYWNrKChjYW52YXMsIHBvc1gsIHBvc1ksIGV2KSA9PiB7XG4gICAgICAgIGNvbnN0IHJlY3QgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IHNjYWxlID0gcmVjdC53aWR0aCAvIHdpZHRoO1xuICAgICAgICBjb25zdCB4ID0gKHBvc1ggLSByZWN0LmxlZnQpIC8gc2NhbGU7XG4gICAgICAgIGNvbnN0IHkgPSAocG9zWSAtIHJlY3QudG9wKSAvIHNjYWxlO1xuICAgICAgICBjb25zdCBlZGdlRGV0ZWN0aW9uQnVmZmVyID0gNTtcbiAgICAgICAgY29uc3QgZWZmZWN0aXZlQ29scyA9IGdldEVmZmVjdGl2ZUNvbHVtbnMobWFwcGVkQ29sdW1ucywgY2VsbFhPZmZzZXQsIHdpZHRoLCB1bmRlZmluZWQsIHRyYW5zbGF0ZVgpO1xuICAgICAgICBsZXQgYnV0dG9uID0gMDtcbiAgICAgICAgbGV0IGJ1dHRvbnMgPSAwO1xuICAgICAgICBpZiAoZXYgaW5zdGFuY2VvZiBNb3VzZUV2ZW50KSB7XG4gICAgICAgICAgICBidXR0b24gPSBldi5idXR0b247XG4gICAgICAgICAgICBidXR0b25zID0gZXYuYnV0dG9ucztcbiAgICAgICAgfVxuICAgICAgICAvLyAtMSA9PT0gb2ZmIHJpZ2h0IGVkZ2VcbiAgICAgICAgY29uc3QgY29sID0gZ2V0Q29sdW1uSW5kZXhGb3JYKHgsIGVmZmVjdGl2ZUNvbHMsIHRyYW5zbGF0ZVgpO1xuICAgICAgICAvLyAtMTogaGVhZGVyIG9yIGFib3ZlXG4gICAgICAgIC8vIHVuZGVmaW5lZDogb2ZmYm90dG9tXG4gICAgICAgIGNvbnN0IHJvdyA9IGdldFJvd0luZGV4Rm9yWSh5LCBoZWlnaHQsIGVuYWJsZUdyb3VwcywgaGVhZGVySGVpZ2h0LCBncm91cEhlYWRlckhlaWdodCwgcm93cywgcm93SGVpZ2h0LCBjZWxsWU9mZnNldCwgdHJhbnNsYXRlWSwgZnJlZXplVHJhaWxpbmdSb3dzKTtcbiAgICAgICAgY29uc3Qgc2hpZnRLZXkgPSBldj8uc2hpZnRLZXkgPT09IHRydWU7XG4gICAgICAgIGNvbnN0IGN0cmxLZXkgPSBldj8uY3RybEtleSA9PT0gdHJ1ZTtcbiAgICAgICAgY29uc3QgbWV0YUtleSA9IGV2Py5tZXRhS2V5ID09PSB0cnVlO1xuICAgICAgICBjb25zdCBpc1RvdWNoID0gKGV2ICE9PSB1bmRlZmluZWQgJiYgIShldiBpbnN0YW5jZW9mIE1vdXNlRXZlbnQpKSB8fCBldj8ucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIjtcbiAgICAgICAgY29uc3Qgc2Nyb2xsRWRnZSA9IFtcbiAgICAgICAgICAgIHggPCAwID8gLTEgOiB3aWR0aCA8IHggPyAxIDogMCxcbiAgICAgICAgICAgIHkgPCB0b3RhbEhlYWRlckhlaWdodCA/IC0xIDogaGVpZ2h0IDwgeSA/IDEgOiAwLFxuICAgICAgICBdO1xuICAgICAgICBsZXQgcmVzdWx0O1xuICAgICAgICBpZiAoY29sID09PSAtMSB8fCB5IDwgMCB8fCB4IDwgMCB8fCByb3cgPT09IHVuZGVmaW5lZCB8fCB4ID4gd2lkdGggfHwgeSA+IGhlaWdodCkge1xuICAgICAgICAgICAgY29uc3QgaG9yaXpvbnRhbCA9IHggPiB3aWR0aCA/IDEgOiB4IDwgMCA/IC0xIDogMDtcbiAgICAgICAgICAgIGNvbnN0IHZlcnRpY2FsID0geSA+IGhlaWdodCA/IDEgOiB5IDwgMCA/IC0xIDogMDtcbiAgICAgICAgICAgIGxldCBpbm5lckhvcml6b250YWwgPSBob3Jpem9udGFsICogMjtcbiAgICAgICAgICAgIGxldCBpbm5lclZlcnRpY2FsID0gdmVydGljYWwgKiAyO1xuICAgICAgICAgICAgaWYgKGhvcml6b250YWwgPT09IDApXG4gICAgICAgICAgICAgICAgaW5uZXJIb3Jpem9udGFsID0gY29sID09PSAtMSA/IE91dE9mQm91bmRzUmVnaW9uQXhpcy5FbmRQYWRkaW5nIDogT3V0T2ZCb3VuZHNSZWdpb25BeGlzLkNlbnRlcjtcbiAgICAgICAgICAgIGlmICh2ZXJ0aWNhbCA9PT0gMClcbiAgICAgICAgICAgICAgICBpbm5lclZlcnRpY2FsID0gcm93ID09PSB1bmRlZmluZWQgPyBPdXRPZkJvdW5kc1JlZ2lvbkF4aXMuRW5kUGFkZGluZyA6IE91dE9mQm91bmRzUmVnaW9uQXhpcy5DZW50ZXI7XG4gICAgICAgICAgICBsZXQgaXNFZGdlID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoY29sID09PSAtMSAmJiByb3cgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYiA9IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBtYXBwZWRDb2x1bW5zLmxlbmd0aCAtIDEsIC0xKTtcbiAgICAgICAgICAgICAgICBhc3NlcnQoYiAhPT0gdW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICBpc0VkZ2UgPSBwb3NYIDwgYi54ICsgYi53aWR0aCArIGVkZ2VEZXRlY3Rpb25CdWZmZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUaGlzIGlzIHVzZWQgdG8gZW5zdXJlIHRoYXQgY2xpY2tpbmcgb24gdGhlIHNjcm9sbGJhciBkb2Vzbid0IHVuc2V0IHRoZSBzZWxlY3Rpb24uXG4gICAgICAgICAgICAvLyBVbmZvcnR1bmF0ZWx5IHRoaXMgZG9lc24ndCB3b3JrIGZvciBvdmVybGF5IHNjcm9sbGJhcnMgYmVjYXVzZSB0aGV5IGFyZSBqdXN0IGEgYnJva2VuIGludGVyYWN0aW9uXG4gICAgICAgICAgICAvLyBieSBkZXNpZ24uXG4gICAgICAgICAgICBjb25zdCBpc01heWJlU2Nyb2xsYmFyID0gKHggPiB3aWR0aCAmJiB4IDwgd2lkdGggKyBnZXRTY3JvbGxCYXJXaWR0aCgpKSB8fCAoeSA+IGhlaWdodCAmJiB5IDwgaGVpZ2h0ICsgZ2V0U2Nyb2xsQmFyV2lkdGgoKSk7XG4gICAgICAgICAgICByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAga2luZDogb3V0T2ZCb3VuZHNLaW5kLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBbY29sICE9PSAtMSA/IGNvbCA6IHggPCAwID8gMCA6IG1hcHBlZENvbHVtbnMubGVuZ3RoIC0gMSwgcm93ID8/IHJvd3MgLSAxXSxcbiAgICAgICAgICAgICAgICByZWdpb246IFtpbm5lckhvcml6b250YWwsIGlubmVyVmVydGljYWxdLFxuICAgICAgICAgICAgICAgIHNoaWZ0S2V5LFxuICAgICAgICAgICAgICAgIGN0cmxLZXksXG4gICAgICAgICAgICAgICAgbWV0YUtleSxcbiAgICAgICAgICAgICAgICBpc0VkZ2UsXG4gICAgICAgICAgICAgICAgaXNUb3VjaCxcbiAgICAgICAgICAgICAgICBidXR0b24sXG4gICAgICAgICAgICAgICAgYnV0dG9ucyxcbiAgICAgICAgICAgICAgICBzY3JvbGxFZGdlLFxuICAgICAgICAgICAgICAgIGlzTWF5YmVTY3JvbGxiYXIsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJvdyA8PSAtMSkge1xuICAgICAgICAgICAgbGV0IGJvdW5kcyA9IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBjb2wsIHJvdyk7XG4gICAgICAgICAgICBhc3NlcnQoYm91bmRzICE9PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgbGV0IGlzRWRnZSA9IGJvdW5kcyAhPT0gdW5kZWZpbmVkICYmIGJvdW5kcy54ICsgYm91bmRzLndpZHRoIC0gcG9zWCA8PSBlZGdlRGV0ZWN0aW9uQnVmZmVyO1xuICAgICAgICAgICAgY29uc3QgcHJldmlvdXNDb2wgPSBjb2wgLSAxO1xuICAgICAgICAgICAgaWYgKHBvc1ggLSBib3VuZHMueCA8PSBlZGdlRGV0ZWN0aW9uQnVmZmVyICYmIHByZXZpb3VzQ29sID49IDApIHtcbiAgICAgICAgICAgICAgICBpc0VkZ2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJvdW5kcyA9IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBwcmV2aW91c0NvbCwgcm93KTtcbiAgICAgICAgICAgICAgICBhc3NlcnQoYm91bmRzICE9PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogZW5hYmxlR3JvdXBzICYmIHJvdyA9PT0gLTIgPyBncm91cEhlYWRlcktpbmQgOiBoZWFkZXJLaW5kLFxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogW3ByZXZpb3VzQ29sLCByb3ddLFxuICAgICAgICAgICAgICAgICAgICBib3VuZHM6IGJvdW5kcyxcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IG1hcHBlZENvbHVtbnNbcHJldmlvdXNDb2xdLmdyb3VwID8/IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGlzRWRnZSxcbiAgICAgICAgICAgICAgICAgICAgc2hpZnRLZXksXG4gICAgICAgICAgICAgICAgICAgIGN0cmxLZXksXG4gICAgICAgICAgICAgICAgICAgIG1ldGFLZXksXG4gICAgICAgICAgICAgICAgICAgIGlzVG91Y2gsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsRXZlbnRYOiBwb3NYIC0gYm91bmRzLngsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsRXZlbnRZOiBwb3NZIC0gYm91bmRzLnksXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbixcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9ucyxcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsRWRnZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0ge1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBlbmFibGVHcm91cHMgJiYgcm93ID09PSAtMiA/IGdyb3VwSGVhZGVyS2luZCA6IGhlYWRlcktpbmQsXG4gICAgICAgICAgICAgICAgICAgIGdyb3VwOiBtYXBwZWRDb2x1bW5zW2NvbF0uZ3JvdXAgPz8gXCJcIixcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IFtjb2wsIHJvd10sXG4gICAgICAgICAgICAgICAgICAgIGJvdW5kczogYm91bmRzLFxuICAgICAgICAgICAgICAgICAgICBpc0VkZ2UsXG4gICAgICAgICAgICAgICAgICAgIHNoaWZ0S2V5LFxuICAgICAgICAgICAgICAgICAgICBjdHJsS2V5LFxuICAgICAgICAgICAgICAgICAgICBtZXRhS2V5LFxuICAgICAgICAgICAgICAgICAgICBpc1RvdWNoLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbEV2ZW50WDogcG9zWCAtIGJvdW5kcy54LFxuICAgICAgICAgICAgICAgICAgICBsb2NhbEV2ZW50WTogcG9zWSAtIGJvdW5kcy55LFxuICAgICAgICAgICAgICAgICAgICBidXR0b24sXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbnMsXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbEVkZ2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kcyA9IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBjb2wsIHJvdyk7XG4gICAgICAgICAgICBhc3NlcnQoYm91bmRzICE9PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgY29uc3QgaXNFZGdlID0gYm91bmRzICE9PSB1bmRlZmluZWQgJiYgYm91bmRzLnggKyBib3VuZHMud2lkdGggLSBwb3NYIDwgZWRnZURldGVjdGlvbkJ1ZmZlcjtcbiAgICAgICAgICAgIGxldCBpc0ZpbGxIYW5kbGUgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChmaWxsSGFuZGxlICYmIHNlbGVjdGlvbi5jdXJyZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxsSGFuZGxlTG9jYXRpb24gPSByZWN0Qm90dG9tUmlnaHQoc2VsZWN0aW9uLmN1cnJlbnQucmFuZ2UpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGxIYW5kbGVDZWxsQm91bmRzID0gZ2V0Qm91bmRzRm9ySXRlbShjYW52YXMsIGZpbGxIYW5kbGVMb2NhdGlvblswXSwgZmlsbEhhbmRsZUxvY2F0aW9uWzFdKTtcbiAgICAgICAgICAgICAgICBpZiAoZmlsbEhhbmRsZUNlbGxCb3VuZHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVMb2dpY2FsQ2VudGVyWCA9IGZpbGxIYW5kbGVDZWxsQm91bmRzLnggKyBmaWxsSGFuZGxlQ2VsbEJvdW5kcy53aWR0aCAtIDI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZUxvZ2ljYWxDZW50ZXJZID0gZmlsbEhhbmRsZUNlbGxCb3VuZHMueSArIGZpbGxIYW5kbGVDZWxsQm91bmRzLmhlaWdodCAtIDI7XG4gICAgICAgICAgICAgICAgICAgIC8vY2hlY2sgaWYgcG9zWCBhbmQgcG9zWSBhcmUgd2l0aGluIGZpbGxIYW5kbGVDbGlja1NpemUgZnJvbSBoYW5kbGVMb2dpY2FsQ2VudGVyXG4gICAgICAgICAgICAgICAgICAgIGlzRmlsbEhhbmRsZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyhoYW5kbGVMb2dpY2FsQ2VudGVyWCAtIHBvc1gpIDwgZmlsbEhhbmRsZUNsaWNrU2l6ZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKGhhbmRsZUxvZ2ljYWxDZW50ZXJZIC0gcG9zWSkgPCBmaWxsSGFuZGxlQ2xpY2tTaXplO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICBraW5kOiBcImNlbGxcIixcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogW2NvbCwgcm93XSxcbiAgICAgICAgICAgICAgICBib3VuZHM6IGJvdW5kcyxcbiAgICAgICAgICAgICAgICBpc0VkZ2UsXG4gICAgICAgICAgICAgICAgc2hpZnRLZXksXG4gICAgICAgICAgICAgICAgY3RybEtleSxcbiAgICAgICAgICAgICAgICBpc0ZpbGxIYW5kbGUsXG4gICAgICAgICAgICAgICAgbWV0YUtleSxcbiAgICAgICAgICAgICAgICBpc1RvdWNoLFxuICAgICAgICAgICAgICAgIGxvY2FsRXZlbnRYOiBwb3NYIC0gYm91bmRzLngsXG4gICAgICAgICAgICAgICAgbG9jYWxFdmVudFk6IHBvc1kgLSBib3VuZHMueSxcbiAgICAgICAgICAgICAgICBidXR0b24sXG4gICAgICAgICAgICAgICAgYnV0dG9ucyxcbiAgICAgICAgICAgICAgICBzY3JvbGxFZGdlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIFtcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIG1hcHBlZENvbHVtbnMsXG4gICAgICAgIGNlbGxYT2Zmc2V0LFxuICAgICAgICB0cmFuc2xhdGVYLFxuICAgICAgICBoZWlnaHQsXG4gICAgICAgIGVuYWJsZUdyb3VwcyxcbiAgICAgICAgaGVhZGVySGVpZ2h0LFxuICAgICAgICBncm91cEhlYWRlckhlaWdodCxcbiAgICAgICAgcm93cyxcbiAgICAgICAgcm93SGVpZ2h0LFxuICAgICAgICBjZWxsWU9mZnNldCxcbiAgICAgICAgdHJhbnNsYXRlWSxcbiAgICAgICAgZnJlZXplVHJhaWxpbmdSb3dzLFxuICAgICAgICBnZXRCb3VuZHNGb3JJdGVtLFxuICAgICAgICBmaWxsSGFuZGxlLFxuICAgICAgICBzZWxlY3Rpb24sXG4gICAgICAgIHRvdGFsSGVhZGVySGVpZ2h0LFxuICAgIF0pO1xuICAgIGNvbnN0IFtob3ZlcmVkSXRlbV0gPSBob3ZlcmVkSXRlbUluZm8gPz8gW107XG4gICAgY29uc3QgZW5xdWV1ZVJlZiA9IFJlYWN0LnVzZVJlZigoKSA9PiB7XG4gICAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICB9KTtcbiAgICBjb25zdCBob3ZlckluZm9SZWYgPSBSZWFjdC51c2VSZWYoaG92ZXJlZEl0ZW1JbmZvKTtcbiAgICBob3ZlckluZm9SZWYuY3VycmVudCA9IGhvdmVyZWRJdGVtSW5mbztcbiAgICBjb25zdCBbYnVmZmVyQUN0eCwgYnVmZmVyQkN0eF0gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgIGNvbnN0IGIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICBhLnN0eWxlW1wiZGlzcGxheVwiXSA9IFwibm9uZVwiO1xuICAgICAgICBhLnN0eWxlW1wib3BhY2l0eVwiXSA9IFwiMFwiO1xuICAgICAgICBhLnN0eWxlW1wicG9zaXRpb25cIl0gPSBcImZpeGVkXCI7XG4gICAgICAgIGIuc3R5bGVbXCJkaXNwbGF5XCJdID0gXCJub25lXCI7XG4gICAgICAgIGIuc3R5bGVbXCJvcGFjaXR5XCJdID0gXCIwXCI7XG4gICAgICAgIGIuc3R5bGVbXCJwb3NpdGlvblwiXSA9IFwiZml4ZWRcIjtcbiAgICAgICAgcmV0dXJuIFthLmdldENvbnRleHQoXCIyZFwiLCB7IGFscGhhOiBmYWxzZSB9KSwgYi5nZXRDb250ZXh0KFwiMmRcIiwgeyBhbHBoYTogZmFsc2UgfSldO1xuICAgIH0sIFtdKTtcbiAgICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoYnVmZmVyQUN0eCA9PT0gbnVsbCB8fCBidWZmZXJCQ3R4ID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kKGJ1ZmZlckFDdHguY2FudmFzKTtcbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZChidWZmZXJCQ3R4LmNhbnZhcyk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBidWZmZXJBQ3R4LmNhbnZhcy5yZW1vdmUoKTtcbiAgICAgICAgICAgIGJ1ZmZlckJDdHguY2FudmFzLnJlbW92ZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtidWZmZXJBQ3R4LCBidWZmZXJCQ3R4XSk7XG4gICAgY29uc3QgcmVuZGVyU3RhdGVQcm92aWRlciA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gbmV3IFJlbmRlclN0YXRlUHJvdmlkZXIoKSwgW10pO1xuICAgIGNvbnN0IG1heERQUiA9IGVuYWJsZUZpcmVmb3hSZXNjYWxpbmcgJiYgc2Nyb2xsaW5nID8gMSA6IGVuYWJsZVNhZmFyaVJlc2NhbGluZyAmJiBzY3JvbGxpbmcgPyAyIDogNTtcbiAgICBjb25zdCBtaW5pbXVtQ2VsbFdpZHRoID0gZXhwZXJpbWVudGFsPy5kaXNhYmxlTWluaW11bUNlbGxXaWR0aCA9PT0gdHJ1ZSA/IDEgOiAxMDtcbiAgICBjb25zdCBsYXN0QXJnc1JlZiA9IFJlYWN0LnVzZVJlZigpO1xuICAgIGNvbnN0IGNhbnZhc0N0eCA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCBvdmVybGF5Q3R4ID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGRyYXcgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlZi5jdXJyZW50O1xuICAgICAgICBjb25zdCBvdmVybGF5ID0gb3ZlcmxheVJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoY2FudmFzID09PSBudWxsIHx8IG92ZXJsYXkgPT09IG51bGwpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChjYW52YXNDdHguY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY2FudmFzQ3R4LmN1cnJlbnQgPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIsIHsgYWxwaGE6IGZhbHNlIH0pO1xuICAgICAgICAgICAgY2FudmFzLndpZHRoID0gMDtcbiAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvdmVybGF5Q3R4LmN1cnJlbnQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIG92ZXJsYXlDdHguY3VycmVudCA9IG92ZXJsYXkuZ2V0Q29udGV4dChcIjJkXCIsIHsgYWxwaGE6IGZhbHNlIH0pO1xuICAgICAgICAgICAgb3ZlcmxheS53aWR0aCA9IDA7XG4gICAgICAgICAgICBvdmVybGF5LmhlaWdodCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhbnZhc0N0eC5jdXJyZW50ID09PSBudWxsIHx8IG92ZXJsYXlDdHguY3VycmVudCA9PT0gbnVsbCB8fCBidWZmZXJBQ3R4ID09PSBudWxsIHx8IGJ1ZmZlckJDdHggPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZGlkT3ZlcnJpZGUgPSBmYWxzZTtcbiAgICAgICAgY29uc3Qgb3ZlcnJpZGVDdXJzb3IgPSAoY3Vyc29yKSA9PiB7XG4gICAgICAgICAgICBkaWRPdmVycmlkZSA9IHRydWU7XG4gICAgICAgICAgICBzZXREcmF3Q3Vyc29yT3ZlcnJpZGUoY3Vyc29yKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgbGFzdCA9IGxhc3RBcmdzUmVmLmN1cnJlbnQ7XG4gICAgICAgIGNvbnN0IGN1cnJlbnQgPSB7XG4gICAgICAgICAgICBoZWFkZXJDYW52YXNDdHg6IG92ZXJsYXlDdHguY3VycmVudCxcbiAgICAgICAgICAgIGNhbnZhc0N0eDogY2FudmFzQ3R4LmN1cnJlbnQsXG4gICAgICAgICAgICBidWZmZXJBQ3R4LFxuICAgICAgICAgICAgYnVmZmVyQkN0eCxcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgY2VsbFhPZmZzZXQsXG4gICAgICAgICAgICBjZWxsWU9mZnNldCxcbiAgICAgICAgICAgIHRyYW5zbGF0ZVg6IE1hdGgucm91bmQodHJhbnNsYXRlWCksXG4gICAgICAgICAgICB0cmFuc2xhdGVZOiBNYXRoLnJvdW5kKHRyYW5zbGF0ZVkpLFxuICAgICAgICAgICAgbWFwcGVkQ29sdW1ucyxcbiAgICAgICAgICAgIGVuYWJsZUdyb3VwcyxcbiAgICAgICAgICAgIGZyZWV6ZUNvbHVtbnMsXG4gICAgICAgICAgICBkcmFnQW5kRHJvcFN0YXRlLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgICBoZWFkZXJIZWlnaHQsXG4gICAgICAgICAgICBncm91cEhlYWRlckhlaWdodCxcbiAgICAgICAgICAgIGRpc2FibGVkUm93czogZGlzYWJsZWRSb3dzID8/IENvbXBhY3RTZWxlY3Rpb24uZW1wdHkoKSxcbiAgICAgICAgICAgIHJvd0hlaWdodCxcbiAgICAgICAgICAgIHZlcnRpY2FsQm9yZGVyLFxuICAgICAgICAgICAgaXNSZXNpemluZyxcbiAgICAgICAgICAgIHJlc2l6ZUNvbCxcbiAgICAgICAgICAgIGlzRm9jdXNlZCxcbiAgICAgICAgICAgIHNlbGVjdGlvbixcbiAgICAgICAgICAgIGZpbGxIYW5kbGUsXG4gICAgICAgICAgICBkcmF3Q2VsbENhbGxiYWNrLFxuICAgICAgICAgICAgaGFzQXBwZW5kUm93LFxuICAgICAgICAgICAgb3ZlcnJpZGVDdXJzb3IsXG4gICAgICAgICAgICBtYXhTY2FsZUZhY3RvcjogbWF4RFBSLFxuICAgICAgICAgICAgZnJlZXplVHJhaWxpbmdSb3dzLFxuICAgICAgICAgICAgcm93cyxcbiAgICAgICAgICAgIGRyYXdGb2N1czogZHJhd0ZvY3VzUmluZyxcbiAgICAgICAgICAgIGdldENlbGxDb250ZW50LFxuICAgICAgICAgICAgZ2V0R3JvdXBEZXRhaWxzOiBnZXRHcm91cERldGFpbHMgPz8gKG5hbWUgPT4gKHsgbmFtZSB9KSksXG4gICAgICAgICAgICBnZXRSb3dUaGVtZU92ZXJyaWRlLFxuICAgICAgICAgICAgZHJhd0hlYWRlckNhbGxiYWNrLFxuICAgICAgICAgICAgcHJlbGlnaHRDZWxscyxcbiAgICAgICAgICAgIGhpZ2hsaWdodFJlZ2lvbnMsXG4gICAgICAgICAgICBpbWFnZUxvYWRlcixcbiAgICAgICAgICAgIGxhc3RCbGl0RGF0YSxcbiAgICAgICAgICAgIGRhbWFnZTogZGFtYWdlUmVnaW9uLmN1cnJlbnQsXG4gICAgICAgICAgICBob3ZlclZhbHVlczogaG92ZXJWYWx1ZXMuY3VycmVudCxcbiAgICAgICAgICAgIGhvdmVySW5mbzogaG92ZXJJbmZvUmVmLmN1cnJlbnQsXG4gICAgICAgICAgICBzcHJpdGVNYW5hZ2VyLFxuICAgICAgICAgICAgc2Nyb2xsaW5nLFxuICAgICAgICAgICAgaHlwZXJXcmFwcGluZzogZXhwZXJpbWVudGFsPy5oeXBlcldyYXBwaW5nID8/IGZhbHNlLFxuICAgICAgICAgICAgdG91Y2hNb2RlOiBsYXN0V2FzVG91Y2gsXG4gICAgICAgICAgICBlbnF1ZXVlOiBlbnF1ZXVlUmVmLmN1cnJlbnQsXG4gICAgICAgICAgICByZW5kZXJTdGF0ZVByb3ZpZGVyLFxuICAgICAgICAgICAgcmVuZGVyU3RyYXRlZ3k6IGV4cGVyaW1lbnRhbD8ucmVuZGVyU3RyYXRlZ3kgPz8gKGJyb3dzZXJJc1NhZmFyaS52YWx1ZSA/IFwiZG91YmxlLWJ1ZmZlclwiIDogXCJzaW5nbGUtYnVmZmVyXCIpLFxuICAgICAgICAgICAgZ2V0Q2VsbFJlbmRlcmVyLFxuICAgICAgICAgICAgbWluaW11bUNlbGxXaWR0aCxcbiAgICAgICAgfTtcbiAgICAgICAgLy8gVGhpcyBjb25mdXNpbmcgYml0IG9mIGNvZGUgZHVlIHRvIHNvbWUgcG9vciBkZXNpZ24uIExvbmcgc3Rvcnkgc2hvcnQsIHRoZSBkYW1hZ2UgcHJvcGVydHkgaXMgb25seSB1c2VkXG4gICAgICAgIC8vIHdpdGggd2hhdCBpcyBlZmZlY3RpdmVseSB0aGUgXCJsYXN0IGFyZ3NcIiBmb3IgdGhlIGxhc3Qgbm9ybWFsIGRyYXcgYW55d2F5LiBXZSBkb24ndCB3YW50IHRoZSBkcmF3aW5nIGNvZGVcbiAgICAgICAgLy8gdG8gbG9vayBhdCB0aGlzIGFuZCBnbyBcInNoaXQgZGF3Zywgbm90aGluZyBjaGFuZ2VkXCIgc28gd2UgZm9yY2UgaXQgdG8gZHJhdyBmcmFzaCwgYnV0IHRoZSBkYW1hZ2UgcmVzdHJpY3RzXG4gICAgICAgIC8vIHRoZSBkcmF3IGFueXdheS5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gRGVhciBmdXR1cmUgSmFzb24sIEknbSBzb3JyeS4gSXQgd2FzIGV4cGVkaWVudCwgaXQgd29ya2VkLCBhbmQgaGFkIGFsbW9zdCB6ZXJvIHBlcmYgb3ZlcmhlYWQuIFRIZSB1bml2ZXJzZVxuICAgICAgICAvLyBiYXNpY2FsbHkgbWFkZSBtZSBkbyBpdC4gV2hhdCBjaG9pY2UgZGlkIEkgaGF2ZT9cbiAgICAgICAgaWYgKGN1cnJlbnQuZGFtYWdlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGxhc3RBcmdzUmVmLmN1cnJlbnQgPSBjdXJyZW50O1xuICAgICAgICAgICAgZHJhd0dyaWQoY3VycmVudCwgbGFzdCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkcmF3R3JpZChjdXJyZW50LCB1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGRvbid0IHJlc2V0IG9uIGRhbWFnZSBldmVudHNcbiAgICAgICAgaWYgKCFkaWRPdmVycmlkZSAmJiAoY3VycmVudC5kYW1hZ2UgPT09IHVuZGVmaW5lZCB8fCBjdXJyZW50LmRhbWFnZS5oYXMoaG92ZXJJbmZvUmVmPy5jdXJyZW50Py5bMF0pKSkge1xuICAgICAgICAgICAgc2V0RHJhd0N1cnNvck92ZXJyaWRlKHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICB9LCBbXG4gICAgICAgIGJ1ZmZlckFDdHgsXG4gICAgICAgIGJ1ZmZlckJDdHgsXG4gICAgICAgIHdpZHRoLFxuICAgICAgICBoZWlnaHQsXG4gICAgICAgIGNlbGxYT2Zmc2V0LFxuICAgICAgICBjZWxsWU9mZnNldCxcbiAgICAgICAgdHJhbnNsYXRlWCxcbiAgICAgICAgdHJhbnNsYXRlWSxcbiAgICAgICAgbWFwcGVkQ29sdW1ucyxcbiAgICAgICAgZW5hYmxlR3JvdXBzLFxuICAgICAgICBmcmVlemVDb2x1bW5zLFxuICAgICAgICBkcmFnQW5kRHJvcFN0YXRlLFxuICAgICAgICB0aGVtZSxcbiAgICAgICAgaGVhZGVySGVpZ2h0LFxuICAgICAgICBncm91cEhlYWRlckhlaWdodCxcbiAgICAgICAgZGlzYWJsZWRSb3dzLFxuICAgICAgICByb3dIZWlnaHQsXG4gICAgICAgIHZlcnRpY2FsQm9yZGVyLFxuICAgICAgICBpc1Jlc2l6aW5nLFxuICAgICAgICBoYXNBcHBlbmRSb3csXG4gICAgICAgIHJlc2l6ZUNvbCxcbiAgICAgICAgaXNGb2N1c2VkLFxuICAgICAgICBzZWxlY3Rpb24sXG4gICAgICAgIGZpbGxIYW5kbGUsXG4gICAgICAgIGZyZWV6ZVRyYWlsaW5nUm93cyxcbiAgICAgICAgcm93cyxcbiAgICAgICAgZHJhd0ZvY3VzUmluZyxcbiAgICAgICAgbWF4RFBSLFxuICAgICAgICBnZXRDZWxsQ29udGVudCxcbiAgICAgICAgZ2V0R3JvdXBEZXRhaWxzLFxuICAgICAgICBnZXRSb3dUaGVtZU92ZXJyaWRlLFxuICAgICAgICBkcmF3Q2VsbENhbGxiYWNrLFxuICAgICAgICBkcmF3SGVhZGVyQ2FsbGJhY2ssXG4gICAgICAgIHByZWxpZ2h0Q2VsbHMsXG4gICAgICAgIGhpZ2hsaWdodFJlZ2lvbnMsXG4gICAgICAgIGltYWdlTG9hZGVyLFxuICAgICAgICBzcHJpdGVNYW5hZ2VyLFxuICAgICAgICBzY3JvbGxpbmcsXG4gICAgICAgIGV4cGVyaW1lbnRhbD8uaHlwZXJXcmFwcGluZyxcbiAgICAgICAgZXhwZXJpbWVudGFsPy5yZW5kZXJTdHJhdGVneSxcbiAgICAgICAgbGFzdFdhc1RvdWNoLFxuICAgICAgICByZW5kZXJTdGF0ZVByb3ZpZGVyLFxuICAgICAgICBnZXRDZWxsUmVuZGVyZXIsXG4gICAgICAgIG1pbmltdW1DZWxsV2lkdGgsXG4gICAgXSk7XG4gICAgY29uc3QgbGFzdERyYXdSZWYgPSBSZWFjdC51c2VSZWYoZHJhdyk7XG4gICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgZHJhdygpO1xuICAgICAgICBsYXN0RHJhd1JlZi5jdXJyZW50ID0gZHJhdztcbiAgICB9LCBbZHJhd10pO1xuICAgIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZuID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50Py5mb250cz8ucmVhZHkgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBhd2FpdCBkb2N1bWVudC5mb250cy5yZWFkeTtcbiAgICAgICAgICAgIGxhc3RBcmdzUmVmLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBsYXN0RHJhd1JlZi5jdXJyZW50KCk7XG4gICAgICAgIH07XG4gICAgICAgIHZvaWQgZm4oKTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgZGFtYWdlSW50ZXJuYWwgPSBSZWFjdC51c2VDYWxsYmFjaygobG9jYXRpb25zKSA9PiB7XG4gICAgICAgIGRhbWFnZVJlZ2lvbi5jdXJyZW50ID0gbG9jYXRpb25zO1xuICAgICAgICBsYXN0RHJhd1JlZi5jdXJyZW50KCk7XG4gICAgICAgIGRhbWFnZVJlZ2lvbi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBlbnF1ZXVlID0gdXNlQW5pbWF0aW9uUXVldWUoZGFtYWdlSW50ZXJuYWwpO1xuICAgIGVucXVldWVSZWYuY3VycmVudCA9IGVucXVldWU7XG4gICAgY29uc3QgZGFtYWdlID0gUmVhY3QudXNlQ2FsbGJhY2soKGNlbGxzKSA9PiB7XG4gICAgICAgIGRhbWFnZUludGVybmFsKG5ldyBDZWxsU2V0KGNlbGxzLm1hcCh4ID0+IHguY2VsbCkpKTtcbiAgICB9LCBbZGFtYWdlSW50ZXJuYWxdKTtcbiAgICBpbWFnZUxvYWRlci5zZXRDYWxsYmFjayhkYW1hZ2VJbnRlcm5hbCk7XG4gICAgY29uc3QgW292ZXJGaWxsLCBzZXRPdmVyRmlsbF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2hDb2wsIGhSb3ddID0gaG92ZXJlZEl0ZW0gPz8gW107XG4gICAgY29uc3QgaGVhZGVySG92ZXJlZCA9IGhDb2wgIT09IHVuZGVmaW5lZCAmJiBoUm93ID09PSAtMTtcbiAgICBjb25zdCBncm91cEhlYWRlckhvdmVyZWQgPSBoQ29sICE9PSB1bmRlZmluZWQgJiYgaFJvdyA9PT0gLTI7XG4gICAgbGV0IGNsaWNrYWJsZUlubmVyQ2VsbEhvdmVyZWQgPSBmYWxzZTtcbiAgICBsZXQgZWRpdGFibGVCb29sSG92ZXJlZCA9IGZhbHNlO1xuICAgIGxldCBjdXJzb3JPdmVycmlkZSA9IGRyYXdDdXJzb3JPdmVycmlkZTtcbiAgICBpZiAoY3Vyc29yT3ZlcnJpZGUgPT09IHVuZGVmaW5lZCAmJiBoQ29sICE9PSB1bmRlZmluZWQgJiYgaFJvdyAhPT0gdW5kZWZpbmVkICYmIGhSb3cgPiAtMSAmJiBoUm93IDwgcm93cykge1xuICAgICAgICBjb25zdCBjZWxsID0gZ2V0Q2VsbENvbnRlbnQoW2hDb2wsIGhSb3ddLCB0cnVlKTtcbiAgICAgICAgY2xpY2thYmxlSW5uZXJDZWxsSG92ZXJlZCA9XG4gICAgICAgICAgICBjZWxsLmtpbmQgPT09IElubmVyR3JpZENlbGxLaW5kLk5ld1JvdyB8fFxuICAgICAgICAgICAgICAgIChjZWxsLmtpbmQgPT09IElubmVyR3JpZENlbGxLaW5kLk1hcmtlciAmJiBjZWxsLm1hcmtlcktpbmQgIT09IFwibnVtYmVyXCIpO1xuICAgICAgICBlZGl0YWJsZUJvb2xIb3ZlcmVkID0gY2VsbC5raW5kID09PSBHcmlkQ2VsbEtpbmQuQm9vbGVhbiAmJiBib29sZWFuQ2VsbElzRWRpdGFibGUoY2VsbCk7XG4gICAgICAgIGN1cnNvck92ZXJyaWRlID0gY2VsbC5jdXJzb3I7XG4gICAgfVxuICAgIGNvbnN0IGNhbkRyYWcgPSBob3ZlcmVkT25FZGdlID8/IGZhbHNlO1xuICAgIGNvbnN0IGN1cnNvciA9IGlzRHJhZ2dpbmdcbiAgICAgICAgPyBcImdyYWJiaW5nXCJcbiAgICAgICAgOiBjYW5EcmFnIHx8IGlzUmVzaXppbmdcbiAgICAgICAgICAgID8gXCJjb2wtcmVzaXplXCJcbiAgICAgICAgICAgIDogb3ZlckZpbGwgfHwgaXNGaWxsaW5nXG4gICAgICAgICAgICAgICAgPyBcImNyb3NzaGFpclwiXG4gICAgICAgICAgICAgICAgOiBjdXJzb3JPdmVycmlkZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gY3Vyc29yT3ZlcnJpZGVcbiAgICAgICAgICAgICAgICAgICAgOiBoZWFkZXJIb3ZlcmVkIHx8IGNsaWNrYWJsZUlubmVyQ2VsbEhvdmVyZWQgfHwgZWRpdGFibGVCb29sSG92ZXJlZCB8fCBncm91cEhlYWRlckhvdmVyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gXCJwb2ludGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogXCJkZWZhdWx0XCI7XG4gICAgY29uc3Qgc3R5bGUgPSBSZWFjdC51c2VNZW1vKCgpID0+ICh7XG4gICAgICAgIC8vIHdpZHRoLFxuICAgICAgICAvLyBoZWlnaHQsXG4gICAgICAgIGNvbnRhaW46IFwic3RyaWN0XCIsXG4gICAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICAgICAgY3Vyc29yLFxuICAgIH0pLCBbY3Vyc29yXSk7XG4gICAgY29uc3QgbGFzdFNldEN1cnNvciA9IFJlYWN0LnVzZVJlZihcImRlZmF1bHRcIik7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnRUYXJnZXRSZWY/LmN1cnJlbnQ7XG4gICAgaWYgKHRhcmdldCAhPT0gbnVsbCAmJiB0YXJnZXQgIT09IHVuZGVmaW5lZCAmJiBsYXN0U2V0Q3Vyc29yLmN1cnJlbnQgIT09IHN0eWxlLmN1cnNvcikge1xuICAgICAgICAvLyBiZWNhdXNlIHdlIGhhdmUgYW4gZXZlbnQgdGFyZ2V0IHdlIG5lZWQgdG8gc2V0IGl0cyBjdXJzb3IgaW5zdGVhZC5cbiAgICAgICAgdGFyZ2V0LnN0eWxlLmN1cnNvciA9IGxhc3RTZXRDdXJzb3IuY3VycmVudCA9IHN0eWxlLmN1cnNvcjtcbiAgICB9XG4gICAgY29uc3QgZ3JvdXBIZWFkZXJBY3Rpb25Gb3JFdmVudCA9IFJlYWN0LnVzZUNhbGxiYWNrKChncm91cCwgYm91bmRzLCBsb2NhbEV2ZW50WCwgbG9jYWxFdmVudFkpID0+IHtcbiAgICAgICAgaWYgKGdldEdyb3VwRGV0YWlscyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgY29uc3QgZ3JvdXBEZXNjID0gZ2V0R3JvdXBEZXRhaWxzKGdyb3VwKTtcbiAgICAgICAgaWYgKGdyb3VwRGVzYy5hY3Rpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGJveGVzID0gZ2V0QWN0aW9uQm91bmRzRm9yR3JvdXAoYm91bmRzLCBncm91cERlc2MuYWN0aW9ucyk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtpLCBib3hdIG9mIGJveGVzLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgIGlmIChwb2ludEluUmVjdChib3gsIGxvY2FsRXZlbnRYICsgYm91bmRzLngsIGxvY2FsRXZlbnRZICsgYm94LnkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBncm91cERlc2MuYWN0aW9uc1tpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LCBbZ2V0R3JvdXBEZXRhaWxzXSk7XG4gICAgY29uc3QgaXNPdmVySGVhZGVyTWVudSA9IFJlYWN0LnVzZUNhbGxiYWNrKChjYW52YXMsIGNvbCwgY2xpZW50WCwgY2xpZW50WSkgPT4ge1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBjb2x1bW5zW2NvbF07XG4gICAgICAgIGlmICghaXNEcmFnZ2luZyAmJiAhaXNSZXNpemluZyAmJiBoZWFkZXIuaGFzTWVudSA9PT0gdHJ1ZSAmJiAhKGhvdmVyZWRPbkVkZ2UgPz8gZmFsc2UpKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkZXJCb3VuZHMgPSBnZXRCb3VuZHNGb3JJdGVtKGNhbnZhcywgY29sLCAtMSk7XG4gICAgICAgICAgICBhc3NlcnQoaGVhZGVyQm91bmRzICE9PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgY29uc3QgbWVudUJvdW5kcyA9IGdldEhlYWRlck1lbnVCb3VuZHMoaGVhZGVyQm91bmRzLngsIGhlYWRlckJvdW5kcy55LCBoZWFkZXJCb3VuZHMud2lkdGgsIGhlYWRlckJvdW5kcy5oZWlnaHQsIGRpcmVjdGlvbihoZWFkZXIudGl0bGUpID09PSBcInJ0bFwiKTtcbiAgICAgICAgICAgIGlmIChjbGllbnRYID4gbWVudUJvdW5kcy54ICYmXG4gICAgICAgICAgICAgICAgY2xpZW50WCA8IG1lbnVCb3VuZHMueCArIG1lbnVCb3VuZHMud2lkdGggJiZcbiAgICAgICAgICAgICAgICBjbGllbnRZID4gbWVudUJvdW5kcy55ICYmXG4gICAgICAgICAgICAgICAgY2xpZW50WSA8IG1lbnVCb3VuZHMueSArIG1lbnVCb3VuZHMuaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhlYWRlckJvdW5kcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sIFtjb2x1bW5zLCBnZXRCb3VuZHNGb3JJdGVtLCBob3ZlcmVkT25FZGdlLCBpc0RyYWdnaW5nLCBpc1Jlc2l6aW5nXSk7XG4gICAgY29uc3QgZG93blRpbWUgPSBSZWFjdC51c2VSZWYoMCk7XG4gICAgY29uc3QgZG93blBvc2l0aW9uID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgbW91c2VEb3duID0gUmVhY3QudXNlUmVmKGZhbHNlKTtcbiAgICBjb25zdCBvbk1vdXNlRG93bkltcGwgPSBSZWFjdC51c2VDYWxsYmFjaygoZXYpID0+IHtcbiAgICAgICAgY29uc3QgY2FudmFzID0gcmVmLmN1cnJlbnQ7XG4gICAgICAgIGNvbnN0IGV2ZW50VGFyZ2V0ID0gZXZlbnRUYXJnZXRSZWY/LmN1cnJlbnQ7XG4gICAgICAgIGlmIChjYW52YXMgPT09IG51bGwgfHwgKGV2LnRhcmdldCAhPT0gY2FudmFzICYmIGV2LnRhcmdldCAhPT0gZXZlbnRUYXJnZXQpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBtb3VzZURvd24uY3VycmVudCA9IHRydWU7XG4gICAgICAgIGxldCBjbGllbnRYO1xuICAgICAgICBsZXQgY2xpZW50WTtcbiAgICAgICAgaWYgKGV2IGluc3RhbmNlb2YgTW91c2VFdmVudCkge1xuICAgICAgICAgICAgY2xpZW50WCA9IGV2LmNsaWVudFg7XG4gICAgICAgICAgICBjbGllbnRZID0gZXYuY2xpZW50WTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNsaWVudFggPSBldi50b3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICAgICAgICBjbGllbnRZID0gZXYudG91Y2hlc1swXS5jbGllbnRZO1xuICAgICAgICB9XG4gICAgICAgIGlmIChldi50YXJnZXQgPT09IGV2ZW50VGFyZ2V0ICYmIGV2ZW50VGFyZ2V0ICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBib3VuZHMgPSBldmVudFRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIGlmIChjbGllbnRYID4gYm91bmRzLnJpZ2h0IHx8IGNsaWVudFkgPiBib3VuZHMuYm90dG9tKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhcmdzID0gZ2V0TW91c2VBcmdzRm9yUG9zaXRpb24oY2FudmFzLCBjbGllbnRYLCBjbGllbnRZLCBldik7XG4gICAgICAgIGRvd25Qb3NpdGlvbi5jdXJyZW50ID0gYXJncy5sb2NhdGlvbjtcbiAgICAgICAgaWYgKGFyZ3MuaXNUb3VjaCkge1xuICAgICAgICAgICAgZG93blRpbWUuY3VycmVudCA9IERhdGUubm93KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxhc3RXYXNUb3VjaFJlZi5jdXJyZW50ICE9PSBhcmdzLmlzVG91Y2gpIHtcbiAgICAgICAgICAgIHNldExhc3RXYXNUb3VjaChhcmdzLmlzVG91Y2gpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhcmdzLmtpbmQgPT09IGhlYWRlcktpbmQgJiZcbiAgICAgICAgICAgIGlzT3ZlckhlYWRlck1lbnUoY2FudmFzLCBhcmdzLmxvY2F0aW9uWzBdLCBjbGllbnRYLCBjbGllbnRZKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXJncy5raW5kID09PSBncm91cEhlYWRlcktpbmQpIHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGdyb3VwSGVhZGVyQWN0aW9uRm9yRXZlbnQoYXJncy5ncm91cCwgYXJncy5ib3VuZHMsIGFyZ3MubG9jYWxFdmVudFgsIGFyZ3MubG9jYWxFdmVudFkpO1xuICAgICAgICAgICAgaWYgKGFjdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG9uTW91c2VEb3duPy4oYXJncyk7XG4gICAgICAgIGlmICghYXJncy5pc1RvdWNoICYmXG4gICAgICAgICAgICBpc0RyYWdnYWJsZSAhPT0gdHJ1ZSAmJlxuICAgICAgICAgICAgaXNEcmFnZ2FibGUgIT09IGFyZ3Mua2luZCAmJlxuICAgICAgICAgICAgYXJncy5idXR0b24gPCAzICYmXG4gICAgICAgICAgICBhcmdzLmJ1dHRvbiAhPT0gMSkge1xuICAgICAgICAgICAgLy8gcHJldmVudGluZyBkZWZhdWx0IGluIHRvdWNoIGV2ZW50cyBzdG9wcyBzY3JvbGxcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICB9LCBbZXZlbnRUYXJnZXRSZWYsIGlzRHJhZ2dhYmxlLCBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbiwgZ3JvdXBIZWFkZXJBY3Rpb25Gb3JFdmVudCwgaXNPdmVySGVhZGVyTWVudSwgb25Nb3VzZURvd25dKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBvbk1vdXNlRG93bkltcGwsIHdpbmRvdywgZmFsc2UpO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgb25Nb3VzZURvd25JbXBsLCB3aW5kb3csIGZhbHNlKTtcbiAgICBjb25zdCBsYXN0VXBUaW1lID0gUmVhY3QudXNlUmVmKDApO1xuICAgIGNvbnN0IG9uTW91c2VVcEltcGwgPSBSZWFjdC51c2VDYWxsYmFjaygoZXYpID0+IHtcbiAgICAgICAgY29uc3QgbGFzdFVwVGltZVZhbHVlID0gbGFzdFVwVGltZS5jdXJyZW50O1xuICAgICAgICBsYXN0VXBUaW1lLmN1cnJlbnQgPSBEYXRlLm5vdygpO1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgbW91c2VEb3duLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgaWYgKG9uTW91c2VVcCA9PT0gdW5kZWZpbmVkIHx8IGNhbnZhcyA9PT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBldmVudFRhcmdldFJlZj8uY3VycmVudDtcbiAgICAgICAgY29uc3QgaXNPdXRzaWRlID0gZXYudGFyZ2V0ICE9PSBjYW52YXMgJiYgZXYudGFyZ2V0ICE9PSBldmVudFRhcmdldDtcbiAgICAgICAgbGV0IGNsaWVudFg7XG4gICAgICAgIGxldCBjbGllbnRZO1xuICAgICAgICBsZXQgY2FuQ2FuY2VsID0gdHJ1ZTtcbiAgICAgICAgaWYgKGV2IGluc3RhbmNlb2YgTW91c2VFdmVudCkge1xuICAgICAgICAgICAgY2xpZW50WCA9IGV2LmNsaWVudFg7XG4gICAgICAgICAgICBjbGllbnRZID0gZXYuY2xpZW50WTtcbiAgICAgICAgICAgIGNhbkNhbmNlbCA9IGV2LmJ1dHRvbiA8IDM7XG4gICAgICAgICAgICBpZiAoZXYucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNsaWVudFggPSBldi5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICAgICAgY2xpZW50WSA9IGV2LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFyZ3MgPSBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbihjYW52YXMsIGNsaWVudFgsIGNsaWVudFksIGV2KTtcbiAgICAgICAgaWYgKGFyZ3MuaXNUb3VjaCAmJiBkb3duVGltZS5jdXJyZW50ICE9PSAwICYmIERhdGUubm93KCkgLSBkb3duVGltZS5jdXJyZW50ID4gNTAwKSB7XG4gICAgICAgICAgICBhcmdzID0ge1xuICAgICAgICAgICAgICAgIC4uLmFyZ3MsXG4gICAgICAgICAgICAgICAgaXNMb25nVG91Y2g6IHRydWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChsYXN0VXBUaW1lVmFsdWUgIT09IDAgJiYgRGF0ZS5ub3coKSAtIGxhc3RVcFRpbWVWYWx1ZSA8IChhcmdzLmlzVG91Y2ggPyAxMDAwIDogNTAwKSkge1xuICAgICAgICAgICAgYXJncyA9IHtcbiAgICAgICAgICAgICAgICAuLi5hcmdzLFxuICAgICAgICAgICAgICAgIGlzRG91YmxlQ2xpY2s6IHRydWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChsYXN0V2FzVG91Y2hSZWYuY3VycmVudCAhPT0gYXJncy5pc1RvdWNoKSB7XG4gICAgICAgICAgICBzZXRMYXN0V2FzVG91Y2goYXJncy5pc1RvdWNoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzT3V0c2lkZSAmJiBldi5jYW5jZWxhYmxlICYmIGNhbkNhbmNlbCkge1xuICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbY29sXSA9IGFyZ3MubG9jYXRpb247XG4gICAgICAgIGNvbnN0IGhlYWRlckJvdW5kcyA9IGlzT3ZlckhlYWRlck1lbnUoY2FudmFzLCBjb2wsIGNsaWVudFgsIGNsaWVudFkpO1xuICAgICAgICBpZiAoYXJncy5raW5kID09PSBoZWFkZXJLaW5kICYmIGhlYWRlckJvdW5kcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAoYXJncy5idXR0b24gIT09IDAgfHwgZG93blBvc2l0aW9uLmN1cnJlbnQ/LlswXSAhPT0gY29sIHx8IGRvd25Qb3NpdGlvbi5jdXJyZW50Py5bMV0gIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgLy8gZm9yY2Ugb3V0c2lkZSBzbyB0aGF0IGNsaWNrIHdpbGwgbm90IHByb2Nlc3NcbiAgICAgICAgICAgICAgICBvbk1vdXNlVXAoYXJncywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXJncy5raW5kID09PSBncm91cEhlYWRlcktpbmQpIHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGdyb3VwSGVhZGVyQWN0aW9uRm9yRXZlbnQoYXJncy5ncm91cCwgYXJncy5ib3VuZHMsIGFyZ3MubG9jYWxFdmVudFgsIGFyZ3MubG9jYWxFdmVudFkpO1xuICAgICAgICAgICAgaWYgKGFjdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3MuYnV0dG9uID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbi5vbkNsaWNrKGFyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgb25Nb3VzZVVwKGFyZ3MsIGlzT3V0c2lkZSk7XG4gICAgfSwgW29uTW91c2VVcCwgZXZlbnRUYXJnZXRSZWYsIGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uLCBpc092ZXJIZWFkZXJNZW51LCBncm91cEhlYWRlckFjdGlvbkZvckV2ZW50XSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgb25Nb3VzZVVwSW1wbCwgd2luZG93LCBmYWxzZSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIG9uTW91c2VVcEltcGwsIHdpbmRvdywgZmFsc2UpO1xuICAgIGNvbnN0IG9uQ2xpY2tJbXBsID0gUmVhY3QudXNlQ2FsbGJhY2soKGV2KSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoY2FudmFzID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGV2ZW50VGFyZ2V0UmVmPy5jdXJyZW50O1xuICAgICAgICBjb25zdCBpc091dHNpZGUgPSBldi50YXJnZXQgIT09IGNhbnZhcyAmJiBldi50YXJnZXQgIT09IGV2ZW50VGFyZ2V0O1xuICAgICAgICBsZXQgY2xpZW50WDtcbiAgICAgICAgbGV0IGNsaWVudFk7XG4gICAgICAgIGxldCBjYW5DYW5jZWwgPSB0cnVlO1xuICAgICAgICBpZiAoZXYgaW5zdGFuY2VvZiBNb3VzZUV2ZW50KSB7XG4gICAgICAgICAgICBjbGllbnRYID0gZXYuY2xpZW50WDtcbiAgICAgICAgICAgIGNsaWVudFkgPSBldi5jbGllbnRZO1xuICAgICAgICAgICAgY2FuQ2FuY2VsID0gZXYuYnV0dG9uIDwgMztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNsaWVudFggPSBldi5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICAgICAgY2xpZW50WSA9IGV2LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYXJncyA9IGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uKGNhbnZhcywgY2xpZW50WCwgY2xpZW50WSwgZXYpO1xuICAgICAgICBpZiAobGFzdFdhc1RvdWNoUmVmLmN1cnJlbnQgIT09IGFyZ3MuaXNUb3VjaCkge1xuICAgICAgICAgICAgc2V0TGFzdFdhc1RvdWNoKGFyZ3MuaXNUb3VjaCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc091dHNpZGUgJiYgZXYuY2FuY2VsYWJsZSAmJiBjYW5DYW5jZWwpIHtcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW2NvbF0gPSBhcmdzLmxvY2F0aW9uO1xuICAgICAgICBjb25zdCBoZWFkZXJCb3VuZHMgPSBpc092ZXJIZWFkZXJNZW51KGNhbnZhcywgY29sLCBjbGllbnRYLCBjbGllbnRZKTtcbiAgICAgICAgaWYgKGFyZ3Mua2luZCA9PT0gaGVhZGVyS2luZCAmJiBoZWFkZXJCb3VuZHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKGFyZ3MuYnV0dG9uID09PSAwICYmIGRvd25Qb3NpdGlvbi5jdXJyZW50Py5bMF0gPT09IGNvbCAmJiBkb3duUG9zaXRpb24uY3VycmVudD8uWzFdID09PSAtMSkge1xuICAgICAgICAgICAgICAgIG9uSGVhZGVyTWVudUNsaWNrPy4oY29sLCBoZWFkZXJCb3VuZHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGFyZ3Mua2luZCA9PT0gZ3JvdXBIZWFkZXJLaW5kKSB7XG4gICAgICAgICAgICBjb25zdCBhY3Rpb24gPSBncm91cEhlYWRlckFjdGlvbkZvckV2ZW50KGFyZ3MuZ3JvdXAsIGFyZ3MuYm91bmRzLCBhcmdzLmxvY2FsRXZlbnRYLCBhcmdzLmxvY2FsRXZlbnRZKTtcbiAgICAgICAgICAgIGlmIChhY3Rpb24gIT09IHVuZGVmaW5lZCAmJiBhcmdzLmJ1dHRvbiA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGFjdGlvbi5vbkNsaWNrKGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW2V2ZW50VGFyZ2V0UmVmLCBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbiwgaXNPdmVySGVhZGVyTWVudSwgb25IZWFkZXJNZW51Q2xpY2ssIGdyb3VwSGVhZGVyQWN0aW9uRm9yRXZlbnRdKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGlja0ltcGwsIHdpbmRvdywgZmFsc2UpO1xuICAgIGNvbnN0IG9uQ29udGV4dE1lbnVJbXBsID0gUmVhY3QudXNlQ2FsbGJhY2soKGV2KSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlZi5jdXJyZW50O1xuICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGV2ZW50VGFyZ2V0UmVmPy5jdXJyZW50O1xuICAgICAgICBpZiAoY2FudmFzID09PSBudWxsIHx8IChldi50YXJnZXQgIT09IGNhbnZhcyAmJiBldi50YXJnZXQgIT09IGV2ZW50VGFyZ2V0KSB8fCBvbkNvbnRleHRNZW51ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbihjYW52YXMsIGV2LmNsaWVudFgsIGV2LmNsaWVudFksIGV2KTtcbiAgICAgICAgb25Db250ZXh0TWVudShhcmdzLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoZXYuY2FuY2VsYWJsZSlcbiAgICAgICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KTtcbiAgICB9LCBbZXZlbnRUYXJnZXRSZWYsIGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uLCBvbkNvbnRleHRNZW51XSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihcImNvbnRleHRtZW51XCIsIG9uQ29udGV4dE1lbnVJbXBsLCBldmVudFRhcmdldFJlZj8uY3VycmVudCA/PyBudWxsLCBmYWxzZSk7XG4gICAgY29uc3Qgb25BbmltYXRpb25GcmFtZSA9IFJlYWN0LnVzZUNhbGxiYWNrKHZhbHVlcyA9PiB7XG4gICAgICAgIGRhbWFnZVJlZ2lvbi5jdXJyZW50ID0gbmV3IENlbGxTZXQodmFsdWVzLm1hcCh4ID0+IHguaXRlbSkpO1xuICAgICAgICBob3ZlclZhbHVlcy5jdXJyZW50ID0gdmFsdWVzO1xuICAgICAgICBsYXN0RHJhd1JlZi5jdXJyZW50KCk7XG4gICAgICAgIGRhbWFnZVJlZ2lvbi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBhbmltTWFuYWdlclZhbHVlID0gUmVhY3QudXNlTWVtbygoKSA9PiBuZXcgQW5pbWF0aW9uTWFuYWdlcihvbkFuaW1hdGlvbkZyYW1lKSwgW29uQW5pbWF0aW9uRnJhbWVdKTtcbiAgICBjb25zdCBhbmltYXRpb25NYW5hZ2VyID0gUmVhY3QudXNlUmVmKGFuaW1NYW5hZ2VyVmFsdWUpO1xuICAgIGFuaW1hdGlvbk1hbmFnZXIuY3VycmVudCA9IGFuaW1NYW5hZ2VyVmFsdWU7XG4gICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgYW0gPSBhbmltYXRpb25NYW5hZ2VyLmN1cnJlbnQ7XG4gICAgICAgIGlmIChob3ZlcmVkSXRlbSA9PT0gdW5kZWZpbmVkIHx8IGhvdmVyZWRJdGVtWzFdIDwgMCkge1xuICAgICAgICAgICAgYW0uc2V0SG92ZXJlZChob3ZlcmVkSXRlbSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2VsbCA9IGdldENlbGxDb250ZW50KGhvdmVyZWRJdGVtLCB0cnVlKTtcbiAgICAgICAgY29uc3QgciA9IGdldENlbGxSZW5kZXJlcihjZWxsKTtcbiAgICAgICAgY29uc3QgY2VsbE5lZWRzSG92ZXIgPSAociA9PT0gdW5kZWZpbmVkICYmIGNlbGwua2luZCA9PT0gR3JpZENlbGxLaW5kLkN1c3RvbSkgfHxcbiAgICAgICAgICAgIChyPy5uZWVkc0hvdmVyICE9PSB1bmRlZmluZWQgJiYgKHR5cGVvZiByLm5lZWRzSG92ZXIgPT09IFwiYm9vbGVhblwiID8gci5uZWVkc0hvdmVyIDogci5uZWVkc0hvdmVyKGNlbGwpKSk7XG4gICAgICAgIGFtLnNldEhvdmVyZWQoY2VsbE5lZWRzSG92ZXIgPyBob3ZlcmVkSXRlbSA6IHVuZGVmaW5lZCk7XG4gICAgfSwgW2dldENlbGxDb250ZW50LCBnZXRDZWxsUmVuZGVyZXIsIGhvdmVyZWRJdGVtXSk7XG4gICAgY29uc3QgaG92ZXJlZFJlZiA9IFJlYWN0LnVzZVJlZigpO1xuICAgIGNvbnN0IG9uTW91c2VNb3ZlSW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldikgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGNhbnZhcyA9PT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBldmVudFRhcmdldFJlZj8uY3VycmVudDtcbiAgICAgICAgY29uc3QgaXNJbmRpcmVjdCA9IGV2LnRhcmdldCAhPT0gY2FudmFzICYmIGV2LnRhcmdldCAhPT0gZXZlbnRUYXJnZXQ7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbihjYW52YXMsIGV2LmNsaWVudFgsIGV2LmNsaWVudFksIGV2KTtcbiAgICAgICAgaWYgKGFyZ3Mua2luZCAhPT0gXCJvdXQtb2YtYm91bmRzXCIgJiYgaXNJbmRpcmVjdCAmJiAhbW91c2VEb3duLmN1cnJlbnQgJiYgIWFyZ3MuaXNUb3VjaCkge1xuICAgICAgICAgICAgLy8gd2UgYXJlIG9ic2N1cmVkIGJ5IHNvbWV0aGluZyBlbHNlLCBzbyB3ZSB3YW50IHRvIG5vdCByZWdpc3RlciBldmVudHMgaWYgd2UgYXJlIG5vdCBkb2luZyBhbnl0aGluZ1xuICAgICAgICAgICAgLy8gaW1wb3J0YW50IGFscmVhZHlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyB0aGUgcG9pbnQgaGVyZSBpcyBub3QgdG8gdHJpZ2dlciByZS1yZW5kZXJzIGV2ZXJ5IHRpbWUgdGhlIG1vdXNlIG1vdmVzIG92ZXIgYSBjZWxsXG4gICAgICAgIC8vIHRoYXQgZG9lc24ndCBjYXJlIGFib3V0IHRoZSBtb3VzZSBwb3NpdG9uLlxuICAgICAgICBjb25zdCBtYXliZVNldEhvdmVyZWRJbmZvID0gKG5ld1ZhbCwgbmVlZFBvc2l0aW9uKSA9PiB7XG4gICAgICAgICAgICBzZXRIb3ZlcmVkSXRlbUluZm8oY3YgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjdiA9PT0gbmV3VmFsKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3Y7XG4gICAgICAgICAgICAgICAgaWYgKGN2Py5bMF1bMF0gPT09IG5ld1ZhbD8uWzBdWzBdICYmXG4gICAgICAgICAgICAgICAgICAgIGN2Py5bMF1bMV0gPT09IG5ld1ZhbD8uWzBdWzFdICYmXG4gICAgICAgICAgICAgICAgICAgICgoY3Y/LlsxXVswXSA9PT0gbmV3VmFsPy5bMV1bMF0gJiYgY3Y/LlsxXVsxXSA9PT0gbmV3VmFsPy5bMV1bMV0pIHx8ICFuZWVkUG9zaXRpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjdjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld1ZhbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoIW1vdXNlRXZlbnRBcmdzQXJlRXF1YWwoYXJncywgaG92ZXJlZFJlZi5jdXJyZW50KSkge1xuICAgICAgICAgICAgc2V0RHJhd0N1cnNvck92ZXJyaWRlKHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBvbkl0ZW1Ib3ZlcmVkPy4oYXJncyk7XG4gICAgICAgICAgICBtYXliZVNldEhvdmVyZWRJbmZvKGFyZ3Mua2luZCA9PT0gb3V0T2ZCb3VuZHNLaW5kID8gdW5kZWZpbmVkIDogW2FyZ3MubG9jYXRpb24sIFthcmdzLmxvY2FsRXZlbnRYLCBhcmdzLmxvY2FsRXZlbnRZXV0sIHRydWUpO1xuICAgICAgICAgICAgaG92ZXJlZFJlZi5jdXJyZW50ID0gYXJncztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChhcmdzLmtpbmQgPT09IFwiY2VsbFwiIHx8IGFyZ3Mua2luZCA9PT0gaGVhZGVyS2luZCB8fCBhcmdzLmtpbmQgPT09IGdyb3VwSGVhZGVyS2luZCkge1xuICAgICAgICAgICAgbGV0IG5lZWRzRGFtYWdlQ2VsbCA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IG5lZWRzSG92ZXJQb3NpdGlvbiA9IHRydWU7XG4gICAgICAgICAgICBpZiAoYXJncy5raW5kID09PSBcImNlbGxcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvQ2hlY2sgPSBnZXRDZWxsQ29udGVudChhcmdzLmxvY2F0aW9uKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZW5kZXJlck5lZWRzID0gZ2V0Q2VsbFJlbmRlcmVyKHRvQ2hlY2spPy5uZWVkc0hvdmVyUG9zaXRpb247XG4gICAgICAgICAgICAgICAgLy8gY3VzdG9tIGNlbGxzIHdlIHdpbGwgYXNzdW1lIG5lZWQgdGhlIHBvc2l0aW9uIGlmIHRoZXkgZG9uJ3QgZXhwbGljaXRseSBzYXkgdGhleSBkb24ndCwgZXZlcnl0aGluZ1xuICAgICAgICAgICAgICAgIC8vIGVsc2Ugd2Ugd2lsbCBhc3N1bWUgZG9lc24ndCBuZWVkIGl0LlxuICAgICAgICAgICAgICAgIG5lZWRzSG92ZXJQb3NpdGlvbiA9IHJlbmRlcmVyTmVlZHMgPz8gdG9DaGVjay5raW5kID09PSBHcmlkQ2VsbEtpbmQuQ3VzdG9tO1xuICAgICAgICAgICAgICAgIG5lZWRzRGFtYWdlQ2VsbCA9IG5lZWRzSG92ZXJQb3NpdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3Mua2luZCA9PT0gZ3JvdXBIZWFkZXJLaW5kKSB7XG4gICAgICAgICAgICAgICAgbmVlZHNEYW1hZ2VDZWxsID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG5ld0luZm8gPSBbYXJncy5sb2NhdGlvbiwgW2FyZ3MubG9jYWxFdmVudFgsIGFyZ3MubG9jYWxFdmVudFldXTtcbiAgICAgICAgICAgIG1heWJlU2V0SG92ZXJlZEluZm8obmV3SW5mbywgbmVlZHNIb3ZlclBvc2l0aW9uKTtcbiAgICAgICAgICAgIGhvdmVySW5mb1JlZi5jdXJyZW50ID0gbmV3SW5mbztcbiAgICAgICAgICAgIGlmIChuZWVkc0RhbWFnZUNlbGwpIHtcbiAgICAgICAgICAgICAgICBkYW1hZ2VJbnRlcm5hbChuZXcgQ2VsbFNldChbYXJncy5sb2NhdGlvbl0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBub3RSb3dNYXJrZXJDb2wgPSBhcmdzLmxvY2F0aW9uWzBdID49IChmaXJzdENvbEFjY2Vzc2libGUgPyAwIDogMSk7XG4gICAgICAgIHNldEhvdmVyZWRPbkVkZ2UoYXJncy5raW5kID09PSBoZWFkZXJLaW5kICYmIGFyZ3MuaXNFZGdlICYmIG5vdFJvd01hcmtlckNvbCAmJiBhbGxvd1Jlc2l6ZSA9PT0gdHJ1ZSk7XG4gICAgICAgIHNldE92ZXJGaWxsKGFyZ3Mua2luZCA9PT0gXCJjZWxsXCIgJiYgYXJncy5pc0ZpbGxIYW5kbGUpO1xuICAgICAgICBvbk1vdXNlTW92ZVJhdz8uKGV2KTtcbiAgICAgICAgb25Nb3VzZU1vdmUoYXJncyk7XG4gICAgfSwgW1xuICAgICAgICBldmVudFRhcmdldFJlZixcbiAgICAgICAgZ2V0TW91c2VBcmdzRm9yUG9zaXRpb24sXG4gICAgICAgIGZpcnN0Q29sQWNjZXNzaWJsZSxcbiAgICAgICAgYWxsb3dSZXNpemUsXG4gICAgICAgIG9uTW91c2VNb3ZlUmF3LFxuICAgICAgICBvbk1vdXNlTW92ZSxcbiAgICAgICAgb25JdGVtSG92ZXJlZCxcbiAgICAgICAgZ2V0Q2VsbENvbnRlbnQsXG4gICAgICAgIGdldENlbGxSZW5kZXJlcixcbiAgICAgICAgZGFtYWdlSW50ZXJuYWwsXG4gICAgXSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBvbk1vdXNlTW92ZUltcGwsIHdpbmRvdywgdHJ1ZSk7XG4gICAgY29uc3Qgb25LZXlEb3duSW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGNhbnZhcyA9PT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGJvdW5kcztcbiAgICAgICAgbGV0IGxvY2F0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoc2VsZWN0aW9uLmN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYm91bmRzID0gZ2V0Qm91bmRzRm9ySXRlbShjYW52YXMsIHNlbGVjdGlvbi5jdXJyZW50LmNlbGxbMF0sIHNlbGVjdGlvbi5jdXJyZW50LmNlbGxbMV0pO1xuICAgICAgICAgICAgbG9jYXRpb24gPSBzZWxlY3Rpb24uY3VycmVudC5jZWxsO1xuICAgICAgICB9XG4gICAgICAgIG9uS2V5RG93bj8uKHtcbiAgICAgICAgICAgIGJvdW5kcyxcbiAgICAgICAgICAgIHN0b3BQcm9wYWdhdGlvbjogKCkgPT4gZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCksXG4gICAgICAgICAgICBwcmV2ZW50RGVmYXVsdDogKCkgPT4gZXZlbnQucHJldmVudERlZmF1bHQoKSxcbiAgICAgICAgICAgIGNhbmNlbDogKCkgPT4gdW5kZWZpbmVkLFxuICAgICAgICAgICAgY3RybEtleTogZXZlbnQuY3RybEtleSxcbiAgICAgICAgICAgIG1ldGFLZXk6IGV2ZW50Lm1ldGFLZXksXG4gICAgICAgICAgICBzaGlmdEtleTogZXZlbnQuc2hpZnRLZXksXG4gICAgICAgICAgICBhbHRLZXk6IGV2ZW50LmFsdEtleSxcbiAgICAgICAgICAgIGtleTogZXZlbnQua2V5LFxuICAgICAgICAgICAga2V5Q29kZTogZXZlbnQua2V5Q29kZSxcbiAgICAgICAgICAgIHJhd0V2ZW50OiBldmVudCxcbiAgICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICB9KTtcbiAgICB9LCBbb25LZXlEb3duLCBzZWxlY3Rpb24sIGdldEJvdW5kc0Zvckl0ZW1dKTtcbiAgICBjb25zdCBvbktleVVwSW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGNhbnZhcyA9PT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGJvdW5kcztcbiAgICAgICAgbGV0IGxvY2F0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoc2VsZWN0aW9uLmN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYm91bmRzID0gZ2V0Qm91bmRzRm9ySXRlbShjYW52YXMsIHNlbGVjdGlvbi5jdXJyZW50LmNlbGxbMF0sIHNlbGVjdGlvbi5jdXJyZW50LmNlbGxbMV0pO1xuICAgICAgICAgICAgbG9jYXRpb24gPSBzZWxlY3Rpb24uY3VycmVudC5jZWxsO1xuICAgICAgICB9XG4gICAgICAgIG9uS2V5VXA/Lih7XG4gICAgICAgICAgICBib3VuZHMsXG4gICAgICAgICAgICBzdG9wUHJvcGFnYXRpb246ICgpID0+IGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpLFxuICAgICAgICAgICAgcHJldmVudERlZmF1bHQ6ICgpID0+IGV2ZW50LnByZXZlbnREZWZhdWx0KCksXG4gICAgICAgICAgICBjYW5jZWw6ICgpID0+IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGN0cmxLZXk6IGV2ZW50LmN0cmxLZXksXG4gICAgICAgICAgICBtZXRhS2V5OiBldmVudC5tZXRhS2V5LFxuICAgICAgICAgICAgc2hpZnRLZXk6IGV2ZW50LnNoaWZ0S2V5LFxuICAgICAgICAgICAgYWx0S2V5OiBldmVudC5hbHRLZXksXG4gICAgICAgICAgICBrZXk6IGV2ZW50LmtleSxcbiAgICAgICAgICAgIGtleUNvZGU6IGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgICByYXdFdmVudDogZXZlbnQsXG4gICAgICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgfSk7XG4gICAgfSwgW29uS2V5VXAsIHNlbGVjdGlvbiwgZ2V0Qm91bmRzRm9ySXRlbV0pO1xuICAgIGNvbnN0IHJlZkltcGwgPSBSZWFjdC51c2VDYWxsYmFjaygoaW5zdGFuY2UpID0+IHtcbiAgICAgICAgcmVmLmN1cnJlbnQgPSBpbnN0YW5jZTtcbiAgICAgICAgaWYgKGNhbnZhc1JlZiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjYW52YXNSZWYuY3VycmVudCA9IGluc3RhbmNlO1xuICAgICAgICB9XG4gICAgfSwgW2NhbnZhc1JlZl0pO1xuICAgIGNvbnN0IG9uRHJhZ1N0YXJ0SW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGNhbnZhcyA9PT0gbnVsbCB8fCBpc0RyYWdnYWJsZSA9PT0gZmFsc2UgfHwgaXNSZXNpemluZykge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZHJhZ01pbWU7XG4gICAgICAgIGxldCBkcmFnRGF0YTtcbiAgICAgICAgY29uc3QgYXJncyA9IGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uKGNhbnZhcywgZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WSk7XG4gICAgICAgIGlmIChpc0RyYWdnYWJsZSAhPT0gdHJ1ZSAmJiBhcmdzLmtpbmQgIT09IGlzRHJhZ2dhYmxlKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNldERhdGEgPSAobWltZSwgcGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgZHJhZ01pbWUgPSBtaW1lO1xuICAgICAgICAgICAgZHJhZ0RhdGEgPSBwYXlsb2FkO1xuICAgICAgICB9O1xuICAgICAgICBsZXQgZHJhZ0ltYWdlO1xuICAgICAgICBsZXQgZHJhZ0ltYWdlWDtcbiAgICAgICAgbGV0IGRyYWdJbWFnZVk7XG4gICAgICAgIGNvbnN0IHNldERyYWdJbWFnZSA9IChpbWFnZSwgeCwgeSkgPT4ge1xuICAgICAgICAgICAgZHJhZ0ltYWdlID0gaW1hZ2U7XG4gICAgICAgICAgICBkcmFnSW1hZ2VYID0geDtcbiAgICAgICAgICAgIGRyYWdJbWFnZVkgPSB5O1xuICAgICAgICB9O1xuICAgICAgICBsZXQgcHJldmVudGVkID0gZmFsc2U7XG4gICAgICAgIG9uRHJhZ1N0YXJ0Py4oe1xuICAgICAgICAgICAgLi4uYXJncyxcbiAgICAgICAgICAgIHNldERhdGEsXG4gICAgICAgICAgICBzZXREcmFnSW1hZ2UsXG4gICAgICAgICAgICBwcmV2ZW50RGVmYXVsdDogKCkgPT4gKHByZXZlbnRlZCA9IHRydWUpLFxuICAgICAgICAgICAgZGVmYXVsdFByZXZlbnRlZDogKCkgPT4gcHJldmVudGVkLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFwcmV2ZW50ZWQgJiYgZHJhZ01pbWUgIT09IHVuZGVmaW5lZCAmJiBkcmFnRGF0YSAhPT0gdW5kZWZpbmVkICYmIGV2ZW50LmRhdGFUcmFuc2ZlciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoZHJhZ01pbWUsIGRyYWdEYXRhKTtcbiAgICAgICAgICAgIGV2ZW50LmRhdGFUcmFuc2Zlci5lZmZlY3RBbGxvd2VkID0gXCJjb3B5TGlua1wiO1xuICAgICAgICAgICAgaWYgKGRyYWdJbWFnZSAhPT0gdW5kZWZpbmVkICYmIGRyYWdJbWFnZVggIT09IHVuZGVmaW5lZCAmJiBkcmFnSW1hZ2VZICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhVHJhbnNmZXIuc2V0RHJhZ0ltYWdlKGRyYWdJbWFnZSwgZHJhZ0ltYWdlWCwgZHJhZ0ltYWdlWSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbY29sLCByb3ddID0gYXJncy5sb2NhdGlvbjtcbiAgICAgICAgICAgICAgICBpZiAocm93ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2Zmc2NyZWVuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYm91bmRzRm9yRHJhZ1RhcmdldCA9IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBjb2wsIHJvdyk7XG4gICAgICAgICAgICAgICAgICAgIGFzc2VydChib3VuZHNGb3JEcmFnVGFyZ2V0ICE9PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkcHIgPSBNYXRoLmNlaWwod2luZG93LmRldmljZVBpeGVsUmF0aW8gPz8gMSk7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNjcmVlbi53aWR0aCA9IGJvdW5kc0ZvckRyYWdUYXJnZXQud2lkdGggKiBkcHI7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNjcmVlbi5oZWlnaHQgPSBib3VuZHNGb3JEcmFnVGFyZ2V0LmhlaWdodCAqIGRwcjtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3R4ID0gb2Zmc2NyZWVuLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN0eCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnNjYWxlKGRwciwgZHByKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJvdyA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHguZm9udCA9IHRoZW1lLmhlYWRlckZvbnRGdWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGVtZS5iZ0hlYWRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgb2Zmc2NyZWVuLndpZHRoLCBvZmZzY3JlZW4uaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmF3SGVhZGVyKGN0eCwgMCwgMCwgYm91bmRzRm9yRHJhZ1RhcmdldC53aWR0aCwgYm91bmRzRm9yRHJhZ1RhcmdldC5oZWlnaHQsIG1hcHBlZENvbHVtbnNbY29sXSwgZmFsc2UsIHRoZW1lLCBmYWxzZSwgZmFsc2UsIDAsIHNwcml0ZU1hbmFnZXIsIGRyYXdIZWFkZXJDYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4LmZvbnQgPSB0aGVtZS5iYXNlRm9udEZ1bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoZW1lLmJnQ2VsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgb2Zmc2NyZWVuLndpZHRoLCBvZmZzY3JlZW4uaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmF3Q2VsbChjdHgsIGdldENlbGxDb250ZW50KFtjb2wsIHJvd10pLCAwLCByb3csIGZhbHNlLCBmYWxzZSwgMCwgMCwgYm91bmRzRm9yRHJhZ1RhcmdldC53aWR0aCwgYm91bmRzRm9yRHJhZ1RhcmdldC5oZWlnaHQsIGZhbHNlLCB0aGVtZSwgdGhlbWUuYmdDZWxsLCBpbWFnZUxvYWRlciwgc3ByaXRlTWFuYWdlciwgMSwgdW5kZWZpbmVkLCBmYWxzZSwgMCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgcmVuZGVyU3RhdGVQcm92aWRlciwgZ2V0Q2VsbFJlbmRlcmVyLCAoKSA9PiB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG9mZnNjcmVlbi5zdHlsZS5sZWZ0ID0gXCItMTAwJVwiO1xuICAgICAgICAgICAgICAgICAgICBvZmZzY3JlZW4uc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNjcmVlbi5zdHlsZS53aWR0aCA9IGAke2JvdW5kc0ZvckRyYWdUYXJnZXQud2lkdGh9cHhgO1xuICAgICAgICAgICAgICAgICAgICBvZmZzY3JlZW4uc3R5bGUuaGVpZ2h0ID0gYCR7Ym91bmRzRm9yRHJhZ1RhcmdldC5oZWlnaHR9cHhgO1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChvZmZzY3JlZW4pO1xuICAgICAgICAgICAgICAgICAgICBldmVudC5kYXRhVHJhbnNmZXIuc2V0RHJhZ0ltYWdlKG9mZnNjcmVlbiwgYm91bmRzRm9yRHJhZ1RhcmdldC53aWR0aCAvIDIsIGJvdW5kc0ZvckRyYWdUYXJnZXQuaGVpZ2h0IC8gMik7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNjcmVlbi5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH0sIFtcbiAgICAgICAgaXNEcmFnZ2FibGUsXG4gICAgICAgIGlzUmVzaXppbmcsXG4gICAgICAgIGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uLFxuICAgICAgICBvbkRyYWdTdGFydCxcbiAgICAgICAgZ2V0Qm91bmRzRm9ySXRlbSxcbiAgICAgICAgdGhlbWUsXG4gICAgICAgIG1hcHBlZENvbHVtbnMsXG4gICAgICAgIHNwcml0ZU1hbmFnZXIsXG4gICAgICAgIGRyYXdIZWFkZXJDYWxsYmFjayxcbiAgICAgICAgZ2V0Q2VsbENvbnRlbnQsXG4gICAgICAgIGltYWdlTG9hZGVyLFxuICAgICAgICByZW5kZXJTdGF0ZVByb3ZpZGVyLFxuICAgICAgICBnZXRDZWxsUmVuZGVyZXIsXG4gICAgXSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihcImRyYWdzdGFydFwiLCBvbkRyYWdTdGFydEltcGwsIGV2ZW50VGFyZ2V0UmVmPy5jdXJyZW50ID8/IG51bGwsIGZhbHNlLCBmYWxzZSk7XG4gICAgY29uc3QgYWN0aXZlRHJvcFRhcmdldCA9IFJlYWN0LnVzZVJlZigpO1xuICAgIGNvbnN0IG9uRHJhZ092ZXJJbXBsID0gUmVhY3QudXNlQ2FsbGJhY2soKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlZi5jdXJyZW50O1xuICAgICAgICBpZiAob25Ecm9wICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIE5lZWQgdG8gcHJldmVudERlZmF1bHQgdG8gYWxsb3cgZHJvcFxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2FudmFzID09PSBudWxsIHx8IG9uRHJhZ092ZXJDZWxsID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhcmdzID0gZ2V0TW91c2VBcmdzRm9yUG9zaXRpb24oY2FudmFzLCBldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcbiAgICAgICAgY29uc3QgW3Jhd0NvbCwgcm93XSA9IGFyZ3MubG9jYXRpb247XG4gICAgICAgIGNvbnN0IGNvbCA9IHJhd0NvbCAtIChmaXJzdENvbEFjY2Vzc2libGUgPyAwIDogMSk7XG4gICAgICAgIGNvbnN0IFthY3RpdmVDb2wsIGFjdGl2ZVJvd10gPSBhY3RpdmVEcm9wVGFyZ2V0LmN1cnJlbnQgPz8gW107XG4gICAgICAgIGlmIChhY3RpdmVDb2wgIT09IGNvbCB8fCBhY3RpdmVSb3cgIT09IHJvdykge1xuICAgICAgICAgICAgYWN0aXZlRHJvcFRhcmdldC5jdXJyZW50ID0gW2NvbCwgcm93XTtcbiAgICAgICAgICAgIG9uRHJhZ092ZXJDZWxsKFtjb2wsIHJvd10sIGV2ZW50LmRhdGFUcmFuc2Zlcik7XG4gICAgICAgIH1cbiAgICB9LCBbZmlyc3RDb2xBY2Nlc3NpYmxlLCBnZXRNb3VzZUFyZ3NGb3JQb3NpdGlvbiwgb25EcmFnT3ZlckNlbGwsIG9uRHJvcF0pO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLCBvbkRyYWdPdmVySW1wbCwgZXZlbnRUYXJnZXRSZWY/LmN1cnJlbnQgPz8gbnVsbCwgZmFsc2UsIGZhbHNlKTtcbiAgICBjb25zdCBvbkRyYWdFbmRJbXBsID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBhY3RpdmVEcm9wVGFyZ2V0LmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIG9uRHJhZ0VuZD8uKCk7XG4gICAgfSwgW29uRHJhZ0VuZF0pO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoXCJkcmFnZW5kXCIsIG9uRHJhZ0VuZEltcGwsIGV2ZW50VGFyZ2V0UmVmPy5jdXJyZW50ID8/IG51bGwsIGZhbHNlLCBmYWxzZSk7XG4gICAgY29uc3Qgb25Ecm9wSW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSByZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGNhbnZhcyA9PT0gbnVsbCB8fCBvbkRyb3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIERlZmF1bHQgY2FuIG1lc3MgdXAgc29tZXRpbWVzLlxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBhcmdzID0gZ2V0TW91c2VBcmdzRm9yUG9zaXRpb24oY2FudmFzLCBldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcbiAgICAgICAgY29uc3QgW3Jhd0NvbCwgcm93XSA9IGFyZ3MubG9jYXRpb247XG4gICAgICAgIGNvbnN0IGNvbCA9IHJhd0NvbCAtIChmaXJzdENvbEFjY2Vzc2libGUgPyAwIDogMSk7XG4gICAgICAgIG9uRHJvcChbY29sLCByb3ddLCBldmVudC5kYXRhVHJhbnNmZXIpO1xuICAgIH0sIFtmaXJzdENvbEFjY2Vzc2libGUsIGdldE1vdXNlQXJnc0ZvclBvc2l0aW9uLCBvbkRyb3BdKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBvbkRyb3BJbXBsLCBldmVudFRhcmdldFJlZj8uY3VycmVudCA/PyBudWxsLCBmYWxzZSwgZmFsc2UpO1xuICAgIGNvbnN0IG9uRHJhZ0xlYXZlSW1wbCA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgb25EcmFnTGVhdmU/LigpO1xuICAgIH0sIFtvbkRyYWdMZWF2ZV0pO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoXCJkcmFnbGVhdmVcIiwgb25EcmFnTGVhdmVJbXBsLCBldmVudFRhcmdldFJlZj8uY3VycmVudCA/PyBudWxsLCBmYWxzZSwgZmFsc2UpO1xuICAgIGNvbnN0IHNlbGVjdGlvblJlZiA9IFJlYWN0LnVzZVJlZihzZWxlY3Rpb24pO1xuICAgIHNlbGVjdGlvblJlZi5jdXJyZW50ID0gc2VsZWN0aW9uO1xuICAgIGNvbnN0IGZvY3VzUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGZvY3VzRWxlbWVudCA9IFJlYWN0LnVzZUNhbGxiYWNrKChlbCkgPT4ge1xuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHN0ZWFsIHRoZSBmb2N1cyBpZiB3ZSBkb24ndCBjdXJyZW50bHkgb3duIHRoZSBmb2N1cy5cbiAgICAgICAgaWYgKHJlZi5jdXJyZW50ID09PSBudWxsIHx8ICFyZWYuY3VycmVudC5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKGVsID09PSBudWxsICYmIHNlbGVjdGlvblJlZi5jdXJyZW50LmN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY2FudmFzUmVmPy5jdXJyZW50Py5mb2N1cyh7XG4gICAgICAgICAgICAgICAgcHJldmVudFNjcm9sbDogdHJ1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVsICE9PSBudWxsKSB7XG4gICAgICAgICAgICBlbC5mb2N1cyh7XG4gICAgICAgICAgICAgICAgcHJldmVudFNjcm9sbDogdHJ1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZvY3VzUmVmLmN1cnJlbnQgPSBlbDtcbiAgICB9LCBbY2FudmFzUmVmXSk7XG4gICAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShmb3J3YXJkZWRSZWYsICgpID0+ICh7XG4gICAgICAgIGZvY3VzOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbCA9IGZvY3VzUmVmLmN1cnJlbnQ7XG4gICAgICAgICAgICAvLyBUaGUgZWxlbWVudCBpbiB0aGUgcmVmIG1heSBoYXZlIGJlZW4gcmVtb3ZlZCBob3dldmVyIG91ciBjYWxsYmFjayBtZXRob2QgcmVmXG4gICAgICAgICAgICAvLyB3b24ndCBzZWUgdGhlIHJlbW92YWwgc28gYmFkIHRoaW5ncyBoYXBwZW4uIENoZWNraW5nIHRvIHNlZSBpZiB0aGUgZWxlbWVudCBpc1xuICAgICAgICAgICAgLy8gbm8gbG9uZ2VyIGF0dGFjaGVkIGlzIGVub3VnaCB0byByZXNvbHZlIHRoZSBwcm9ibGVtLiBJbiB0aGUgZnV0dXJlIHRoaXNcbiAgICAgICAgICAgIC8vIHNob3VsZCBiZSByZXBsYWNlZCB3aXRoIHNvbWV0aGluZyBtdWNoIG1vcmUgcm9idXN0LlxuICAgICAgICAgICAgaWYgKGVsID09PSBudWxsIHx8ICFkb2N1bWVudC5jb250YWlucyhlbCkpIHtcbiAgICAgICAgICAgICAgICBjYW52YXNSZWY/LmN1cnJlbnQ/LmZvY3VzKHtcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudFNjcm9sbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsLmZvY3VzKHtcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudFNjcm9sbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Qm91bmRzOiAoY29sLCByb3cpID0+IHtcbiAgICAgICAgICAgIGlmIChjYW52YXNSZWYgPT09IHVuZGVmaW5lZCB8fCBjYW52YXNSZWYuY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZ2V0Qm91bmRzRm9ySXRlbShjYW52YXNSZWYuY3VycmVudCwgY29sID8/IDAsIHJvdyA/PyAtMSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRhbWFnZSxcbiAgICB9KSwgW2NhbnZhc1JlZiwgZGFtYWdlLCBnZXRCb3VuZHNGb3JJdGVtXSk7XG4gICAgY29uc3QgbGFzdEZvY3VzZWRTdWJkb21Ob2RlID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgYWNjZXNzaWJpbGl0eVRyZWUgPSB1c2VEZWJvdW5jZWRNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKHdpZHRoIDwgNTAgfHwgZXhwZXJpbWVudGFsPy5kaXNhYmxlQWNjZXNzaWJpbGl0eVRyZWUgPT09IHRydWUpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgbGV0IGVmZmVjdGl2ZUNvbHMgPSBnZXRFZmZlY3RpdmVDb2x1bW5zKG1hcHBlZENvbHVtbnMsIGNlbGxYT2Zmc2V0LCB3aWR0aCwgZHJhZ0FuZERyb3BTdGF0ZSwgdHJhbnNsYXRlWCk7XG4gICAgICAgIGNvbnN0IGNvbE9mZnNldCA9IGZpcnN0Q29sQWNjZXNzaWJsZSA/IDAgOiAtMTtcbiAgICAgICAgaWYgKCFmaXJzdENvbEFjY2Vzc2libGUgJiYgZWZmZWN0aXZlQ29sc1swXT8uc291cmNlSW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIGVmZmVjdGl2ZUNvbHMgPSBlZmZlY3RpdmVDb2xzLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFtmQ29sLCBmUm93XSA9IHNlbGVjdGlvbi5jdXJyZW50Py5jZWxsID8/IFtdO1xuICAgICAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5jdXJyZW50Py5yYW5nZTtcbiAgICAgICAgY29uc3QgdmlzaWJsZUNvbHMgPSBlZmZlY3RpdmVDb2xzLm1hcChjID0+IGMuc291cmNlSW5kZXgpO1xuICAgICAgICBjb25zdCB2aXNpYmxlUm93cyA9IG1ha2VSYW5nZShjZWxsWU9mZnNldCwgTWF0aC5taW4ocm93cywgY2VsbFlPZmZzZXQgKyBhY2Nlc3NpYmlsaXR5SGVpZ2h0KSk7XG4gICAgICAgIC8vIE1haW50YWluIGZvY3VzIHdpdGhpbiBncmlkIGlmIHdlIG93biBpdCBidXQgZm9jdXNlZCBjZWxsIGlzIG91dHNpZGUgdmlzaWJsZSB2aWV3cG9ydFxuICAgICAgICAvLyBhbmQgbm90IHJlbmRlcmVkLlxuICAgICAgICBpZiAoZkNvbCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBmUm93ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICEodmlzaWJsZUNvbHMuaW5jbHVkZXMoZkNvbCkgJiYgdmlzaWJsZVJvd3MuaW5jbHVkZXMoZlJvdykpKSB7XG4gICAgICAgICAgICBmb2N1c0VsZW1lbnQobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwidGFibGVcIiwgeyBrZXk6IFwiYWNjZXNzLXRyZWVcIiwgcm9sZTogXCJncmlkXCIsIFwiYXJpYS1yb3djb3VudFwiOiByb3dzICsgMSwgXCJhcmlhLW11bHRpc2VsZWN0YWJsZVwiOiBcInRydWVcIiwgXCJhcmlhLWNvbGNvdW50XCI6IG1hcHBlZENvbHVtbnMubGVuZ3RoICsgY29sT2Zmc2V0IH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGhlYWRcIiwgeyByb2xlOiBcInJvd2dyb3VwXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidHJcIiwgeyByb2xlOiBcInJvd1wiLCBcImFyaWEtcm93aW5kZXhcIjogMSB9LCBlZmZlY3RpdmVDb2xzLm1hcChjID0+IChSZWFjdC5jcmVhdGVFbGVtZW50KFwidGhcIiwgeyByb2xlOiBcImNvbHVtbmhlYWRlclwiLCBcImFyaWEtc2VsZWN0ZWRcIjogc2VsZWN0aW9uLmNvbHVtbnMuaGFzSW5kZXgoYy5zb3VyY2VJbmRleCksIFwiYXJpYS1jb2xpbmRleFwiOiBjLnNvdXJjZUluZGV4ICsgMSArIGNvbE9mZnNldCwgdGFiSW5kZXg6IC0xLCBvbkZvY3VzOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldCA9PT0gZm9jdXNSZWYuY3VycmVudClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb25DZWxsRm9jdXNlZD8uKFtjLnNvdXJjZUluZGV4LCAtMV0pO1xuICAgICAgICAgICAgICAgICAgICB9LCBrZXk6IGMuc291cmNlSW5kZXggfSwgYy50aXRsZSkpKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRib2R5XCIsIHsgcm9sZTogXCJyb3dncm91cFwiIH0sIHZpc2libGVSb3dzLm1hcChyb3cgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0clwiLCB7IHJvbGU6IFwicm93XCIsIFwiYXJpYS1zZWxlY3RlZFwiOiBzZWxlY3Rpb24ucm93cy5oYXNJbmRleChyb3cpLCBrZXk6IHJvdywgXCJhcmlhLXJvd2luZGV4XCI6IHJvdyArIDIgfSwgZWZmZWN0aXZlQ29scy5tYXAoYyA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29sID0gYy5zb3VyY2VJbmRleDtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBwYWNrQ29sUm93VG9OdW1iZXIoY29sLCByb3cpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZvY3VzZWQgPSBmQ29sID09PSBjb2wgJiYgZlJvdyA9PT0gcm93O1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gcmFuZ2UgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICBjb2wgPj0gcmFuZ2UueCAmJlxuICAgICAgICAgICAgICAgICAgICBjb2wgPCByYW5nZS54ICsgcmFuZ2Uud2lkdGggJiZcbiAgICAgICAgICAgICAgICAgICAgcm93ID49IHJhbmdlLnkgJiZcbiAgICAgICAgICAgICAgICAgICAgcm93IDwgcmFuZ2UueSArIHJhbmdlLmhlaWdodDtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGBnbGlkZS1jZWxsLSR7Y29sfS0ke3Jvd31gO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gW2NvbCwgcm93XTtcbiAgICAgICAgICAgICAgICBjb25zdCBjZWxsQ29udGVudCA9IGdldENlbGxDb250ZW50KGxvY2F0aW9uLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiLCB7IGtleToga2V5LCByb2xlOiBcImdyaWRjZWxsXCIsIFwiYXJpYS1jb2xpbmRleFwiOiBjb2wgKyAxICsgY29sT2Zmc2V0LCBcImFyaWEtc2VsZWN0ZWRcIjogc2VsZWN0ZWQsIFwiYXJpYS1yZWFkb25seVwiOiBpc0lubmVyT25seUNlbGwoY2VsbENvbnRlbnQpIHx8ICFpc1JlYWRXcml0ZUNlbGwoY2VsbENvbnRlbnQpLCBpZDogaWQsIFwiZGF0YS10ZXN0aWRcIjogaWQsIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGNhbnZhc1JlZj8uY3VycmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW52YXMgPT09IG51bGwgfHwgY2FudmFzID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9uS2V5RG93bj8uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3VuZHM6IGdldEJvdW5kc0Zvckl0ZW0oY2FudmFzLCBjb2wsIHJvdyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsOiAoKSA9PiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQ6ICgpID0+IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wUHJvcGFnYXRpb246ICgpID0+IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHJsS2V5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IFwiRW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiAxMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhS2V5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGlmdEtleTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0S2V5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdFdmVudDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIG9uRm9jdXNDYXB0dXJlOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldCA9PT0gZm9jdXNSZWYuY3VycmVudCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChsYXN0Rm9jdXNlZFN1YmRvbU5vZGUuY3VycmVudD8uWzBdID09PSBjb2wgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEZvY3VzZWRTdWJkb21Ob2RlLmN1cnJlbnQ/LlsxXSA9PT0gcm93KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9jdXNlZFN1YmRvbU5vZGUuY3VycmVudCA9IGxvY2F0aW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9uQ2VsbEZvY3VzZWQ/Lihsb2NhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIH0sIHJlZjogZm9jdXNlZCA/IGZvY3VzRWxlbWVudCA6IHVuZGVmaW5lZCwgdGFiSW5kZXg6IC0xIH0sIGdldFJvd0RhdGEoY2VsbENvbnRlbnQsIGdldENlbGxSZW5kZXJlcikpKTtcbiAgICAgICAgICAgIH0pKSkpKSkpO1xuICAgIH0sIFtcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIG1hcHBlZENvbHVtbnMsXG4gICAgICAgIGNlbGxYT2Zmc2V0LFxuICAgICAgICBkcmFnQW5kRHJvcFN0YXRlLFxuICAgICAgICB0cmFuc2xhdGVYLFxuICAgICAgICByb3dzLFxuICAgICAgICBjZWxsWU9mZnNldCxcbiAgICAgICAgYWNjZXNzaWJpbGl0eUhlaWdodCxcbiAgICAgICAgc2VsZWN0aW9uLFxuICAgICAgICBmb2N1c0VsZW1lbnQsXG4gICAgICAgIGdldENlbGxDb250ZW50LFxuICAgICAgICBjYW52YXNSZWYsXG4gICAgICAgIG9uS2V5RG93bixcbiAgICAgICAgZ2V0Qm91bmRzRm9ySXRlbSxcbiAgICAgICAgb25DZWxsRm9jdXNlZCxcbiAgICBdLCAyMDApO1xuICAgIGNvbnN0IG9wYWNpdHlYID0gZnJlZXplQ29sdW1ucyA9PT0gMCB8fCAhZml4ZWRTaGFkb3dYID8gMCA6IGNlbGxYT2Zmc2V0ID4gZnJlZXplQ29sdW1ucyA/IDEgOiBjbGFtcCgtdHJhbnNsYXRlWCAvIDEwMCwgMCwgMSk7XG4gICAgY29uc3QgYWJzb2x1dGVPZmZzZXRZID0gLWNlbGxZT2Zmc2V0ICogMzIgKyB0cmFuc2xhdGVZO1xuICAgIGNvbnN0IG9wYWNpdHlZID0gIWZpeGVkU2hhZG93WSA/IDAgOiBjbGFtcCgtYWJzb2x1dGVPZmZzZXRZIC8gMTAwLCAwLCAxKTtcbiAgICBjb25zdCBzdGlja3lTaGFkb3cgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFvcGFjaXR5WCAmJiAhb3BhY2l0eVkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN0eWxlWCA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICBsZWZ0OiBzdGlja3lYLFxuICAgICAgICAgICAgd2lkdGg6IHdpZHRoIC0gc3RpY2t5WCxcbiAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICAgICAgb3BhY2l0eTogb3BhY2l0eVgsXG4gICAgICAgICAgICBwb2ludGVyRXZlbnRzOiBcIm5vbmVcIixcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICFzbW9vdGhTY3JvbGxYID8gXCJvcGFjaXR5IDAuMnNcIiA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGJveFNoYWRvdzogXCJpbnNldCAxM3B4IDAgMTBweCAtMTNweCByZ2JhKDAsIDAsIDAsIDAuMilcIixcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc3R5bGVZID0ge1xuICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgIHRvcDogdG90YWxIZWFkZXJIZWlnaHQsXG4gICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgICAgICBvcGFjaXR5OiBvcGFjaXR5WSxcbiAgICAgICAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogIXNtb290aFNjcm9sbFkgPyBcIm9wYWNpdHkgMC4yc1wiIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgYm94U2hhZG93OiBcImluc2V0IDAgMTNweCAxMHB4IC0xM3B4IHJnYmEoMCwgMCwgMCwgMC4yKVwiLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgICAgICBvcGFjaXR5WCA+IDAgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiBcInNoYWRvdy14XCIsIHN0eWxlOiBzdHlsZVggfSksXG4gICAgICAgICAgICBvcGFjaXR5WSA+IDAgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiBcInNoYWRvdy15XCIsIHN0eWxlOiBzdHlsZVkgfSkpKTtcbiAgICB9LCBbb3BhY2l0eVgsIG9wYWNpdHlZLCBzdGlja3lYLCB3aWR0aCwgc21vb3RoU2Nyb2xsWCwgdG90YWxIZWFkZXJIZWlnaHQsIGhlaWdodCwgc21vb3RoU2Nyb2xsWV0pO1xuICAgIGNvbnN0IG92ZXJsYXlTdHlsZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICBsZWZ0OiAwLFxuICAgIH0pLCBbXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIsIHsgXCJkYXRhLXRlc3RpZFwiOiBcImRhdGEtZ3JpZC1jYW52YXNcIiwgdGFiSW5kZXg6IDAsIG9uS2V5RG93bjogb25LZXlEb3duSW1wbCwgb25LZXlVcDogb25LZXlVcEltcGwsIG9uRm9jdXM6IG9uQ2FudmFzRm9jdXNlZCwgb25CbHVyOiBvbkNhbnZhc0JsdXIsIHJlZjogcmVmSW1wbCwgc3R5bGU6IHN0eWxlIH0sIGFjY2Vzc2liaWxpdHlUcmVlKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiLCB7IHJlZjogb3ZlcmxheVJlZiwgc3R5bGU6IG92ZXJsYXlTdHlsZSB9KSxcbiAgICAgICAgc3RpY2t5U2hhZG93KSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbyhSZWFjdC5mb3J3YXJkUmVmKERhdGFHcmlkKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhLWdyaWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/event-args.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/event-args.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutOfBoundsRegionAxis: () => (/* binding */ OutOfBoundsRegionAxis),\n/* harmony export */   groupHeaderKind: () => (/* binding */ groupHeaderKind),\n/* harmony export */   headerKind: () => (/* binding */ headerKind),\n/* harmony export */   mouseEventArgsAreEqual: () => (/* binding */ mouseEventArgsAreEqual),\n/* harmony export */   outOfBoundsKind: () => (/* binding */ outOfBoundsKind)\n/* harmony export */ });\n/** @category Types */\nconst headerKind = \"header\";\n/** @category Types */\nconst groupHeaderKind = \"group-header\";\n/** @category Types */\nconst outOfBoundsKind = \"out-of-bounds\";\n/** @category Types */\nvar OutOfBoundsRegionAxis;\n(function (OutOfBoundsRegionAxis) {\n    OutOfBoundsRegionAxis[OutOfBoundsRegionAxis[\"Start\"] = -2] = \"Start\";\n    OutOfBoundsRegionAxis[OutOfBoundsRegionAxis[\"StartPadding\"] = -1] = \"StartPadding\";\n    OutOfBoundsRegionAxis[OutOfBoundsRegionAxis[\"Center\"] = 0] = \"Center\";\n    OutOfBoundsRegionAxis[OutOfBoundsRegionAxis[\"EndPadding\"] = 1] = \"EndPadding\";\n    OutOfBoundsRegionAxis[OutOfBoundsRegionAxis[\"End\"] = 2] = \"End\";\n})(OutOfBoundsRegionAxis || (OutOfBoundsRegionAxis = {}));\nfunction mouseEventArgsAreEqual(args, other) {\n    if (args === other)\n        return true;\n    if (args?.kind === \"out-of-bounds\") {\n        return (args?.kind === other?.kind &&\n            args?.location[0] === other?.location[0] &&\n            args?.location[1] === other?.location[1] &&\n            args?.region[0] === other?.region[0] &&\n            args?.region[1] === other?.region[1]);\n    }\n    return (args?.kind === other?.kind &&\n        args?.location[0] === other?.location[0] &&\n        args?.location[1] === other?.location[1]);\n}\n//# sourceMappingURL=event-args.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2V2ZW50LWFyZ3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzREFBc0Q7QUFDaEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL2V2ZW50LWFyZ3MuanM/NzJkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGNhdGVnb3J5IFR5cGVzICovXG5leHBvcnQgY29uc3QgaGVhZGVyS2luZCA9IFwiaGVhZGVyXCI7XG4vKiogQGNhdGVnb3J5IFR5cGVzICovXG5leHBvcnQgY29uc3QgZ3JvdXBIZWFkZXJLaW5kID0gXCJncm91cC1oZWFkZXJcIjtcbi8qKiBAY2F0ZWdvcnkgVHlwZXMgKi9cbmV4cG9ydCBjb25zdCBvdXRPZkJvdW5kc0tpbmQgPSBcIm91dC1vZi1ib3VuZHNcIjtcbi8qKiBAY2F0ZWdvcnkgVHlwZXMgKi9cbmV4cG9ydCB2YXIgT3V0T2ZCb3VuZHNSZWdpb25BeGlzO1xuKGZ1bmN0aW9uIChPdXRPZkJvdW5kc1JlZ2lvbkF4aXMpIHtcbiAgICBPdXRPZkJvdW5kc1JlZ2lvbkF4aXNbT3V0T2ZCb3VuZHNSZWdpb25BeGlzW1wiU3RhcnRcIl0gPSAtMl0gPSBcIlN0YXJ0XCI7XG4gICAgT3V0T2ZCb3VuZHNSZWdpb25BeGlzW091dE9mQm91bmRzUmVnaW9uQXhpc1tcIlN0YXJ0UGFkZGluZ1wiXSA9IC0xXSA9IFwiU3RhcnRQYWRkaW5nXCI7XG4gICAgT3V0T2ZCb3VuZHNSZWdpb25BeGlzW091dE9mQm91bmRzUmVnaW9uQXhpc1tcIkNlbnRlclwiXSA9IDBdID0gXCJDZW50ZXJcIjtcbiAgICBPdXRPZkJvdW5kc1JlZ2lvbkF4aXNbT3V0T2ZCb3VuZHNSZWdpb25BeGlzW1wiRW5kUGFkZGluZ1wiXSA9IDFdID0gXCJFbmRQYWRkaW5nXCI7XG4gICAgT3V0T2ZCb3VuZHNSZWdpb25BeGlzW091dE9mQm91bmRzUmVnaW9uQXhpc1tcIkVuZFwiXSA9IDJdID0gXCJFbmRcIjtcbn0pKE91dE9mQm91bmRzUmVnaW9uQXhpcyB8fCAoT3V0T2ZCb3VuZHNSZWdpb25BeGlzID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBtb3VzZUV2ZW50QXJnc0FyZUVxdWFsKGFyZ3MsIG90aGVyKSB7XG4gICAgaWYgKGFyZ3MgPT09IG90aGVyKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYXJncz8ua2luZCA9PT0gXCJvdXQtb2YtYm91bmRzXCIpIHtcbiAgICAgICAgcmV0dXJuIChhcmdzPy5raW5kID09PSBvdGhlcj8ua2luZCAmJlxuICAgICAgICAgICAgYXJncz8ubG9jYXRpb25bMF0gPT09IG90aGVyPy5sb2NhdGlvblswXSAmJlxuICAgICAgICAgICAgYXJncz8ubG9jYXRpb25bMV0gPT09IG90aGVyPy5sb2NhdGlvblsxXSAmJlxuICAgICAgICAgICAgYXJncz8ucmVnaW9uWzBdID09PSBvdGhlcj8ucmVnaW9uWzBdICYmXG4gICAgICAgICAgICBhcmdzPy5yZWdpb25bMV0gPT09IG90aGVyPy5yZWdpb25bMV0pO1xuICAgIH1cbiAgICByZXR1cm4gKGFyZ3M/LmtpbmQgPT09IG90aGVyPy5raW5kICYmXG4gICAgICAgIGFyZ3M/LmxvY2F0aW9uWzBdID09PSBvdGhlcj8ubG9jYXRpb25bMF0gJiZcbiAgICAgICAgYXJncz8ubG9jYXRpb25bMV0gPT09IG90aGVyPy5sb2NhdGlvblsxXSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudC1hcmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/event-args.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cellIsInRange: () => (/* binding */ cellIsInRange),\n/* harmony export */   cellIsSelected: () => (/* binding */ cellIsSelected),\n/* harmony export */   computeBounds: () => (/* binding */ computeBounds),\n/* harmony export */   drawLastUpdateUnderlay: () => (/* binding */ drawLastUpdateUnderlay),\n/* harmony export */   drawMenuDots: () => (/* binding */ drawMenuDots),\n/* harmony export */   drawTextCell: () => (/* binding */ drawTextCell),\n/* harmony export */   drawTextCellExternal: () => (/* binding */ drawTextCellExternal),\n/* harmony export */   getColumnIndexForX: () => (/* binding */ getColumnIndexForX),\n/* harmony export */   getEffectiveColumns: () => (/* binding */ getEffectiveColumns),\n/* harmony export */   getEmHeight: () => (/* binding */ getEmHeight),\n/* harmony export */   getFreezeTrailingHeight: () => (/* binding */ getFreezeTrailingHeight),\n/* harmony export */   getMeasuredTextCache: () => (/* binding */ getMeasuredTextCache),\n/* harmony export */   getMiddleCenterBias: () => (/* binding */ getMiddleCenterBias),\n/* harmony export */   getRowIndexForY: () => (/* binding */ getRowIndexForY),\n/* harmony export */   getStickyWidth: () => (/* binding */ getStickyWidth),\n/* harmony export */   gridSelectionHasItem: () => (/* binding */ gridSelectionHasItem),\n/* harmony export */   isGroupEqual: () => (/* binding */ isGroupEqual),\n/* harmony export */   itemIsInRect: () => (/* binding */ itemIsInRect),\n/* harmony export */   itemsAreEqual: () => (/* binding */ itemsAreEqual),\n/* harmony export */   measureTextCached: () => (/* binding */ measureTextCached),\n/* harmony export */   prepTextCell: () => (/* binding */ prepTextCell),\n/* harmony export */   rectBottomRight: () => (/* binding */ rectBottomRight),\n/* harmony export */   remapForDnDState: () => (/* binding */ remapForDnDState),\n/* harmony export */   roundedPoly: () => (/* binding */ roundedPoly),\n/* harmony export */   roundedRect: () => (/* binding */ roundedRect),\n/* harmony export */   useMappedColumns: () => (/* binding */ useMappedColumns)\n/* harmony export */ });\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var canvas_hypertxt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! canvas-hypertxt */ \"(ssr)/./node_modules/canvas-hypertxt/dist/js/index.js\");\n\n\n\n\nfunction useMappedColumns(columns, freezeColumns) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => columns.map((c, i) => ({\n        group: c.group,\n        grow: c.grow,\n        hasMenu: c.hasMenu,\n        icon: c.icon,\n        id: c.id,\n        menuIcon: c.menuIcon,\n        overlayIcon: c.overlayIcon,\n        sourceIndex: i,\n        sticky: i < freezeColumns,\n        style: c.style,\n        themeOverride: c.themeOverride,\n        title: c.title,\n        trailingRowOptions: c.trailingRowOptions,\n        width: c.width,\n        growOffset: c.growOffset,\n        rowMarker: c.rowMarker,\n        rowMarkerChecked: c.rowMarkerChecked,\n    })), [columns, freezeColumns]);\n}\nfunction gridSelectionHasItem(sel, item) {\n    const [col, row] = item;\n    if (sel.columns.hasIndex(col) || sel.rows.hasIndex(row))\n        return true;\n    if (sel.current !== undefined) {\n        if (itemsAreEqual(sel.current.cell, item))\n            return true;\n        const toCheck = [sel.current.range, ...sel.current.rangeStack]; // FIXME: pointless alloc\n        for (const r of toCheck) {\n            // dont we have a function for this?\n            if (col >= r.x && col < r.x + r.width && row >= r.y && row < r.y + r.height)\n                return true;\n        }\n    }\n    return false;\n}\nfunction isGroupEqual(left, right) {\n    return (left ?? \"\") === (right ?? \"\");\n}\nfunction cellIsSelected(location, cell, selection) {\n    if (selection.current === undefined)\n        return false;\n    if (location[1] !== selection.current.cell[1])\n        return false;\n    if (cell.span === undefined) {\n        return selection.current.cell[0] === location[0];\n    }\n    return selection.current.cell[0] >= cell.span[0] && selection.current.cell[0] <= cell.span[1];\n}\nfunction itemIsInRect(location, rect) {\n    const [x, y] = location;\n    return x >= rect.x && x < rect.x + rect.width && y >= rect.y && y < rect.y + rect.height;\n}\nfunction itemsAreEqual(a, b) {\n    return a?.[0] === b?.[0] && a?.[1] === b?.[1];\n}\nfunction rectBottomRight(rect) {\n    return [rect.x + rect.width - 1, rect.y + rect.height - 1];\n}\nfunction cellIsInRect(location, cell, rect) {\n    const startX = rect.x;\n    const endX = rect.x + rect.width - 1;\n    const startY = rect.y;\n    const endY = rect.y + rect.height - 1;\n    const [cellCol, cellRow] = location;\n    if (cellRow < startY || cellRow > endY)\n        return false;\n    if (cell.span === undefined) {\n        return cellCol >= startX && cellCol <= endX;\n    }\n    const [spanStart, spanEnd] = cell.span;\n    return ((spanStart >= startX && spanStart <= endX) ||\n        (spanEnd >= startX && spanStart <= endX) ||\n        (spanStart < startX && spanEnd > endX));\n}\nfunction cellIsInRange(location, cell, selection, includeSingleSelection) {\n    let result = 0;\n    if (selection.current === undefined)\n        return result;\n    const range = selection.current.range;\n    if ((includeSingleSelection || range.height * range.width > 1) && cellIsInRect(location, cell, range)) {\n        result++;\n    }\n    for (const r of selection.current.rangeStack) {\n        if (cellIsInRect(location, cell, r)) {\n            result++;\n        }\n    }\n    return result;\n}\nfunction remapForDnDState(columns, dndState) {\n    let mappedCols = columns;\n    if (dndState !== undefined) {\n        let writable = [...columns];\n        const temp = mappedCols[dndState.src];\n        if (dndState.src > dndState.dest) {\n            writable.splice(dndState.src, 1);\n            writable.splice(dndState.dest, 0, temp);\n        }\n        else {\n            writable.splice(dndState.dest + 1, 0, temp);\n            writable.splice(dndState.src, 1);\n        }\n        writable = writable.map((c, i) => ({\n            ...c,\n            sticky: columns[i].sticky,\n        }));\n        mappedCols = writable;\n    }\n    return mappedCols;\n}\nfunction getStickyWidth(columns, dndState) {\n    let result = 0;\n    const remapped = remapForDnDState(columns, dndState);\n    for (let i = 0; i < remapped.length; i++) {\n        const c = remapped[i];\n        if (c.sticky)\n            result += c.width;\n        else\n            break;\n    }\n    return result;\n}\nfunction getFreezeTrailingHeight(rows, freezeTrailingRows, getRowHeight) {\n    if (typeof getRowHeight === \"number\") {\n        return freezeTrailingRows * getRowHeight;\n    }\n    else {\n        let result = 0;\n        for (let i = rows - freezeTrailingRows; i < rows; i++) {\n            result += getRowHeight(i);\n        }\n        return result;\n    }\n}\nfunction getEffectiveColumns(columns, cellXOffset, width, dndState, tx) {\n    const mappedCols = remapForDnDState(columns, dndState);\n    const sticky = [];\n    for (const c of mappedCols) {\n        if (c.sticky) {\n            sticky.push(c);\n        }\n        else {\n            break;\n        }\n    }\n    if (sticky.length > 0) {\n        for (const c of sticky) {\n            width -= c.width;\n        }\n    }\n    let endIndex = cellXOffset;\n    let curX = tx ?? 0;\n    while (curX <= width && endIndex < mappedCols.length) {\n        curX += mappedCols[endIndex].width;\n        endIndex++;\n    }\n    for (let i = cellXOffset; i < endIndex; i++) {\n        const c = mappedCols[i];\n        if (!c.sticky) {\n            sticky.push(c);\n        }\n    }\n    return sticky;\n}\nfunction getColumnIndexForX(targetX, effectiveColumns, translateX) {\n    let x = 0;\n    for (const c of effectiveColumns) {\n        const cx = c.sticky ? x : x + (translateX ?? 0);\n        if (targetX <= cx + c.width) {\n            return c.sourceIndex;\n        }\n        x += c.width;\n    }\n    return -1;\n}\nfunction getRowIndexForY(targetY, height, hasGroups, headerHeight, groupHeaderHeight, rows, rowHeight, cellYOffset, translateY, freezeTrailingRows) {\n    const totalHeaderHeight = headerHeight + groupHeaderHeight;\n    if (hasGroups && targetY <= groupHeaderHeight)\n        return -2;\n    if (targetY <= totalHeaderHeight)\n        return -1;\n    let y = height;\n    for (let fr = 0; fr < freezeTrailingRows; fr++) {\n        const row = rows - 1 - fr;\n        const rh = typeof rowHeight === \"number\" ? rowHeight : rowHeight(row);\n        y -= rh;\n        if (targetY >= y) {\n            return row;\n        }\n    }\n    const effectiveRows = rows - freezeTrailingRows;\n    const ty = targetY - (translateY ?? 0);\n    if (typeof rowHeight === \"number\") {\n        const target = Math.floor((ty - totalHeaderHeight) / rowHeight) + cellYOffset;\n        if (target >= effectiveRows)\n            return undefined;\n        return target;\n    }\n    else {\n        let curY = totalHeaderHeight;\n        for (let i = cellYOffset; i < effectiveRows; i++) {\n            const rh = rowHeight(i);\n            if (ty <= curY + rh)\n                return i;\n            curY += rh;\n        }\n        return undefined;\n    }\n}\nlet metricsSize = 0;\nlet metricsCache = {};\nconst isSSR = typeof window === \"undefined\";\nasync function clearCacheOnLoad() {\n    if (isSSR || document?.fonts?.ready === undefined)\n        return;\n    await document.fonts.ready;\n    metricsSize = 0;\n    metricsCache = {};\n    (0,canvas_hypertxt__WEBPACK_IMPORTED_MODULE_1__.clearCache)();\n}\nvoid clearCacheOnLoad();\nfunction makeCacheKey(s, ctx, baseline, font) {\n    return `${s}_${font ?? ctx?.font}_${baseline}`;\n}\n/** @category Drawing */\nfunction measureTextCached(s, ctx, font, baseline = \"middle\") {\n    const key = makeCacheKey(s, ctx, baseline, font);\n    let metrics = metricsCache[key];\n    if (metrics === undefined) {\n        metrics = ctx.measureText(s);\n        metricsCache[key] = metrics;\n        metricsSize++;\n    }\n    if (metricsSize > 10000) {\n        metricsCache = {};\n        metricsSize = 0;\n    }\n    return metrics;\n}\nfunction getMeasuredTextCache(s, font) {\n    const key = makeCacheKey(s, undefined, \"middle\", font);\n    return metricsCache[key];\n}\n/** @category Drawing */\nfunction getMiddleCenterBias(ctx, font) {\n    if (typeof font !== \"string\") {\n        font = font.baseFontFull;\n    }\n    return getMiddleCenterBiasInner(ctx, font);\n}\nfunction loadMetric(ctx, baseline) {\n    const sample = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    ctx.save();\n    ctx.textBaseline = baseline;\n    const result = ctx.measureText(sample);\n    ctx.restore();\n    return result;\n}\nconst biasCache = [];\nfunction getMiddleCenterBiasInner(ctx, font) {\n    for (const x of biasCache) {\n        if (x.key === font)\n            return x.val;\n    }\n    const alphabeticMetrics = loadMetric(ctx, \"alphabetic\");\n    const middleMetrics = loadMetric(ctx, \"middle\");\n    const bias = -(middleMetrics.actualBoundingBoxDescent - alphabeticMetrics.actualBoundingBoxDescent) +\n        alphabeticMetrics.actualBoundingBoxAscent / 2;\n    biasCache.push({\n        key: font,\n        val: bias,\n    });\n    return bias;\n}\nfunction drawLastUpdateUnderlay(args, lastUpdate, frameTime, lastPrep, isLastCol, isLastRow) {\n    const { ctx, rect, theme } = args;\n    let progress = Number.MAX_SAFE_INTEGER;\n    const animTime = 500;\n    if (lastUpdate !== undefined) {\n        progress = frameTime - lastUpdate;\n        if (progress < animTime) {\n            const fade = 1 - progress / animTime;\n            ctx.globalAlpha = fade;\n            ctx.fillStyle = theme.bgSearchResult;\n            ctx.fillRect(rect.x + 1, rect.y + 1, rect.width - (isLastCol ? 2 : 1), rect.height - (isLastRow ? 2 : 1));\n            ctx.globalAlpha = 1;\n            if (lastPrep !== undefined) {\n                lastPrep.fillStyle = theme.bgSearchResult;\n            }\n        }\n    }\n    return progress < animTime;\n}\nfunction prepTextCell(args, lastPrep, overrideColor) {\n    const { ctx, theme } = args;\n    const result = lastPrep ?? {};\n    const newFill = overrideColor ?? theme.textDark;\n    if (newFill !== result.fillStyle) {\n        ctx.fillStyle = newFill;\n        result.fillStyle = newFill;\n    }\n    return result;\n}\n/** @category Drawing */\nfunction drawTextCellExternal(args, data, contentAlign) {\n    const { rect, ctx, theme } = args;\n    ctx.fillStyle = theme.textDark;\n    drawTextCell({\n        ctx: ctx,\n        rect,\n        theme: theme,\n    }, data, contentAlign);\n}\nfunction drawSingleTextLine(ctx, data, x, y, w, h, bias, theme, contentAlign) {\n    if (contentAlign === \"right\") {\n        ctx.fillText(data, x + w - (theme.cellHorizontalPadding + 0.5), y + h / 2 + bias);\n    }\n    else if (contentAlign === \"center\") {\n        ctx.fillText(data, x + w / 2, y + h / 2 + bias);\n    }\n    else {\n        ctx.fillText(data, x + theme.cellHorizontalPadding + 0.5, y + h / 2 + bias);\n    }\n}\nfunction getEmHeight(ctx, fontStyle) {\n    const textMetrics = measureTextCached(\"ABCi09jgqpy\", ctx, fontStyle); // do not question the magic string\n    return textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent;\n}\nfunction truncateString(data, w) {\n    if (data.includes(\"\\n\")) {\n        // new lines are rare and split is relatively expensive compared to the search\n        // it pays off to not do the split contantly. More accurately... it pays off not to run the regex.\n        // what even is the point of this? So what if there is a /r at the end of a line? It wont be drawn anyway.\n        data = data.split(/\\r?\\n/, 1)[0];\n    }\n    const max = w / 4; // no need to round, slice will just truncate this\n    if (data.length > max) {\n        data = data.slice(0, max);\n    }\n    return data;\n}\nfunction drawMultiLineText(ctx, data, x, y, w, h, bias, theme, contentAlign, hyperWrapping) {\n    const fontStyle = theme.baseFontFull;\n    const split = (0,canvas_hypertxt__WEBPACK_IMPORTED_MODULE_1__.split)(ctx, data, fontStyle, w - theme.cellHorizontalPadding * 2, hyperWrapping ?? false);\n    const emHeight = getEmHeight(ctx, fontStyle);\n    const lineHeight = theme.lineHeight * emHeight;\n    const actualHeight = emHeight + lineHeight * (split.length - 1);\n    const mustClip = actualHeight + theme.cellVerticalPadding > h;\n    if (mustClip) {\n        // well now we have to clip because we might render outside the cell vertically\n        ctx.save();\n        ctx.rect(x, y, w, h);\n        ctx.clip();\n    }\n    const optimalY = y + h / 2 - actualHeight / 2;\n    let drawY = Math.max(y + theme.cellVerticalPadding, optimalY);\n    for (const line of split) {\n        drawSingleTextLine(ctx, line, x, drawY, w, emHeight, bias, theme, contentAlign);\n        drawY += lineHeight;\n        if (drawY > y + h)\n            break;\n    }\n    if (mustClip) {\n        ctx.restore();\n    }\n}\n/** @category Drawing */\nfunction drawTextCell(args, data, contentAlign, allowWrapping, hyperWrapping) {\n    const { ctx, rect, theme } = args;\n    const { x, y, width: w, height: h } = rect;\n    allowWrapping = allowWrapping ?? false;\n    if (!allowWrapping) {\n        data = truncateString(data, w);\n    }\n    const bias = getMiddleCenterBias(ctx, theme);\n    const isRtl = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.direction)(data) === \"rtl\";\n    if (contentAlign === undefined && isRtl) {\n        contentAlign = \"right\";\n    }\n    if (isRtl) {\n        ctx.direction = \"rtl\";\n    }\n    if (data.length > 0) {\n        let changed = false;\n        if (contentAlign === \"right\") {\n            // Use right alignment as default for RTL text\n            ctx.textAlign = \"right\";\n            changed = true;\n        }\n        else if (contentAlign !== undefined && contentAlign !== \"left\") {\n            // Since default is start (=left), only apply if alignment is center or right\n            ctx.textAlign = contentAlign;\n            changed = true;\n        }\n        if (!allowWrapping) {\n            drawSingleTextLine(ctx, data, x, y, w, h, bias, theme, contentAlign);\n        }\n        else {\n            drawMultiLineText(ctx, data, x, y, w, h, bias, theme, contentAlign, hyperWrapping);\n        }\n        if (changed) {\n            // Reset alignment to default\n            ctx.textAlign = \"start\";\n        }\n        if (isRtl) {\n            ctx.direction = \"inherit\";\n        }\n    }\n}\nfunction roundedRect(ctx, x, y, width, height, radius) {\n    if (typeof radius === \"number\") {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    }\n    // restrict radius to a reasonable max\n    radius = {\n        tl: Math.max(0, Math.min(radius.tl, height / 2, width / 2)),\n        tr: Math.max(0, Math.min(radius.tr, height / 2, width / 2)),\n        bl: Math.max(0, Math.min(radius.bl, height / 2, width / 2)),\n        br: Math.max(0, Math.min(radius.br, height / 2, width / 2)),\n    };\n    ctx.moveTo(x + radius.tl, y);\n    ctx.arcTo(x + width, y, x + width, y + radius.tr, radius.tr);\n    ctx.arcTo(x + width, y + height, x + width - radius.br, y + height, radius.br);\n    ctx.arcTo(x, y + height, x, y + height - radius.bl, radius.bl);\n    ctx.arcTo(x, y, x + radius.tl, y, radius.tl);\n}\nfunction drawMenuDots(ctx, dotsX, dotsY) {\n    const radius = 1.25;\n    ctx.arc(dotsX, dotsY - radius * 3.5, radius, 0, 2 * Math.PI, false);\n    ctx.arc(dotsX, dotsY, radius, 0, 2 * Math.PI, false);\n    ctx.arc(dotsX, dotsY + radius * 3.5, radius, 0, 2 * Math.PI, false);\n}\nfunction roundedPoly(ctx, points, radiusAll) {\n    // convert 2 points into vector form, polar form, and normalised\n    const asVec = function (p, pp) {\n        const vx = pp.x - p.x;\n        const vy = pp.y - p.y;\n        const vlen = Math.sqrt(vx * vx + vy * vy);\n        const vnx = vx / vlen;\n        const vny = vy / vlen;\n        return {\n            x: vx,\n            y: pp.y - p.y,\n            len: vlen,\n            nx: vnx,\n            ny: vny,\n            ang: Math.atan2(vny, vnx),\n        };\n    };\n    let radius;\n    // const v1: Vector = {} as any;\n    // const v2: Vector = {} as any;\n    const len = points.length;\n    let p1 = points[len - 1];\n    // for each point\n    for (let i = 0; i < len; i++) {\n        let p2 = points[i % len];\n        const p3 = points[(i + 1) % len];\n        //-----------------------------------------\n        // Part 1\n        const v1 = asVec(p2, p1);\n        const v2 = asVec(p2, p3);\n        const sinA = v1.nx * v2.ny - v1.ny * v2.nx;\n        const sinA90 = v1.nx * v2.nx - v1.ny * -v2.ny;\n        let angle = Math.asin(sinA < -1 ? -1 : sinA > 1 ? 1 : sinA);\n        //-----------------------------------------\n        let radDirection = 1;\n        let drawDirection = false;\n        if (sinA90 < 0) {\n            if (angle < 0) {\n                angle = Math.PI + angle;\n            }\n            else {\n                angle = Math.PI - angle;\n                radDirection = -1;\n                drawDirection = true;\n            }\n        }\n        else {\n            if (angle > 0) {\n                radDirection = -1;\n                drawDirection = true;\n            }\n        }\n        radius = p2.radius !== undefined ? p2.radius : radiusAll;\n        //-----------------------------------------\n        // Part 2\n        const halfAngle = angle / 2;\n        //-----------------------------------------\n        //-----------------------------------------\n        // Part 3\n        let lenOut = Math.abs((Math.cos(halfAngle) * radius) / Math.sin(halfAngle));\n        //-----------------------------------------\n        //-----------------------------------------\n        // Special part A\n        let cRadius;\n        if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n            lenOut = Math.min(v1.len / 2, v2.len / 2);\n            cRadius = Math.abs((lenOut * Math.sin(halfAngle)) / Math.cos(halfAngle));\n        }\n        else {\n            cRadius = radius;\n        }\n        //-----------------------------------------\n        // Part 4\n        let x = p2.x + v2.nx * lenOut;\n        let y = p2.y + v2.ny * lenOut;\n        //-----------------------------------------\n        // Part 5\n        x += -v2.ny * cRadius * radDirection;\n        y += v2.nx * cRadius * radDirection;\n        //-----------------------------------------\n        // Part 6\n        ctx.arc(x, y, cRadius, v1.ang + (Math.PI / 2) * radDirection, v2.ang - (Math.PI / 2) * radDirection, drawDirection);\n        //-----------------------------------------\n        p1 = p2;\n        p2 = p3;\n    }\n    ctx.closePath();\n}\nfunction computeBounds(col, row, width, height, groupHeaderHeight, totalHeaderHeight, cellXOffset, cellYOffset, translateX, translateY, rows, freezeColumns, freezeTrailingRows, mappedColumns, rowHeight) {\n    const result = {\n        x: 0,\n        y: totalHeaderHeight + translateY,\n        width: 0,\n        height: 0,\n    };\n    if (col >= mappedColumns.length || row >= rows || row < -2 || col < 0) {\n        return result;\n    }\n    const headerHeight = totalHeaderHeight - groupHeaderHeight;\n    if (col >= freezeColumns) {\n        const dir = cellXOffset > col ? -1 : 1;\n        const freezeWidth = getStickyWidth(mappedColumns);\n        result.x += freezeWidth + translateX;\n        for (let i = cellXOffset; i !== col; i += dir) {\n            result.x += mappedColumns[dir === 1 ? i : i - 1].width * dir;\n        }\n    }\n    else {\n        for (let i = 0; i < col; i++) {\n            result.x += mappedColumns[i].width;\n        }\n    }\n    result.width = mappedColumns[col].width + 1;\n    if (row === -1) {\n        result.y = groupHeaderHeight;\n        result.height = headerHeight;\n    }\n    else if (row === -2) {\n        result.y = 0;\n        result.height = groupHeaderHeight;\n        let start = col;\n        const group = mappedColumns[col].group;\n        const sticky = mappedColumns[col].sticky;\n        while (start > 0 &&\n            isGroupEqual(mappedColumns[start - 1].group, group) &&\n            mappedColumns[start - 1].sticky === sticky) {\n            const c = mappedColumns[start - 1];\n            result.x -= c.width;\n            result.width += c.width;\n            start--;\n        }\n        let end = col;\n        while (end + 1 < mappedColumns.length &&\n            isGroupEqual(mappedColumns[end + 1].group, group) &&\n            mappedColumns[end + 1].sticky === sticky) {\n            const c = mappedColumns[end + 1];\n            result.width += c.width;\n            end++;\n        }\n        if (!sticky) {\n            const freezeWidth = getStickyWidth(mappedColumns);\n            const clip = result.x - freezeWidth;\n            if (clip < 0) {\n                result.x -= clip;\n                result.width += clip;\n            }\n            if (result.x + result.width > width) {\n                result.width = width - result.x;\n            }\n        }\n    }\n    else if (row >= rows - freezeTrailingRows) {\n        let dy = rows - row;\n        result.y = height;\n        while (dy > 0) {\n            const r = row + dy - 1;\n            result.height = typeof rowHeight === \"number\" ? rowHeight : rowHeight(r);\n            result.y -= result.height;\n            dy--;\n        }\n        result.height += 1;\n    }\n    else {\n        const dir = cellYOffset > row ? -1 : 1;\n        if (typeof rowHeight === \"number\") {\n            const delta = row - cellYOffset;\n            result.y += delta * rowHeight;\n        }\n        else {\n            for (let r = cellYOffset; r !== row; r += dir) {\n                result.y += rowHeight(r) * dir;\n            }\n        }\n        result.height = (typeof rowHeight === \"number\" ? rowHeight : rowHeight(row)) + 1;\n    }\n    return result;\n}\n//# sourceMappingURL=data-grid-lib.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.blit.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.blit.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blitLastFrame: () => (/* binding */ blitLastFrame),\n/* harmony export */   blitResizedCol: () => (/* binding */ blitResizedCol),\n/* harmony export */   computeCanBlit: () => (/* binding */ computeCanBlit)\n/* harmony export */ });\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n/* eslint-disable unicorn/no-for-loop */\n\n\n\n\nfunction blitLastFrame(ctx, blitSource, blitSourceScroll, targetScroll, last, cellXOffset, cellYOffset, translateX, translateY, freezeTrailingRows, width, height, rows, totalHeaderHeight, dpr, mappedColumns, effectiveCols, getRowHeight, doubleBuffer) {\n    const drawRegions = [];\n    ctx.imageSmoothingEnabled = false;\n    const minY = Math.min(last.cellYOffset, cellYOffset);\n    const maxY = Math.max(last.cellYOffset, cellYOffset);\n    let deltaY = 0;\n    if (typeof getRowHeight === \"number\") {\n        deltaY += (maxY - minY) * getRowHeight;\n    }\n    else {\n        for (let i = minY; i < maxY; i++) {\n            deltaY += getRowHeight(i);\n        }\n    }\n    if (cellYOffset > last.cellYOffset) {\n        deltaY = -deltaY;\n    }\n    deltaY += translateY - last.translateY;\n    const minX = Math.min(last.cellXOffset, cellXOffset);\n    const maxX = Math.max(last.cellXOffset, cellXOffset);\n    let deltaX = 0;\n    for (let i = minX; i < maxX; i++) {\n        deltaX += mappedColumns[i].width;\n    }\n    if (cellXOffset > last.cellXOffset) {\n        deltaX = -deltaX;\n    }\n    deltaX += translateX - last.translateX;\n    const stickyWidth = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.getStickyWidth)(effectiveCols);\n    if (deltaX !== 0 && deltaY !== 0) {\n        return {\n            regions: [],\n        };\n    }\n    const freezeTrailingRowsHeight = freezeTrailingRows > 0 ? (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.getFreezeTrailingHeight)(rows, freezeTrailingRows, getRowHeight) : 0;\n    const blitWidth = width - stickyWidth - Math.abs(deltaX);\n    const blitHeight = height - totalHeaderHeight - freezeTrailingRowsHeight - Math.abs(deltaY) - 1;\n    if (blitWidth > 150 && blitHeight > 150) {\n        const args = {\n            sx: 0,\n            sy: 0,\n            sw: width * dpr,\n            sh: height * dpr,\n            dx: 0,\n            dy: 0,\n            dw: width * dpr,\n            dh: height * dpr,\n        };\n        // blit Y\n        if (deltaY > 0) {\n            // scrolling up\n            args.sy = (totalHeaderHeight + 1) * dpr;\n            args.sh = blitHeight * dpr;\n            args.dy = (deltaY + totalHeaderHeight + 1) * dpr;\n            args.dh = blitHeight * dpr;\n            drawRegions.push({\n                x: 0,\n                y: totalHeaderHeight,\n                width: width,\n                height: deltaY + 1,\n            });\n        }\n        else if (deltaY < 0) {\n            // scrolling down\n            args.sy = (-deltaY + totalHeaderHeight + 1) * dpr;\n            args.sh = blitHeight * dpr;\n            args.dy = (totalHeaderHeight + 1) * dpr;\n            args.dh = blitHeight * dpr;\n            drawRegions.push({\n                x: 0,\n                y: height + deltaY - freezeTrailingRowsHeight,\n                width: width,\n                height: -deltaY + freezeTrailingRowsHeight,\n            });\n        }\n        // blit X\n        if (deltaX > 0) {\n            // pixels moving right\n            args.sx = stickyWidth * dpr;\n            args.sw = blitWidth * dpr;\n            args.dx = (deltaX + stickyWidth) * dpr;\n            args.dw = blitWidth * dpr;\n            drawRegions.push({\n                x: stickyWidth - 1,\n                y: 0,\n                width: deltaX + 2,\n                height: height,\n            });\n        }\n        else if (deltaX < 0) {\n            // pixels moving left\n            args.sx = (stickyWidth - deltaX) * dpr;\n            args.sw = blitWidth * dpr;\n            args.dx = stickyWidth * dpr;\n            args.dw = blitWidth * dpr;\n            drawRegions.push({\n                x: width + deltaX,\n                y: 0,\n                width: -deltaX,\n                height: height,\n            });\n        }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (doubleBuffer) {\n            if (stickyWidth > 0 &&\n                deltaX !== 0 &&\n                deltaY === 0 &&\n                (targetScroll === undefined || blitSourceScroll?.[1] !== false)) {\n                // When double buffering the freeze columns can be offset by a couple pixels vertically between the two\n                // buffers. We don't want to redraw them so we need to make sure to copy them between the buffers.\n                const w = stickyWidth * dpr;\n                const h = height * dpr;\n                ctx.drawImage(blitSource, 0, 0, w, h, 0, 0, w, h);\n            }\n            if (freezeTrailingRowsHeight > 0 &&\n                deltaX === 0 &&\n                deltaY !== 0 &&\n                (targetScroll === undefined || blitSourceScroll?.[0] !== false)) {\n                const y = (height - freezeTrailingRowsHeight) * dpr;\n                const w = width * dpr;\n                const h = freezeTrailingRowsHeight * dpr;\n                ctx.drawImage(blitSource, 0, y, w, h, 0, y, w, h);\n            }\n        }\n        ctx.drawImage(blitSource, args.sx, args.sy, args.sw, args.sh, args.dx, args.dy, args.dw, args.dh);\n        ctx.scale(dpr, dpr);\n    }\n    ctx.imageSmoothingEnabled = true;\n    return {\n        regions: drawRegions,\n    };\n}\nfunction blitResizedCol(last, cellXOffset, cellYOffset, translateX, translateY, width, height, totalHeaderHeight, effectiveCols, resizedIndex) {\n    const drawRegions = [];\n    // ctx.imageSmoothingEnabled = false;\n    if (cellXOffset !== last.cellXOffset ||\n        cellYOffset !== last.cellYOffset ||\n        translateX !== last.translateX ||\n        translateY !== last.translateY) {\n        return drawRegions;\n    }\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__.walkColumns)(effectiveCols, cellYOffset, translateX, translateY, totalHeaderHeight, (c, drawX, _drawY, clipX) => {\n        if (c.sourceIndex === resizedIndex) {\n            const x = Math.max(drawX, clipX) + 1;\n            drawRegions.push({\n                x,\n                y: 0,\n                width: width - x,\n                height,\n            });\n            return true;\n        }\n    });\n    return drawRegions;\n}\nfunction computeCanBlit(current, last) {\n    if (last === undefined)\n        return false;\n    if (current.width !== last.width ||\n        current.height !== last.height ||\n        current.theme !== last.theme ||\n        current.headerHeight !== last.headerHeight ||\n        current.rowHeight !== last.rowHeight ||\n        current.rows !== last.rows ||\n        current.freezeColumns !== last.freezeColumns ||\n        current.getRowThemeOverride !== last.getRowThemeOverride ||\n        current.isFocused !== last.isFocused ||\n        current.isResizing !== last.isResizing ||\n        current.verticalBorder !== last.verticalBorder ||\n        current.getCellContent !== last.getCellContent ||\n        current.highlightRegions !== last.highlightRegions ||\n        current.selection !== last.selection ||\n        current.dragAndDropState !== last.dragAndDropState ||\n        current.prelightCells !== last.prelightCells ||\n        current.touchMode !== last.touchMode ||\n        current.maxScaleFactor !== last.maxScaleFactor) {\n        return false;\n    }\n    if (current.mappedColumns !== last.mappedColumns) {\n        if (current.mappedColumns.length > 100 || current.mappedColumns.length !== last.mappedColumns.length) {\n            // The array is big, let's just redraw the damned thing rather than check these all. Or the number of cols\n            // changed in which case I dont want to figure out what happened.\n            return false;\n        }\n        // We want to know if only one column has resized. If this is the case we can do a special left/right sliding\n        // blit. Or just not redraw shit on the left.\n        let resized;\n        for (let i = 0; i < current.mappedColumns.length; i++) {\n            const curCol = current.mappedColumns[i];\n            const lastCol = last.mappedColumns[i];\n            if ((0,_common_support_js__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(curCol, lastCol))\n                continue;\n            // two columns changed, abort\n            if (resized !== undefined)\n                return false;\n            if (curCol.width === lastCol.width)\n                return false;\n            const { width, ...curRest } = curCol;\n            const { width: lastWidth, ...lastRest } = lastCol;\n            // more than width changed, abort\n            if (!(0,_common_support_js__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(curRest, lastRest))\n                return false;\n            resized = i;\n        }\n        if (resized === undefined) {\n            // we never found a changed column, cool, we can blit\n            return true;\n        }\n        return resized;\n    }\n    return true;\n}\n//# sourceMappingURL=data-grid-render.blit.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.blit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.cells.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.cells.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawCell: () => (/* binding */ drawCell),\n/* harmony export */   drawCells: () => (/* binding */ drawCells)\n/* harmony export */ });\n/* harmony import */ var _data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n/* harmony import */ var _color_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n/* eslint-disable unicorn/no-for-loop */\n\n\n\n\n\n\n\nconst loadingCell = {\n    kind: _data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Loading,\n    allowOverlay: false,\n};\n// preppable items:\n// - font\n// - fillStyle\n// Column draw loop prep cycle\n// - Prep item\n// - Prep sets props\n// - Prep returns list of cared about props\n// - Draw item\n// - Loop may set some items, if present in args list, set undefined\n// - Prep next item, giving previous result\n// - If next item type is different, de-prep\n// - Result per column\nfunction drawCells(ctx, effectiveColumns, allColumns, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, getCellContent, getGroupDetails, getRowThemeOverride, disabledRows, isFocused, drawFocus, freezeTrailingRows, hasAppendRow, drawRegions, damage, selection, prelightCells, highlightRegions, imageLoader, spriteManager, hoverValues, hoverInfo, drawCellCallback, hyperWrapping, outerTheme, enqueue, renderStateProvider, getCellRenderer, overrideCursor, minimumCellWidth) {\n    let toDraw = damage?.size ?? Number.MAX_SAFE_INTEGER;\n    const frameTime = performance.now();\n    let font = outerTheme.baseFontFull;\n    ctx.font = font;\n    const deprepArg = { ctx };\n    const cellIndex = [0, 0];\n    const freezeTrailingRowsHeight = freezeTrailingRows > 0 ? (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.getFreezeTrailingHeight)(rows, freezeTrailingRows, getRowHeight) : 0;\n    let result;\n    let handledSpans = undefined;\n    const skipPoint = (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_2__.getSkipPoint)(drawRegions);\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_2__.walkColumns)(effectiveColumns, cellYOffset, translateX, translateY, totalHeaderHeight, (c, drawX, colDrawStartY, clipX, startRow) => {\n        const diff = Math.max(0, clipX - drawX);\n        const colDrawX = drawX + diff;\n        const colDrawY = totalHeaderHeight + 1;\n        const colWidth = c.width - diff;\n        const colHeight = height - totalHeaderHeight - 1;\n        if (drawRegions.length > 0) {\n            let found = false;\n            for (let i = 0; i < drawRegions.length; i++) {\n                const dr = drawRegions[i];\n                if ((0,_common_math_js__WEBPACK_IMPORTED_MODULE_3__.intersectRect)(colDrawX, colDrawY, colWidth, colHeight, dr.x, dr.y, dr.width, dr.height)) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found)\n                return;\n        }\n        const reclip = () => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(colDrawX, colDrawY, colWidth, colHeight);\n            ctx.clip();\n        };\n        const colSelected = selection.columns.hasIndex(c.sourceIndex);\n        const groupTheme = getGroupDetails(c.group ?? \"\").overrideTheme;\n        const colTheme = c.themeOverride === undefined && groupTheme === undefined\n            ? outerTheme\n            : (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_4__.mergeAndRealizeTheme)(outerTheme, groupTheme, c.themeOverride);\n        const colFont = colTheme.baseFontFull;\n        if (colFont !== font) {\n            font = colFont;\n            ctx.font = colFont;\n        }\n        reclip();\n        let prepResult = undefined;\n        (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_2__.walkRowsInCol)(startRow, colDrawStartY, height, rows, getRowHeight, freezeTrailingRows, hasAppendRow, skipPoint, (drawY, row, rh, isSticky, isTrailingRow) => {\n            if (row < 0)\n                return;\n            cellIndex[0] = c.sourceIndex;\n            cellIndex[1] = row;\n            // if (damage !== undefined && !damage.some(d => d[0] === c.sourceIndex && d[1] === row)) {\n            //     return;\n            // }\n            // if (\n            //     drawRegions.length > 0 &&\n            //     !drawRegions.some(dr => intersectRect(drawX, drawY, c.width, rh, dr.x, dr.y, dr.width, dr.height))\n            // ) {\n            //     return;\n            // }\n            // These are dumb versions of the above. I cannot for the life of believe that this matters but this is\n            // the tightest part of the draw loop and the allocations above actually has a very measurable impact\n            // on performance. For the love of all that is unholy please keep checking this again in the future.\n            // As soon as this doesn't have any impact of note go back to the saner looking code. The smoke test\n            // here is to scroll to the bottom of a test case first, then scroll back up while profiling and see\n            // how many major GC collections you get. These allocate a lot of objects.\n            if (damage !== undefined && !damage.has(cellIndex)) {\n                return;\n            }\n            if (drawRegions.length > 0) {\n                let found = false;\n                for (let i = 0; i < drawRegions.length; i++) {\n                    const dr = drawRegions[i];\n                    if ((0,_common_math_js__WEBPACK_IMPORTED_MODULE_3__.intersectRect)(drawX, drawY, c.width, rh, dr.x, dr.y, dr.width, dr.height)) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found)\n                    return;\n            }\n            const rowSelected = selection.rows.hasIndex(row);\n            const rowDisabled = disabledRows.hasIndex(row);\n            const cell = row < rows ? getCellContent(cellIndex) : loadingCell;\n            let cellX = drawX;\n            let cellWidth = c.width;\n            let drawingSpan = false;\n            let skipContents = false;\n            if (cell.span !== undefined) {\n                const [startCol, endCol] = cell.span;\n                const spanKey = `${row},${startCol},${endCol},${c.sticky}`; //alloc\n                if (handledSpans === undefined)\n                    handledSpans = new Set();\n                if (!handledSpans.has(spanKey)) {\n                    const areas = (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_2__.getSpanBounds)(cell.span, drawX, drawY, c.width, rh, c, allColumns);\n                    const area = c.sticky ? areas[0] : areas[1];\n                    if (!c.sticky && areas[0] !== undefined) {\n                        skipContents = true;\n                    }\n                    if (area !== undefined) {\n                        cellX = area.x;\n                        cellWidth = area.width;\n                        handledSpans.add(spanKey);\n                        ctx.restore();\n                        prepResult = undefined;\n                        ctx.save();\n                        ctx.beginPath();\n                        const d = Math.max(0, clipX - area.x);\n                        ctx.rect(area.x + d, drawY, area.width - d, rh);\n                        if (result === undefined) {\n                            result = [];\n                        }\n                        result.push({\n                            x: area.x + d,\n                            y: drawY,\n                            width: area.width - d,\n                            height: rh,\n                        });\n                        ctx.clip();\n                        drawingSpan = true;\n                    }\n                }\n                else {\n                    toDraw--;\n                    return;\n                }\n            }\n            const rowTheme = getRowThemeOverride?.(row);\n            const trailingTheme = isTrailingRow && c.trailingRowOptions?.themeOverride !== undefined\n                ? c.trailingRowOptions?.themeOverride\n                : undefined;\n            const theme = cell.themeOverride === undefined && rowTheme === undefined && trailingTheme === undefined\n                ? colTheme\n                : (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_4__.mergeAndRealizeTheme)(colTheme, rowTheme, trailingTheme, cell.themeOverride); //alloc\n            ctx.beginPath();\n            const isSelected = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.cellIsSelected)(cellIndex, cell, selection);\n            let accentCount = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.cellIsInRange)(cellIndex, cell, selection, drawFocus);\n            const spanIsHighlighted = cell.span !== undefined &&\n                selection.columns.some(index => cell.span !== undefined && index >= cell.span[0] && index <= cell.span[1] //alloc\n                );\n            if (isSelected && !isFocused && drawFocus) {\n                accentCount = 0;\n            }\n            else if (isSelected && drawFocus) {\n                accentCount = Math.max(accentCount, 1);\n            }\n            if (spanIsHighlighted) {\n                accentCount++;\n            }\n            if (!isSelected) {\n                if (rowSelected)\n                    accentCount++;\n                if (colSelected && !isTrailingRow)\n                    accentCount++;\n            }\n            const bgCell = cell.kind === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.GridCellKind.Protected ? theme.bgCellMedium : theme.bgCell;\n            let fill;\n            if (isSticky || bgCell !== outerTheme.bgCell) {\n                fill = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(bgCell, fill);\n            }\n            if (accentCount > 0 || rowDisabled) {\n                if (rowDisabled) {\n                    fill = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.bgHeader, fill);\n                }\n                for (let i = 0; i < accentCount; i++) {\n                    fill = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.accentLight, fill);\n                }\n            }\n            else if (prelightCells !== undefined) {\n                for (const pre of prelightCells) {\n                    if (pre[0] === c.sourceIndex && pre[1] === row) {\n                        fill = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.bgSearchResult, fill);\n                        break;\n                    }\n                }\n            }\n            if (highlightRegions !== undefined) {\n                for (let i = 0; i < highlightRegions.length; i++) {\n                    const region = highlightRegions[i];\n                    const r = region.range;\n                    if (region.style !== \"solid-outline\" &&\n                        r.x <= c.sourceIndex &&\n                        c.sourceIndex < r.x + r.width &&\n                        r.y <= row &&\n                        row < r.y + r.height) {\n                        fill = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(region.color, fill);\n                    }\n                }\n            }\n            let didDamageClip = false;\n            if (damage !== undefined) {\n                // we want to clip each cell individually rather than form a super clip region. The reason for\n                // this is passing too many clip regions to the GPU at once can cause a performance hit. This\n                // allows us to damage a large number of cells at once without issue.\n                const top = drawY + 1;\n                const bottom = isSticky\n                    ? top + rh - 1\n                    : Math.min(top + rh - 1, height - freezeTrailingRowsHeight);\n                const h = bottom - top;\n                // however, not clipping at all is even better. We want to clip if we are the left most col\n                // or overlapping the bottom clip area.\n                if (h !== rh - 1 || cellX + 1 <= clipX) {\n                    didDamageClip = true;\n                    ctx.save();\n                    ctx.beginPath();\n                    ctx.rect(cellX + 1, top, cellWidth - 1, h);\n                    ctx.clip();\n                }\n                // we also need to make sure to wipe the contents. Since the fill can do that lets repurpose\n                // that call to avoid an extra draw call.\n                fill = fill === undefined ? theme.bgCell : (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(fill, theme.bgCell);\n            }\n            const isLastColumn = c.sourceIndex === allColumns.length - 1;\n            const isLastRow = row === rows - 1;\n            if (fill !== undefined) {\n                ctx.fillStyle = fill;\n                if (prepResult !== undefined) {\n                    prepResult.fillStyle = fill;\n                }\n                if (damage !== undefined) {\n                    // this accounts for the fill handle outline being drawn inset on these cells. We do this\n                    // because technically the bottom right corner of the outline are on other cells.\n                    ctx.fillRect(cellX + 1, drawY + 1, cellWidth - (isLastColumn ? 2 : 1), rh - (isLastRow ? 2 : 1));\n                }\n                else {\n                    ctx.fillRect(cellX, drawY, cellWidth, rh);\n                }\n            }\n            if (cell.style === \"faded\") {\n                ctx.globalAlpha = 0.6;\n            }\n            let hoverValue;\n            for (let i = 0; i < hoverValues.length; i++) {\n                const hv = hoverValues[i];\n                if (hv.item[0] === c.sourceIndex && hv.item[1] === row) {\n                    hoverValue = hv;\n                    break;\n                }\n            }\n            if (cellWidth > minimumCellWidth && !skipContents) {\n                const cellFont = theme.baseFontFull;\n                if (cellFont !== font) {\n                    ctx.font = cellFont;\n                    font = cellFont;\n                }\n                prepResult = drawCell(ctx, cell, c.sourceIndex, row, isLastColumn, isLastRow, cellX, drawY, cellWidth, rh, accentCount > 0, theme, fill ?? theme.bgCell, imageLoader, spriteManager, hoverValue?.hoverAmount ?? 0, hoverInfo, hyperWrapping, frameTime, drawCellCallback, prepResult, enqueue, renderStateProvider, getCellRenderer, overrideCursor);\n            }\n            if (didDamageClip) {\n                ctx.restore();\n            }\n            if (cell.style === \"faded\") {\n                ctx.globalAlpha = 1;\n            }\n            toDraw--;\n            if (drawingSpan) {\n                ctx.restore();\n                prepResult?.deprep?.(deprepArg);\n                prepResult = undefined;\n                reclip();\n                font = colFont;\n                ctx.font = colFont;\n            }\n            return toDraw <= 0;\n        });\n        ctx.restore();\n        return toDraw <= 0;\n    });\n    return result;\n}\nconst allocatedItem = [0, 0];\nconst reusableRect = { x: 0, y: 0, width: 0, height: 0 };\nconst drawState = [undefined, () => undefined];\nlet animationFrameRequested = false;\nfunction animRequest() {\n    animationFrameRequested = true;\n}\nfunction drawCell(ctx, cell, col, row, isLastCol, isLastRow, x, y, w, h, highlighted, theme, finalCellFillColor, imageLoader, spriteManager, hoverAmount, hoverInfo, hyperWrapping, frameTime, drawCellCallback, lastPrep, enqueue, renderStateProvider, getCellRenderer, overrideCursor) {\n    let hoverX;\n    let hoverY;\n    if (hoverInfo !== undefined && hoverInfo[0][0] === col && hoverInfo[0][1] === row) {\n        hoverX = hoverInfo[1][0];\n        hoverY = hoverInfo[1][1];\n    }\n    let result = undefined;\n    allocatedItem[0] = col;\n    allocatedItem[1] = row;\n    reusableRect.x = x;\n    reusableRect.y = y;\n    reusableRect.width = w;\n    reusableRect.height = h;\n    drawState[0] = renderStateProvider.getValue(allocatedItem);\n    drawState[1] = (val) => renderStateProvider.setValue(allocatedItem, val); //alloc\n    animationFrameRequested = false;\n    const args = {\n        //alloc\n        ctx,\n        theme,\n        col,\n        row,\n        cell,\n        rect: reusableRect,\n        highlighted,\n        cellFillColor: finalCellFillColor,\n        hoverAmount,\n        frameTime,\n        hoverX,\n        drawState,\n        hoverY,\n        imageLoader,\n        spriteManager,\n        hyperWrapping,\n        overrideCursor: hoverX !== undefined ? overrideCursor : undefined,\n        requestAnimationFrame: animRequest,\n    };\n    const needsAnim = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.drawLastUpdateUnderlay)(args, cell.lastUpdated, frameTime, lastPrep, isLastCol, isLastRow);\n    const r = getCellRenderer(cell);\n    if (r !== undefined) {\n        if (lastPrep?.renderer !== r) {\n            lastPrep?.deprep?.(args);\n            lastPrep = undefined;\n        }\n        const partialPrepResult = r.drawPrep?.(args, lastPrep);\n        if (drawCellCallback !== undefined && !(0,_data_grid_types_js__WEBPACK_IMPORTED_MODULE_0__.isInnerOnlyCell)(args.cell)) {\n            drawCellCallback(args, () => r.draw(args, cell));\n        }\n        else {\n            r.draw(args, cell);\n        }\n        result =\n            partialPrepResult === undefined\n                ? undefined\n                : {\n                    deprep: partialPrepResult?.deprep,\n                    fillStyle: partialPrepResult?.fillStyle,\n                    font: partialPrepResult?.font,\n                    renderer: r,\n                };\n    }\n    if (needsAnim || animationFrameRequested)\n        enqueue?.(allocatedItem);\n    return result;\n}\n//# sourceMappingURL=data-grid-render.cells.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.cells.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.header.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.header.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawGridHeaders: () => (/* binding */ drawGridHeaders),\n/* harmony export */   drawGroups: () => (/* binding */ drawGroups),\n/* harmony export */   drawHeader: () => (/* binding */ drawHeader),\n/* harmony export */   getActionBoundsForGroup: () => (/* binding */ getActionBoundsForGroup),\n/* harmony export */   getHeaderMenuBounds: () => (/* binding */ getHeaderMenuBounds)\n/* harmony export */ });\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _color_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* harmony import */ var _draw_checkbox_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./draw-checkbox.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js\");\n\n\n\n\n\n\n\n\nfunction drawGridHeaders(ctx, effectiveCols, enableGroups, hovered, width, translateX, headerHeight, groupHeaderHeight, dragAndDropState, isResizing, selection, outerTheme, spriteManager, hoverValues, verticalBorder, getGroupDetails, damage, drawHeaderCallback, touchMode) {\n    const totalHeaderHeight = headerHeight + groupHeaderHeight;\n    if (totalHeaderHeight <= 0)\n        return;\n    ctx.fillStyle = outerTheme.bgHeader;\n    ctx.fillRect(0, 0, width, totalHeaderHeight);\n    const [hCol, hRow] = hovered?.[0] ?? [];\n    const font = outerTheme.headerFontFull;\n    // Assinging the context font too much can be expensive, it can be worth it to minimze this\n    ctx.font = font;\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkColumns)(effectiveCols, 0, translateX, 0, totalHeaderHeight, (c, x, _y, clipX) => {\n        if (damage !== undefined && !damage.has([c.sourceIndex, -1]))\n            return;\n        const diff = Math.max(0, clipX - x);\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(x + diff, groupHeaderHeight, c.width - diff, headerHeight);\n        ctx.clip();\n        const groupTheme = getGroupDetails(c.group ?? \"\").overrideTheme;\n        const theme = c.themeOverride === undefined && groupTheme === undefined\n            ? outerTheme\n            : (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_1__.mergeAndRealizeTheme)(outerTheme, groupTheme, c.themeOverride);\n        if (theme.bgHeader !== outerTheme.bgHeader) {\n            ctx.fillStyle = theme.bgHeader;\n            ctx.fill();\n        }\n        if (theme !== outerTheme) {\n            ctx.font = theme.baseFontFull;\n        }\n        const selected = selection.columns.hasIndex(c.sourceIndex);\n        const noHover = dragAndDropState !== undefined || isResizing;\n        const hoveredBoolean = !noHover && hRow === -1 && hCol === c.sourceIndex;\n        const hover = noHover\n            ? 0\n            : hoverValues.find(s => s.item[0] === c.sourceIndex && s.item[1] === -1)?.hoverAmount ?? 0;\n        const hasSelectedCell = selection?.current !== undefined && selection.current.cell[0] === c.sourceIndex;\n        const bgFillStyle = selected ? theme.accentColor : hasSelectedCell ? theme.bgHeaderHasFocus : theme.bgHeader;\n        const y = enableGroups ? groupHeaderHeight : 0;\n        const xOffset = c.sourceIndex === 0 ? 0 : 1;\n        if (selected) {\n            ctx.fillStyle = bgFillStyle;\n            ctx.fillRect(x + xOffset, y, c.width - xOffset, headerHeight);\n        }\n        else if (hasSelectedCell || hover > 0) {\n            ctx.beginPath();\n            ctx.rect(x + xOffset, y, c.width - xOffset, headerHeight);\n            if (hasSelectedCell) {\n                ctx.fillStyle = theme.bgHeaderHasFocus;\n                ctx.fill();\n            }\n            if (hover > 0) {\n                ctx.globalAlpha = hover;\n                ctx.fillStyle = theme.bgHeaderHovered;\n                ctx.fill();\n                ctx.globalAlpha = 1;\n            }\n        }\n        drawHeader(ctx, x, y, c.width, headerHeight, c, selected, theme, hoveredBoolean, hasSelectedCell, hover, spriteManager, drawHeaderCallback, touchMode);\n        ctx.restore();\n    });\n    if (enableGroups) {\n        drawGroups(ctx, effectiveCols, width, translateX, groupHeaderHeight, hovered, outerTheme, spriteManager, hoverValues, verticalBorder, getGroupDetails, damage);\n    }\n}\nfunction drawGroups(ctx, effectiveCols, width, translateX, groupHeaderHeight, hovered, theme, spriteManager, _hoverValues, verticalBorder, getGroupDetails, damage) {\n    const xPad = 8;\n    const [hCol, hRow] = hovered?.[0] ?? [];\n    let finalX = 0;\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkGroups)(effectiveCols, width, translateX, groupHeaderHeight, (span, groupName, x, y, w, h) => {\n        if (damage !== undefined &&\n            !damage.hasItemInRectangle({\n                x: span[0],\n                y: -2,\n                width: span[1] - span[0] + 1,\n                height: 1,\n            }))\n            return;\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(x, y, w, h);\n        ctx.clip();\n        const group = getGroupDetails(groupName);\n        const groupTheme = group?.overrideTheme === undefined ? theme : (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_1__.mergeAndRealizeTheme)(theme, group.overrideTheme);\n        const isHovered = hRow === -2 && hCol !== undefined && hCol >= span[0] && hCol <= span[1];\n        const fillColor = isHovered ? groupTheme.bgHeaderHovered : groupTheme.bgHeader;\n        if (fillColor !== theme.bgHeader) {\n            ctx.fillStyle = fillColor;\n            ctx.fill();\n        }\n        ctx.fillStyle = groupTheme.textGroupHeader ?? groupTheme.textHeader;\n        if (group !== undefined) {\n            let drawX = x;\n            if (group.icon !== undefined) {\n                spriteManager.drawSprite(group.icon, \"normal\", ctx, drawX + xPad, (groupHeaderHeight - 20) / 2, 20, groupTheme);\n                drawX += 26;\n            }\n            ctx.fillText(group.name, drawX + xPad, groupHeaderHeight / 2 + (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getMiddleCenterBias)(ctx, theme.headerFontFull));\n            if (group.actions !== undefined && isHovered) {\n                const actionBoxes = getActionBoundsForGroup({ x, y, width: w, height: h }, group.actions);\n                ctx.beginPath();\n                const fadeStartX = actionBoxes[0].x - 10;\n                const fadeWidth = x + w - fadeStartX;\n                ctx.rect(fadeStartX, 0, fadeWidth, groupHeaderHeight);\n                const grad = ctx.createLinearGradient(fadeStartX, 0, fadeStartX + fadeWidth, 0);\n                const trans = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_3__.withAlpha)(fillColor, 0);\n                grad.addColorStop(0, trans);\n                grad.addColorStop(10 / fadeWidth, fillColor);\n                grad.addColorStop(1, fillColor);\n                ctx.fillStyle = grad;\n                ctx.fill();\n                ctx.globalAlpha = 0.6;\n                // eslint-disable-next-line prefer-const\n                const [mouseX, mouseY] = hovered?.[1] ?? [-1, -1];\n                for (let i = 0; i < group.actions.length; i++) {\n                    const action = group.actions[i];\n                    const box = actionBoxes[i];\n                    const actionHovered = (0,_common_math_js__WEBPACK_IMPORTED_MODULE_4__.pointInRect)(box, mouseX + x, mouseY);\n                    if (actionHovered) {\n                        ctx.globalAlpha = 1;\n                    }\n                    spriteManager.drawSprite(action.icon, \"normal\", ctx, box.x + box.width / 2 - 10, box.y + box.height / 2 - 10, 20, groupTheme);\n                    if (actionHovered) {\n                        ctx.globalAlpha = 0.6;\n                    }\n                }\n                ctx.globalAlpha = 1;\n            }\n        }\n        if (x !== 0 && verticalBorder(span[0])) {\n            ctx.beginPath();\n            ctx.moveTo(x + 0.5, 0);\n            ctx.lineTo(x + 0.5, groupHeaderHeight);\n            ctx.strokeStyle = theme.borderColor;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n        ctx.restore();\n        finalX = x + w;\n    });\n    ctx.beginPath();\n    ctx.moveTo(finalX + 0.5, 0);\n    ctx.lineTo(finalX + 0.5, groupHeaderHeight);\n    ctx.moveTo(0, groupHeaderHeight + 0.5);\n    ctx.lineTo(width, groupHeaderHeight + 0.5);\n    ctx.strokeStyle = theme.borderColor;\n    ctx.lineWidth = 1;\n    ctx.stroke();\n}\nconst menuButtonSize = 30;\nfunction getHeaderMenuBounds(x, y, width, height, isRtl) {\n    if (isRtl)\n        return { x, y, width: menuButtonSize, height: Math.min(menuButtonSize, height) };\n    return {\n        x: x + width - menuButtonSize,\n        y: Math.max(y, y + height / 2 - menuButtonSize / 2),\n        width: menuButtonSize,\n        height: Math.min(menuButtonSize, height),\n    };\n}\nfunction getActionBoundsForGroup(box, actions) {\n    const result = [];\n    let x = box.x + box.width - 26 * actions.length;\n    const y = box.y + box.height / 2 - 13;\n    const height = 26;\n    const width = 26;\n    for (let i = 0; i < actions.length; i++) {\n        result.push({\n            x,\n            y,\n            width,\n            height,\n        });\n        x += 26;\n    }\n    return result;\n}\nfunction drawHeaderInner(ctx, x, y, width, height, c, selected, theme, isHovered, hoverAmount, spriteManager, touchMode, isRtl, menuBounds) {\n    if (c.rowMarker !== undefined) {\n        const checked = c.rowMarkerChecked;\n        if (checked !== true) {\n            ctx.globalAlpha = hoverAmount;\n        }\n        (0,_draw_checkbox_js__WEBPACK_IMPORTED_MODULE_5__.drawCheckbox)(ctx, theme, checked, x, y, width, height, false, undefined, undefined, 18, \"center\", c.rowMarker);\n        if (checked !== true) {\n            ctx.globalAlpha = 1;\n        }\n        return;\n    }\n    const xPad = theme.cellHorizontalPadding;\n    const fillStyle = selected ? theme.textHeaderSelected : theme.textHeader;\n    const shouldDrawMenu = c.hasMenu === true && (isHovered || (touchMode && selected));\n    const dirScalar = isRtl ? -1 : 1;\n    let drawX = isRtl ? x + width - xPad : x + xPad;\n    if (c.icon !== undefined) {\n        let variant = selected ? \"selected\" : \"normal\";\n        if (c.style === \"highlight\") {\n            variant = selected ? \"selected\" : \"special\";\n        }\n        const headerSize = theme.headerIconSize;\n        spriteManager.drawSprite(c.icon, variant, ctx, isRtl ? drawX - headerSize : drawX, y + (height - headerSize) / 2, headerSize, theme);\n        if (c.overlayIcon !== undefined) {\n            spriteManager.drawSprite(c.overlayIcon, selected ? \"selected\" : \"special\", ctx, isRtl ? drawX - headerSize + 9 : drawX + 9, y + ((height - 18) / 2 + 6), 18, theme);\n        }\n        drawX += Math.ceil(headerSize * 1.3) * dirScalar;\n    }\n    if (shouldDrawMenu && c.hasMenu === true && width > 35) {\n        const fadeWidth = 35;\n        const fadeStart = isRtl ? fadeWidth : width - fadeWidth;\n        const fadeEnd = isRtl ? fadeWidth * 0.7 : width - fadeWidth * 0.7;\n        const fadeStartPercent = fadeStart / width;\n        const fadeEndPercent = fadeEnd / width;\n        const grad = ctx.createLinearGradient(x, 0, x + width, 0);\n        const trans = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_3__.withAlpha)(fillStyle, 0);\n        grad.addColorStop(isRtl ? 1 : 0, fillStyle);\n        grad.addColorStop(fadeStartPercent, fillStyle);\n        grad.addColorStop(fadeEndPercent, trans);\n        grad.addColorStop(isRtl ? 0 : 1, trans);\n        ctx.fillStyle = grad;\n    }\n    else {\n        ctx.fillStyle = fillStyle;\n    }\n    if (isRtl) {\n        ctx.textAlign = \"right\";\n    }\n    ctx.fillText(c.title, drawX, y + height / 2 + (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getMiddleCenterBias)(ctx, theme.headerFontFull));\n    if (isRtl) {\n        ctx.textAlign = \"left\";\n    }\n    if (shouldDrawMenu && c.hasMenu === true) {\n        if (c.menuIcon === undefined || c.menuIcon === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridColumnMenuIcon.Triangle) {\n            // Draw the default triangle menu icon:\n            ctx.beginPath();\n            const triangleX = menuBounds.x + menuBounds.width / 2 - 5.5;\n            const triangleY = menuBounds.y + menuBounds.height / 2 - 3;\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.roundedPoly)(ctx, [\n                {\n                    x: triangleX,\n                    y: triangleY,\n                },\n                {\n                    x: triangleX + 11,\n                    y: triangleY,\n                },\n                {\n                    x: triangleX + 5.5,\n                    y: triangleY + 6,\n                },\n            ], 1);\n            ctx.fillStyle = fillStyle;\n            ctx.fill();\n        }\n        else if (c.menuIcon === _data_grid_types_js__WEBPACK_IMPORTED_MODULE_6__.GridColumnMenuIcon.Dots) {\n            // Draw the three dots menu icon:\n            ctx.beginPath();\n            const dotsX = menuBounds.x + menuBounds.width / 2;\n            const dotsY = menuBounds.y + menuBounds.height / 2;\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.drawMenuDots)(ctx, dotsX, dotsY);\n            ctx.fillStyle = fillStyle;\n            ctx.fill();\n        }\n        else {\n            // Assume that the user has specified a valid sprite image as header icon:\n            const iconX = menuBounds.x + (menuBounds.width - theme.headerIconSize) / 2;\n            const iconY = menuBounds.y + (menuBounds.height - theme.headerIconSize) / 2;\n            spriteManager.drawSprite(c.menuIcon, \"normal\", ctx, iconX, iconY, theme.headerIconSize, theme);\n        }\n    }\n}\nfunction drawHeader(ctx, x, y, width, height, c, selected, theme, isHovered, hasSelectedCell, hoverAmount, spriteManager, drawHeaderCallback, touchMode) {\n    const isRtl = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.direction)(c.title) === \"rtl\";\n    const menuBounds = getHeaderMenuBounds(x, y, width, height, isRtl);\n    if (drawHeaderCallback !== undefined) {\n        drawHeaderCallback({\n            ctx,\n            theme,\n            rect: { x, y, width, height },\n            column: c,\n            columnIndex: c.sourceIndex,\n            isSelected: selected,\n            hoverAmount,\n            isHovered,\n            hasSelectedCell,\n            spriteManager,\n            menuBounds,\n        }, () => drawHeaderInner(ctx, x, y, width, height, c, selected, theme, isHovered, hoverAmount, spriteManager, touchMode, isRtl, menuBounds));\n    }\n    else {\n        drawHeaderInner(ctx, x, y, width, height, c, selected, theme, isHovered, hoverAmount, spriteManager, touchMode, isRtl, menuBounds);\n    }\n}\n//# sourceMappingURL=data-grid-render.header.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.header.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawGrid: () => (/* binding */ drawGrid)\n/* harmony export */ });\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _color_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* harmony import */ var _data_grid_render_cells_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data-grid-render.cells.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.cells.js\");\n/* harmony import */ var _data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-grid-render.header.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.header.js\");\n/* harmony import */ var _data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-grid-render.lines.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.lines.js\");\n/* harmony import */ var _data_grid_render_blit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-render.blit.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.blit.js\");\n/* harmony import */ var _data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data-grid.render.rings.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid.render.rings.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n/* eslint-disable unicorn/no-for-loop */\n\n\n\n\n\n\n\n\n\n\n\n// Future optimization opportunities\n// - Create a cache of a buffer used to render the full view of a partially displayed column so that when\n//   scrolling horizontally you can simply blit the pre-drawn column instead of continually paying the draw\n//   cost as it slides into view.\n// - The same as above but for partially displayed rows\n// - Blit headers on horizontal scroll\n// - Use webworker to load images, helpful with lots of large images\n// - Retain mode for drawing cells. Instead of drawing cells as we come across them, first build a data\n//   structure which contains all operations to perform, then sort them all by \"prep\" requirement, then do\n//   all like operations at once.\nfunction clipHeaderDamage(ctx, effectiveColumns, width, groupHeaderHeight, totalHeaderHeight, translateX, translateY, cellYOffset, damage) {\n    if (damage === undefined || damage.size === 0)\n        return;\n    ctx.beginPath();\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkGroups)(effectiveColumns, width, translateX, groupHeaderHeight, (span, _group, x, y, w, h) => {\n        const hasItemInSpan = damage.hasItemInRectangle({\n            x: span[0],\n            y: -2,\n            width: span[1] - span[0] + 1,\n            height: 1,\n        });\n        if (hasItemInSpan) {\n            ctx.rect(x, y, w, h);\n        }\n    });\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkColumns)(effectiveColumns, cellYOffset, translateX, translateY, totalHeaderHeight, (c, drawX, _colDrawY, clipX) => {\n        const diff = Math.max(0, clipX - drawX);\n        const finalX = drawX + diff + 1;\n        const finalWidth = c.width - diff - 1;\n        if (damage.has([c.sourceIndex, -1])) {\n            ctx.rect(finalX, groupHeaderHeight, finalWidth, totalHeaderHeight - groupHeaderHeight);\n        }\n    });\n    ctx.clip();\n}\nfunction getLastRow(effectiveColumns, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, freezeTrailingRows, hasAppendRow) {\n    let result = 0;\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkColumns)(effectiveColumns, cellYOffset, translateX, translateY, totalHeaderHeight, (_c, __drawX, colDrawY, _clipX, startRow) => {\n        (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkRowsInCol)(startRow, colDrawY, height, rows, getRowHeight, freezeTrailingRows, hasAppendRow, undefined, (_drawY, row, _rh, isSticky) => {\n            if (!isSticky) {\n                result = Math.max(row, result);\n            }\n        });\n        return true;\n    });\n    return result;\n}\nfunction drawGrid(arg, lastArg) {\n    const { canvasCtx, headerCanvasCtx, width, height, cellXOffset, cellYOffset, translateX, translateY, mappedColumns, enableGroups, freezeColumns, dragAndDropState, theme, drawFocus, headerHeight, groupHeaderHeight, disabledRows, rowHeight, verticalBorder, overrideCursor, isResizing, selection, fillHandle, freezeTrailingRows, rows, getCellContent, getGroupDetails, getRowThemeOverride, isFocused, drawHeaderCallback, prelightCells, drawCellCallback, highlightRegions, resizeCol, imageLoader, lastBlitData, hoverValues, hyperWrapping, hoverInfo, spriteManager, maxScaleFactor, hasAppendRow, touchMode, enqueue, renderStateProvider, getCellRenderer, renderStrategy, bufferACtx, bufferBCtx, damage, minimumCellWidth, } = arg;\n    if (width === 0 || height === 0)\n        return;\n    const doubleBuffer = renderStrategy === \"double-buffer\";\n    const dpr = Math.min(maxScaleFactor, Math.ceil(window.devicePixelRatio ?? 1));\n    // if we are double buffering we need to make sure we can blit. If we can't we need to redraw the whole thing\n    const canBlit = renderStrategy !== \"direct\" && (0,_data_grid_render_blit_js__WEBPACK_IMPORTED_MODULE_1__.computeCanBlit)(arg, lastArg);\n    const canvas = canvasCtx.canvas;\n    if (canvas.width !== width * dpr || canvas.height !== height * dpr) {\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        canvas.style.width = width + \"px\";\n        canvas.style.height = height + \"px\";\n    }\n    const overlayCanvas = headerCanvasCtx.canvas;\n    const totalHeaderHeight = enableGroups ? groupHeaderHeight + headerHeight : headerHeight;\n    const overlayHeight = totalHeaderHeight + 1; // border\n    if (overlayCanvas.width !== width * dpr || overlayCanvas.height !== overlayHeight * dpr) {\n        overlayCanvas.width = width * dpr;\n        overlayCanvas.height = overlayHeight * dpr;\n        overlayCanvas.style.width = width + \"px\";\n        overlayCanvas.style.height = overlayHeight + \"px\";\n    }\n    const bufferA = bufferACtx.canvas;\n    const bufferB = bufferBCtx.canvas;\n    if (doubleBuffer && (bufferA.width !== width * dpr || bufferA.height !== height * dpr)) {\n        bufferA.width = width * dpr;\n        bufferA.height = height * dpr;\n        if (lastBlitData.current !== undefined)\n            lastBlitData.current.aBufferScroll = undefined;\n    }\n    if (doubleBuffer && (bufferB.width !== width * dpr || bufferB.height !== height * dpr)) {\n        bufferB.width = width * dpr;\n        bufferB.height = height * dpr;\n        if (lastBlitData.current !== undefined)\n            lastBlitData.current.bBufferScroll = undefined;\n    }\n    const last = lastBlitData.current;\n    if (canBlit === true &&\n        cellXOffset === last?.cellXOffset &&\n        cellYOffset === last?.cellYOffset &&\n        translateX === last?.translateX &&\n        translateY === last?.translateY)\n        return;\n    let mainCtx = null;\n    if (doubleBuffer) {\n        mainCtx = canvasCtx;\n    }\n    const overlayCtx = headerCanvasCtx;\n    let targetCtx;\n    if (!doubleBuffer) {\n        targetCtx = canvasCtx;\n    }\n    else if (damage !== undefined) {\n        targetCtx = last?.lastBuffer === \"b\" ? bufferBCtx : bufferACtx;\n    }\n    else {\n        targetCtx = last?.lastBuffer === \"b\" ? bufferACtx : bufferBCtx;\n    }\n    const targetBuffer = targetCtx.canvas;\n    const blitSource = doubleBuffer ? (targetBuffer === bufferA ? bufferB : bufferA) : canvas;\n    const getRowHeight = typeof rowHeight === \"number\" ? () => rowHeight : rowHeight;\n    overlayCtx.save();\n    targetCtx.save();\n    overlayCtx.beginPath();\n    targetCtx.beginPath();\n    overlayCtx.textBaseline = \"middle\";\n    targetCtx.textBaseline = \"middle\";\n    if (dpr !== 1) {\n        overlayCtx.scale(dpr, dpr);\n        targetCtx.scale(dpr, dpr);\n    }\n    const effectiveCols = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.getEffectiveColumns)(mappedColumns, cellXOffset, width, dragAndDropState, translateX);\n    let drawRegions = [];\n    const mustDrawFocusOnHeader = drawFocus && selection.current?.cell[1] === cellYOffset && translateY === 0;\n    let mustDrawHighlightRingsOnHeader = false;\n    if (highlightRegions !== undefined) {\n        for (const r of highlightRegions) {\n            if (r.style !== \"no-outline\" && r.range.y === cellYOffset && translateY === 0) {\n                mustDrawHighlightRingsOnHeader = true;\n                break;\n            }\n        }\n    }\n    const drawHeaderTexture = () => {\n        (0,_data_grid_render_header_js__WEBPACK_IMPORTED_MODULE_3__.drawGridHeaders)(overlayCtx, effectiveCols, enableGroups, hoverInfo, width, translateX, headerHeight, groupHeaderHeight, dragAndDropState, isResizing, selection, theme, spriteManager, hoverValues, verticalBorder, getGroupDetails, damage, drawHeaderCallback, touchMode);\n        (0,_data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__.drawGridLines)(overlayCtx, effectiveCols, cellYOffset, translateX, translateY, width, height, undefined, undefined, groupHeaderHeight, totalHeaderHeight, getRowHeight, getRowThemeOverride, verticalBorder, freezeTrailingRows, rows, theme, true);\n        overlayCtx.beginPath();\n        overlayCtx.moveTo(0, overlayHeight - 0.5);\n        overlayCtx.lineTo(width, overlayHeight - 0.5);\n        overlayCtx.strokeStyle = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.headerBottomBorderColor ?? theme.horizontalBorderColor ?? theme.borderColor, theme.bgHeader);\n        overlayCtx.stroke();\n        if (mustDrawHighlightRingsOnHeader) {\n            (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawHighlightRings)(overlayCtx, width, height, cellXOffset, cellYOffset, translateX, translateY, mappedColumns, freezeColumns, headerHeight, groupHeaderHeight, rowHeight, freezeTrailingRows, rows, highlightRegions, theme);\n        }\n        if (mustDrawFocusOnHeader) {\n            (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawFillHandle)(overlayCtx, width, height, cellYOffset, translateX, translateY, effectiveCols, mappedColumns, theme, totalHeaderHeight, selection, getRowHeight, getCellContent, freezeTrailingRows, hasAppendRow, fillHandle, rows);\n        }\n    };\n    // handle damage updates by directly drawing to the target to avoid large blits\n    if (damage !== undefined) {\n        const viewRegionWidth = effectiveCols[effectiveCols.length - 1].sourceIndex + 1;\n        const damageInView = damage.hasItemInRegion([\n            {\n                x: cellXOffset,\n                y: -2,\n                width: viewRegionWidth,\n                height: 2,\n            },\n            {\n                x: cellXOffset,\n                y: cellYOffset,\n                width: viewRegionWidth,\n                height: 300,\n            },\n            {\n                x: 0,\n                y: cellYOffset,\n                width: freezeColumns,\n                height: 300,\n            },\n            {\n                x: 0,\n                y: -2,\n                width: freezeColumns,\n                height: 2,\n            },\n            {\n                x: cellXOffset,\n                y: rows - freezeTrailingRows,\n                width: viewRegionWidth,\n                height: freezeTrailingRows,\n                when: freezeTrailingRows > 0,\n            },\n        ]);\n        const doDamage = (ctx) => {\n            (0,_data_grid_render_cells_js__WEBPACK_IMPORTED_MODULE_7__.drawCells)(ctx, effectiveCols, mappedColumns, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, getCellContent, getGroupDetails, getRowThemeOverride, disabledRows, isFocused, drawFocus, freezeTrailingRows, hasAppendRow, drawRegions, damage, selection, prelightCells, highlightRegions, imageLoader, spriteManager, hoverValues, hoverInfo, drawCellCallback, hyperWrapping, theme, enqueue, renderStateProvider, getCellRenderer, overrideCursor, minimumCellWidth);\n            const selectionCurrent = selection.current;\n            if (fillHandle &&\n                drawFocus &&\n                selectionCurrent !== undefined &&\n                damage.has((0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_2__.rectBottomRight)(selectionCurrent.range))) {\n                (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawFillHandle)(ctx, width, height, cellYOffset, translateX, translateY, effectiveCols, mappedColumns, theme, totalHeaderHeight, selection, getRowHeight, getCellContent, freezeTrailingRows, hasAppendRow, fillHandle, rows);\n            }\n        };\n        if (damageInView) {\n            doDamage(targetCtx);\n            if (mainCtx !== null) {\n                mainCtx.save();\n                mainCtx.scale(dpr, dpr);\n                mainCtx.textBaseline = \"middle\";\n                doDamage(mainCtx);\n                mainCtx.restore();\n            }\n            const doHeaders = damage.hasHeader();\n            if (doHeaders) {\n                clipHeaderDamage(overlayCtx, effectiveCols, width, groupHeaderHeight, totalHeaderHeight, translateX, translateY, cellYOffset, damage);\n                drawHeaderTexture();\n            }\n        }\n        targetCtx.restore();\n        overlayCtx.restore();\n        return;\n    }\n    if (canBlit !== true ||\n        cellXOffset !== last?.cellXOffset ||\n        translateX !== last?.translateX ||\n        mustDrawFocusOnHeader !== last?.mustDrawFocusOnHeader ||\n        mustDrawHighlightRingsOnHeader !== last?.mustDrawHighlightRingsOnHeader) {\n        drawHeaderTexture();\n    }\n    if (canBlit === true) {\n        (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(blitSource !== undefined && last !== undefined);\n        const { regions } = (0,_data_grid_render_blit_js__WEBPACK_IMPORTED_MODULE_1__.blitLastFrame)(targetCtx, blitSource, blitSource === bufferA ? last.aBufferScroll : last.bBufferScroll, blitSource === bufferA ? last.bBufferScroll : last.aBufferScroll, last, cellXOffset, cellYOffset, translateX, translateY, freezeTrailingRows, width, height, rows, totalHeaderHeight, dpr, mappedColumns, effectiveCols, rowHeight, doubleBuffer);\n        drawRegions = regions;\n    }\n    else if (canBlit !== false) {\n        (0,_common_support_js__WEBPACK_IMPORTED_MODULE_8__.assert)(last !== undefined);\n        const resizedCol = canBlit;\n        drawRegions = (0,_data_grid_render_blit_js__WEBPACK_IMPORTED_MODULE_1__.blitResizedCol)(last, cellXOffset, cellYOffset, translateX, translateY, width, height, totalHeaderHeight, effectiveCols, resizedCol);\n    }\n    (0,_data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__.overdrawStickyBoundaries)(targetCtx, effectiveCols, width, height, freezeTrailingRows, rows, verticalBorder, getRowHeight, theme);\n    const highlightRedraw = (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawHighlightRings)(targetCtx, width, height, cellXOffset, cellYOffset, translateX, translateY, mappedColumns, freezeColumns, headerHeight, groupHeaderHeight, rowHeight, freezeTrailingRows, rows, highlightRegions, theme);\n    // the overdraw may have nuked out our focus ring right edge.\n    const focusRedraw = drawFocus\n        ? (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawFillHandle)(targetCtx, width, height, cellYOffset, translateX, translateY, effectiveCols, mappedColumns, theme, totalHeaderHeight, selection, getRowHeight, getCellContent, freezeTrailingRows, hasAppendRow, fillHandle, rows)\n        : undefined;\n    targetCtx.fillStyle = theme.bgCell;\n    if (drawRegions.length > 0) {\n        targetCtx.beginPath();\n        for (const r of drawRegions) {\n            targetCtx.rect(r.x, r.y, r.width, r.height);\n        }\n        targetCtx.clip();\n        targetCtx.fill();\n        targetCtx.beginPath();\n    }\n    else {\n        targetCtx.fillRect(0, 0, width, height);\n    }\n    const spans = (0,_data_grid_render_cells_js__WEBPACK_IMPORTED_MODULE_7__.drawCells)(targetCtx, effectiveCols, mappedColumns, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, getCellContent, getGroupDetails, getRowThemeOverride, disabledRows, isFocused, drawFocus, freezeTrailingRows, hasAppendRow, drawRegions, damage, selection, prelightCells, highlightRegions, imageLoader, spriteManager, hoverValues, hoverInfo, drawCellCallback, hyperWrapping, theme, enqueue, renderStateProvider, getCellRenderer, overrideCursor, minimumCellWidth);\n    (0,_data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__.drawBlanks)(targetCtx, effectiveCols, mappedColumns, width, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, getRowThemeOverride, selection.rows, disabledRows, freezeTrailingRows, hasAppendRow, drawRegions, damage, theme);\n    (0,_data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__.drawExtraRowThemes)(targetCtx, effectiveCols, cellYOffset, translateX, translateY, width, height, drawRegions, totalHeaderHeight, getRowHeight, getRowThemeOverride, verticalBorder, freezeTrailingRows, rows, theme);\n    (0,_data_grid_render_lines_js__WEBPACK_IMPORTED_MODULE_4__.drawGridLines)(targetCtx, effectiveCols, cellYOffset, translateX, translateY, width, height, drawRegions, spans, groupHeaderHeight, totalHeaderHeight, getRowHeight, getRowThemeOverride, verticalBorder, freezeTrailingRows, rows, theme);\n    highlightRedraw?.();\n    focusRedraw?.();\n    if (isResizing) {\n        (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_0__.walkColumns)(effectiveCols, 0, translateX, 0, totalHeaderHeight, (c, x) => {\n            if (c.sourceIndex === resizeCol) {\n                (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawColumnResizeOutline)(overlayCtx, x + c.width, 0, totalHeaderHeight + 1, (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.resizeIndicatorColor ?? theme.accentLight, theme.bgHeader));\n                (0,_data_grid_render_rings_js__WEBPACK_IMPORTED_MODULE_6__.drawColumnResizeOutline)(targetCtx, x + c.width, totalHeaderHeight, height, (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blend)(theme.resizeIndicatorColor ?? theme.accentLight, theme.bgCell));\n                return true;\n            }\n            return false;\n        });\n    }\n    if (mainCtx !== null) {\n        mainCtx.fillStyle = theme.bgCell;\n        mainCtx.fillRect(0, 0, width, height);\n        mainCtx.drawImage(targetCtx.canvas, 0, 0);\n    }\n    const lastRowDrawn = getLastRow(effectiveCols, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, freezeTrailingRows, hasAppendRow);\n    imageLoader?.setWindow({\n        x: cellXOffset,\n        y: cellYOffset,\n        width: effectiveCols.length,\n        height: lastRowDrawn - cellYOffset,\n    }, freezeColumns, Array.from({ length: freezeTrailingRows }, (_, i) => rows - 1 - i));\n    const scrollX = last !== undefined && (cellXOffset !== last.cellXOffset || translateX !== last.translateX);\n    const scrollY = last !== undefined && (cellYOffset !== last.cellYOffset || translateY !== last.translateY);\n    lastBlitData.current = {\n        cellXOffset,\n        cellYOffset,\n        translateX,\n        translateY,\n        mustDrawFocusOnHeader,\n        mustDrawHighlightRingsOnHeader,\n        lastBuffer: doubleBuffer ? (targetBuffer === bufferA ? \"a\" : \"b\") : undefined,\n        aBufferScroll: targetBuffer === bufferA ? [scrollX, scrollY] : last?.aBufferScroll,\n        bBufferScroll: targetBuffer === bufferB ? [scrollX, scrollY] : last?.bBufferScroll,\n    };\n    targetCtx.restore();\n    overlayCtx.restore();\n}\n//# sourceMappingURL=data-grid-render.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.lines.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.lines.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawBlanks: () => (/* binding */ drawBlanks),\n/* harmony export */   drawExtraRowThemes: () => (/* binding */ drawExtraRowThemes),\n/* harmony export */   drawGridLines: () => (/* binding */ drawGridLines),\n/* harmony export */   overdrawStickyBoundaries: () => (/* binding */ overdrawStickyBoundaries)\n/* harmony export */ });\n/* harmony import */ var lodash_groupBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/groupBy.js */ \"(ssr)/./node_modules/lodash/groupBy.js\");\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _common_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/styles.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/styles.js\");\n/* harmony import */ var _color_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n/* eslint-disable unicorn/no-for-loop */\n\n\n\n\n\n\n\n\n\nfunction drawBlanks(ctx, effectiveColumns, allColumns, width, height, totalHeaderHeight, translateX, translateY, cellYOffset, rows, getRowHeight, getRowTheme, selectedRows, disabledRows, freezeTrailingRows, hasAppendRow, drawRegions, damage, theme) {\n    if (damage !== undefined ||\n        effectiveColumns[effectiveColumns.length - 1] !== allColumns[effectiveColumns.length - 1])\n        return;\n    const skipPoint = (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__.getSkipPoint)(drawRegions);\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__.walkColumns)(effectiveColumns, cellYOffset, translateX, translateY, totalHeaderHeight, (c, drawX, colDrawY, clipX, startRow) => {\n        if (c !== effectiveColumns[effectiveColumns.length - 1])\n            return;\n        drawX += c.width;\n        const x = Math.max(drawX, clipX);\n        if (x > width)\n            return;\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(x, totalHeaderHeight + 1, 10000, height - totalHeaderHeight - 1);\n        ctx.clip();\n        (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_1__.walkRowsInCol)(startRow, colDrawY, height, rows, getRowHeight, freezeTrailingRows, hasAppendRow, skipPoint, (drawY, row, rh, isSticky) => {\n            if (!isSticky &&\n                drawRegions.length > 0 &&\n                !drawRegions.some(dr => (0,_common_math_js__WEBPACK_IMPORTED_MODULE_2__.intersectRect)(drawX, drawY, 10000, rh, dr.x, dr.y, dr.width, dr.height))) {\n                return;\n            }\n            const rowSelected = selectedRows.hasIndex(row);\n            const rowDisabled = disabledRows.hasIndex(row);\n            ctx.beginPath();\n            const rowTheme = getRowTheme?.(row);\n            const blankTheme = rowTheme === undefined ? theme : (0,_common_styles_js__WEBPACK_IMPORTED_MODULE_3__.mergeAndRealizeTheme)(theme, rowTheme);\n            if (blankTheme.bgCell !== theme.bgCell) {\n                ctx.fillStyle = blankTheme.bgCell;\n                ctx.fillRect(drawX, drawY, 10000, rh);\n            }\n            if (rowDisabled) {\n                ctx.fillStyle = blankTheme.bgHeader;\n                ctx.fillRect(drawX, drawY, 10000, rh);\n            }\n            if (rowSelected) {\n                ctx.fillStyle = blankTheme.accentLight;\n                ctx.fillRect(drawX, drawY, 10000, rh);\n            }\n        });\n        ctx.restore();\n    });\n}\nfunction overdrawStickyBoundaries(ctx, effectiveCols, width, height, freezeTrailingRows, rows, verticalBorder, getRowHeight, theme) {\n    let drawFreezeBorder = false;\n    for (const c of effectiveCols) {\n        if (c.sticky)\n            continue;\n        drawFreezeBorder = verticalBorder(c.sourceIndex);\n        break;\n    }\n    const hColor = theme.horizontalBorderColor ?? theme.borderColor;\n    const vColor = theme.borderColor;\n    const drawX = drawFreezeBorder ? (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getStickyWidth)(effectiveCols) : 0;\n    let vStroke;\n    if (drawX !== 0) {\n        vStroke = (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blendCache)(vColor, theme.bgCell);\n        ctx.beginPath();\n        ctx.moveTo(drawX + 0.5, 0);\n        ctx.lineTo(drawX + 0.5, height);\n        ctx.strokeStyle = vStroke;\n        ctx.stroke();\n    }\n    if (freezeTrailingRows > 0) {\n        const hStroke = vColor === hColor && vStroke !== undefined ? vStroke : (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_5__.blendCache)(hColor, theme.bgCell);\n        const h = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getFreezeTrailingHeight)(rows, freezeTrailingRows, getRowHeight);\n        ctx.beginPath();\n        ctx.moveTo(0, height - h + 0.5);\n        ctx.lineTo(width, height - h + 0.5);\n        ctx.strokeStyle = hStroke;\n        ctx.stroke();\n    }\n}\nconst getMinMaxXY = (drawRegions, width, height) => {\n    let minX = 0;\n    let maxX = width;\n    let minY = 0;\n    let maxY = height;\n    if (drawRegions !== undefined && drawRegions.length > 0) {\n        minX = Number.MAX_SAFE_INTEGER;\n        minY = Number.MAX_SAFE_INTEGER;\n        maxX = Number.MIN_SAFE_INTEGER;\n        maxY = Number.MIN_SAFE_INTEGER;\n        for (const r of drawRegions) {\n            minX = Math.min(minX, r.x - 1);\n            maxX = Math.max(maxX, r.x + r.width + 1);\n            minY = Math.min(minY, r.y - 1);\n            maxY = Math.max(maxY, r.y + r.height + 1);\n        }\n    }\n    return { minX, maxX, minY, maxY };\n};\nfunction drawExtraRowThemes(ctx, effectiveCols, cellYOffset, translateX, translateY, width, height, drawRegions, totalHeaderHeight, getRowHeight, getRowThemeOverride, verticalBorder, freezeTrailingRows, rows, theme) {\n    const bgCell = theme.bgCell;\n    const { minX, maxX, minY, maxY } = getMinMaxXY(drawRegions, width, height);\n    const toDraw = [];\n    const freezeY = height - (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_4__.getFreezeTrailingHeight)(rows, freezeTrailingRows, getRowHeight);\n    // row overflow\n    let y = totalHeaderHeight;\n    let row = cellYOffset;\n    let extraRowsStartY = 0;\n    while (y + translateY < freezeY) {\n        const ty = y + translateY;\n        const rh = getRowHeight(row);\n        if (ty >= minY && ty <= maxY - 1) {\n            const rowTheme = getRowThemeOverride?.(row);\n            const rowThemeBgCell = rowTheme?.bgCell;\n            const needDraw = rowThemeBgCell !== undefined && rowThemeBgCell !== bgCell && row >= rows - freezeTrailingRows;\n            if (needDraw) {\n                toDraw.push({\n                    x: minX,\n                    y: ty,\n                    w: maxX - minX,\n                    h: rh,\n                    color: rowThemeBgCell,\n                });\n            }\n        }\n        y += rh;\n        if (row < rows - freezeTrailingRows)\n            extraRowsStartY = y;\n        row++;\n    }\n    // column overflow\n    let x = 0;\n    const h = Math.min(freezeY, maxY) - extraRowsStartY;\n    if (h > 0) {\n        for (let index = 0; index < effectiveCols.length; index++) {\n            const c = effectiveCols[index];\n            if (c.width === 0)\n                continue;\n            const tx = c.sticky ? x : x + translateX;\n            const colThemeBgCell = c.themeOverride?.bgCell;\n            if (colThemeBgCell !== undefined &&\n                colThemeBgCell !== bgCell &&\n                tx >= minX &&\n                tx <= maxX &&\n                verticalBorder(index + 1)) {\n                toDraw.push({\n                    x: tx,\n                    y: extraRowsStartY,\n                    w: c.width,\n                    h,\n                    color: colThemeBgCell,\n                });\n            }\n            x += c.width;\n        }\n    }\n    if (toDraw.length === 0)\n        return;\n    let color;\n    ctx.beginPath();\n    // render in reverse order because we computed and added the columns last, but they should actually be lower\n    // priority than the rows.\n    for (let i = toDraw.length - 1; i >= 0; i--) {\n        const r = toDraw[i];\n        if (color === undefined) {\n            color = r.color;\n        }\n        else if (r.color !== color) {\n            ctx.fillStyle = color;\n            ctx.fill();\n            ctx.beginPath();\n            color = r.color;\n        }\n        ctx.rect(r.x, r.y, r.w, r.h);\n    }\n    if (color !== undefined) {\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n    ctx.beginPath();\n}\n// lines are effectively drawn on the top left edge of a cell.\nfunction drawGridLines(ctx, effectiveCols, cellYOffset, translateX, translateY, width, height, drawRegions, spans, groupHeaderHeight, totalHeaderHeight, getRowHeight, getRowThemeOverride, verticalBorder, freezeTrailingRows, rows, theme, verticalOnly = false) {\n    if (spans !== undefined) {\n        ctx.beginPath();\n        ctx.save();\n        ctx.rect(0, 0, width, height);\n        for (const span of spans) {\n            ctx.rect(span.x + 1, span.y + 1, span.width - 1, span.height - 1);\n        }\n        ctx.clip(\"evenodd\");\n    }\n    const hColor = theme.horizontalBorderColor ?? theme.borderColor;\n    const vColor = theme.borderColor;\n    const { minX, maxX, minY, maxY } = getMinMaxXY(drawRegions, width, height);\n    const toDraw = [];\n    ctx.beginPath();\n    // vertical lines\n    let x = 0.5;\n    for (let index = 0; index < effectiveCols.length; index++) {\n        const c = effectiveCols[index];\n        if (c.width === 0)\n            continue;\n        x += c.width;\n        const tx = c.sticky ? x : x + translateX;\n        if (tx >= minX && tx <= maxX && verticalBorder(index + 1)) {\n            toDraw.push({\n                x1: tx,\n                y1: Math.max(groupHeaderHeight, minY),\n                x2: tx,\n                y2: Math.min(height, maxY),\n                color: vColor,\n            });\n        }\n    }\n    let freezeY = height + 0.5;\n    for (let i = rows - freezeTrailingRows; i < rows; i++) {\n        const rh = getRowHeight(i);\n        freezeY -= rh;\n        toDraw.push({ x1: minX, y1: freezeY, x2: maxX, y2: freezeY, color: hColor });\n    }\n    if (verticalOnly !== true) {\n        // horizontal lines\n        let y = totalHeaderHeight + 0.5;\n        let row = cellYOffset;\n        const target = freezeY;\n        while (y + translateY < target) {\n            const ty = y + translateY;\n            if (ty >= minY && ty <= maxY - 1) {\n                const rowTheme = getRowThemeOverride?.(row);\n                toDraw.push({\n                    x1: minX,\n                    y1: ty,\n                    x2: maxX,\n                    y2: ty,\n                    color: rowTheme?.horizontalBorderColor ?? rowTheme?.borderColor ?? hColor,\n                });\n            }\n            y += getRowHeight(row);\n            row++;\n        }\n    }\n    const groups = lodash_groupBy_js__WEBPACK_IMPORTED_MODULE_0__(toDraw, line => line.color);\n    for (const g of Object.keys(groups)) {\n        ctx.strokeStyle = g;\n        for (const line of groups[g]) {\n            ctx.moveTo(line.x1, line.y1);\n            ctx.lineTo(line.x2, line.y2);\n        }\n        ctx.stroke();\n        ctx.beginPath();\n    }\n    if (spans !== undefined) {\n        ctx.restore();\n    }\n}\n//# sourceMappingURL=data-grid-render.lines.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.lines.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSkipPoint: () => (/* binding */ getSkipPoint),\n/* harmony export */   getSpanBounds: () => (/* binding */ getSpanBounds),\n/* harmony export */   walkColumns: () => (/* binding */ walkColumns),\n/* harmony export */   walkGroups: () => (/* binding */ walkGroups),\n/* harmony export */   walkRowsInCol: () => (/* binding */ walkRowsInCol)\n/* harmony export */ });\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n\n\nfunction getSkipPoint(drawRegions) {\n    if (drawRegions.length === 0)\n        return undefined;\n    let drawRegionsLowestY;\n    for (const dr of drawRegions) {\n        drawRegionsLowestY = Math.min(drawRegionsLowestY ?? dr.y, dr.y);\n    }\n}\nfunction walkRowsInCol(startRow, drawY, height, rows, getRowHeight, freezeTrailingRows, hasAppendRow, skipToY, cb) {\n    skipToY = skipToY ?? drawY;\n    let y = drawY;\n    let row = startRow;\n    const rowEnd = rows - freezeTrailingRows;\n    let didBreak = false;\n    while (y < height && row < rowEnd) {\n        const rh = getRowHeight(row);\n        if (y + rh > skipToY && cb(y, row, rh, false, hasAppendRow && row === rows - 1) === true) {\n            didBreak = true;\n            break;\n        }\n        y += rh;\n        row++;\n    }\n    if (didBreak)\n        return;\n    y = height;\n    for (let fr = 0; fr < freezeTrailingRows; fr++) {\n        row = rows - 1 - fr;\n        const rh = getRowHeight(row);\n        y -= rh;\n        cb(y, row, rh, true, hasAppendRow && row === rows - 1);\n    }\n}\nfunction walkColumns(effectiveCols, cellYOffset, translateX, translateY, totalHeaderHeight, cb) {\n    let x = 0;\n    let clipX = 0; // this tracks the total width of sticky cols\n    const drawY = totalHeaderHeight + translateY;\n    for (const c of effectiveCols) {\n        const drawX = c.sticky ? clipX : x + translateX;\n        if (cb(c, drawX, drawY, c.sticky ? 0 : clipX, cellYOffset) === true) {\n            break;\n        }\n        x += c.width;\n        clipX += c.sticky ? c.width : 0;\n    }\n}\nfunction walkGroups(effectiveCols, width, translateX, groupHeaderHeight, cb) {\n    let x = 0;\n    let clipX = 0;\n    for (let index = 0; index < effectiveCols.length; index++) {\n        const startCol = effectiveCols[index];\n        let end = index + 1;\n        let boxWidth = startCol.width;\n        if (startCol.sticky) {\n            clipX += boxWidth;\n        }\n        while (end < effectiveCols.length &&\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.isGroupEqual)(effectiveCols[end].group, startCol.group) &&\n            effectiveCols[end].sticky === effectiveCols[index].sticky) {\n            const endCol = effectiveCols[end];\n            boxWidth += endCol.width;\n            end++;\n            index++;\n            if (endCol.sticky) {\n                clipX += endCol.width;\n            }\n        }\n        const t = startCol.sticky ? 0 : translateX;\n        const localX = x + t;\n        const delta = startCol.sticky ? 0 : Math.max(0, clipX - localX);\n        const w = Math.min(boxWidth - delta, width - (localX + delta));\n        cb([startCol.sourceIndex, effectiveCols[end - 1].sourceIndex], startCol.group ?? \"\", localX + delta, 0, w, groupHeaderHeight);\n        x += boxWidth;\n    }\n}\nfunction getSpanBounds(span, cellX, cellY, cellW, cellH, column, allColumns) {\n    const [startCol, endCol] = span;\n    let frozenRect;\n    let contentRect;\n    const firstNonSticky = allColumns.find(x => !x.sticky)?.sourceIndex ?? 0;\n    if (endCol > firstNonSticky) {\n        const renderFromCol = Math.max(startCol, firstNonSticky);\n        let tempX = cellX;\n        let tempW = cellW;\n        for (let x = column.sourceIndex - 1; x >= renderFromCol; x--) {\n            tempX -= allColumns[x].width;\n            tempW += allColumns[x].width;\n        }\n        for (let x = column.sourceIndex + 1; x <= endCol; x++) {\n            tempW += allColumns[x].width;\n        }\n        contentRect = {\n            x: tempX,\n            y: cellY,\n            width: tempW,\n            height: cellH,\n        };\n    }\n    if (firstNonSticky > startCol) {\n        const renderToCol = Math.min(endCol, firstNonSticky - 1);\n        let tempX = cellX;\n        let tempW = cellW;\n        for (let x = column.sourceIndex - 1; x >= startCol; x--) {\n            tempX -= allColumns[x].width;\n            tempW += allColumns[x].width;\n        }\n        for (let x = column.sourceIndex + 1; x <= renderToCol; x++) {\n            tempW += allColumns[x].width;\n        }\n        frozenRect = {\n            x: tempX,\n            y: cellY,\n            width: tempW,\n            height: cellH,\n        };\n    }\n    return [frozenRect, contentRect];\n}\n//# sourceMappingURL=data-grid-render.walk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL3JlbmRlci9kYXRhLWdyaWQtcmVuZGVyLndhbGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVDO0FBQ1c7QUFDM0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix5QkFBeUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHdCQUF3Qiw4QkFBOEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLCtEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsb0JBQW9CO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxhQUFhO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGVBQWU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGtCQUFrQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RhdGEtZ3JpZC1yZW5kZXIud2Fsay5qcz9kZTljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7fSBmcm9tIFwiLi4vZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5pbXBvcnQgeyBpc0dyb3VwRXF1YWwgfSBmcm9tIFwiLi9kYXRhLWdyaWQtbGliLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2tpcFBvaW50KGRyYXdSZWdpb25zKSB7XG4gICAgaWYgKGRyYXdSZWdpb25zLmxlbmd0aCA9PT0gMClcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBsZXQgZHJhd1JlZ2lvbnNMb3dlc3RZO1xuICAgIGZvciAoY29uc3QgZHIgb2YgZHJhd1JlZ2lvbnMpIHtcbiAgICAgICAgZHJhd1JlZ2lvbnNMb3dlc3RZID0gTWF0aC5taW4oZHJhd1JlZ2lvbnNMb3dlc3RZID8/IGRyLnksIGRyLnkpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB3YWxrUm93c0luQ29sKHN0YXJ0Um93LCBkcmF3WSwgaGVpZ2h0LCByb3dzLCBnZXRSb3dIZWlnaHQsIGZyZWV6ZVRyYWlsaW5nUm93cywgaGFzQXBwZW5kUm93LCBza2lwVG9ZLCBjYikge1xuICAgIHNraXBUb1kgPSBza2lwVG9ZID8/IGRyYXdZO1xuICAgIGxldCB5ID0gZHJhd1k7XG4gICAgbGV0IHJvdyA9IHN0YXJ0Um93O1xuICAgIGNvbnN0IHJvd0VuZCA9IHJvd3MgLSBmcmVlemVUcmFpbGluZ1Jvd3M7XG4gICAgbGV0IGRpZEJyZWFrID0gZmFsc2U7XG4gICAgd2hpbGUgKHkgPCBoZWlnaHQgJiYgcm93IDwgcm93RW5kKSB7XG4gICAgICAgIGNvbnN0IHJoID0gZ2V0Um93SGVpZ2h0KHJvdyk7XG4gICAgICAgIGlmICh5ICsgcmggPiBza2lwVG9ZICYmIGNiKHksIHJvdywgcmgsIGZhbHNlLCBoYXNBcHBlbmRSb3cgJiYgcm93ID09PSByb3dzIC0gMSkgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGRpZEJyZWFrID0gdHJ1ZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHkgKz0gcmg7XG4gICAgICAgIHJvdysrO1xuICAgIH1cbiAgICBpZiAoZGlkQnJlYWspXG4gICAgICAgIHJldHVybjtcbiAgICB5ID0gaGVpZ2h0O1xuICAgIGZvciAobGV0IGZyID0gMDsgZnIgPCBmcmVlemVUcmFpbGluZ1Jvd3M7IGZyKyspIHtcbiAgICAgICAgcm93ID0gcm93cyAtIDEgLSBmcjtcbiAgICAgICAgY29uc3QgcmggPSBnZXRSb3dIZWlnaHQocm93KTtcbiAgICAgICAgeSAtPSByaDtcbiAgICAgICAgY2IoeSwgcm93LCByaCwgdHJ1ZSwgaGFzQXBwZW5kUm93ICYmIHJvdyA9PT0gcm93cyAtIDEpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB3YWxrQ29sdW1ucyhlZmZlY3RpdmVDb2xzLCBjZWxsWU9mZnNldCwgdHJhbnNsYXRlWCwgdHJhbnNsYXRlWSwgdG90YWxIZWFkZXJIZWlnaHQsIGNiKSB7XG4gICAgbGV0IHggPSAwO1xuICAgIGxldCBjbGlwWCA9IDA7IC8vIHRoaXMgdHJhY2tzIHRoZSB0b3RhbCB3aWR0aCBvZiBzdGlja3kgY29sc1xuICAgIGNvbnN0IGRyYXdZID0gdG90YWxIZWFkZXJIZWlnaHQgKyB0cmFuc2xhdGVZO1xuICAgIGZvciAoY29uc3QgYyBvZiBlZmZlY3RpdmVDb2xzKSB7XG4gICAgICAgIGNvbnN0IGRyYXdYID0gYy5zdGlja3kgPyBjbGlwWCA6IHggKyB0cmFuc2xhdGVYO1xuICAgICAgICBpZiAoY2IoYywgZHJhd1gsIGRyYXdZLCBjLnN0aWNreSA/IDAgOiBjbGlwWCwgY2VsbFlPZmZzZXQpID09PSB0cnVlKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB4ICs9IGMud2lkdGg7XG4gICAgICAgIGNsaXBYICs9IGMuc3RpY2t5ID8gYy53aWR0aCA6IDA7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHdhbGtHcm91cHMoZWZmZWN0aXZlQ29scywgd2lkdGgsIHRyYW5zbGF0ZVgsIGdyb3VwSGVhZGVySGVpZ2h0LCBjYikge1xuICAgIGxldCB4ID0gMDtcbiAgICBsZXQgY2xpcFggPSAwO1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBlZmZlY3RpdmVDb2xzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjb25zdCBzdGFydENvbCA9IGVmZmVjdGl2ZUNvbHNbaW5kZXhdO1xuICAgICAgICBsZXQgZW5kID0gaW5kZXggKyAxO1xuICAgICAgICBsZXQgYm94V2lkdGggPSBzdGFydENvbC53aWR0aDtcbiAgICAgICAgaWYgKHN0YXJ0Q29sLnN0aWNreSkge1xuICAgICAgICAgICAgY2xpcFggKz0gYm94V2lkdGg7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKGVuZCA8IGVmZmVjdGl2ZUNvbHMubGVuZ3RoICYmXG4gICAgICAgICAgICBpc0dyb3VwRXF1YWwoZWZmZWN0aXZlQ29sc1tlbmRdLmdyb3VwLCBzdGFydENvbC5ncm91cCkgJiZcbiAgICAgICAgICAgIGVmZmVjdGl2ZUNvbHNbZW5kXS5zdGlja3kgPT09IGVmZmVjdGl2ZUNvbHNbaW5kZXhdLnN0aWNreSkge1xuICAgICAgICAgICAgY29uc3QgZW5kQ29sID0gZWZmZWN0aXZlQ29sc1tlbmRdO1xuICAgICAgICAgICAgYm94V2lkdGggKz0gZW5kQ29sLndpZHRoO1xuICAgICAgICAgICAgZW5kKys7XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgICAgaWYgKGVuZENvbC5zdGlja3kpIHtcbiAgICAgICAgICAgICAgICBjbGlwWCArPSBlbmRDb2wud2lkdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdCA9IHN0YXJ0Q29sLnN0aWNreSA/IDAgOiB0cmFuc2xhdGVYO1xuICAgICAgICBjb25zdCBsb2NhbFggPSB4ICsgdDtcbiAgICAgICAgY29uc3QgZGVsdGEgPSBzdGFydENvbC5zdGlja3kgPyAwIDogTWF0aC5tYXgoMCwgY2xpcFggLSBsb2NhbFgpO1xuICAgICAgICBjb25zdCB3ID0gTWF0aC5taW4oYm94V2lkdGggLSBkZWx0YSwgd2lkdGggLSAobG9jYWxYICsgZGVsdGEpKTtcbiAgICAgICAgY2IoW3N0YXJ0Q29sLnNvdXJjZUluZGV4LCBlZmZlY3RpdmVDb2xzW2VuZCAtIDFdLnNvdXJjZUluZGV4XSwgc3RhcnRDb2wuZ3JvdXAgPz8gXCJcIiwgbG9jYWxYICsgZGVsdGEsIDAsIHcsIGdyb3VwSGVhZGVySGVpZ2h0KTtcbiAgICAgICAgeCArPSBib3hXaWR0aDtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3BhbkJvdW5kcyhzcGFuLCBjZWxsWCwgY2VsbFksIGNlbGxXLCBjZWxsSCwgY29sdW1uLCBhbGxDb2x1bW5zKSB7XG4gICAgY29uc3QgW3N0YXJ0Q29sLCBlbmRDb2xdID0gc3BhbjtcbiAgICBsZXQgZnJvemVuUmVjdDtcbiAgICBsZXQgY29udGVudFJlY3Q7XG4gICAgY29uc3QgZmlyc3ROb25TdGlja3kgPSBhbGxDb2x1bW5zLmZpbmQoeCA9PiAheC5zdGlja3kpPy5zb3VyY2VJbmRleCA/PyAwO1xuICAgIGlmIChlbmRDb2wgPiBmaXJzdE5vblN0aWNreSkge1xuICAgICAgICBjb25zdCByZW5kZXJGcm9tQ29sID0gTWF0aC5tYXgoc3RhcnRDb2wsIGZpcnN0Tm9uU3RpY2t5KTtcbiAgICAgICAgbGV0IHRlbXBYID0gY2VsbFg7XG4gICAgICAgIGxldCB0ZW1wVyA9IGNlbGxXO1xuICAgICAgICBmb3IgKGxldCB4ID0gY29sdW1uLnNvdXJjZUluZGV4IC0gMTsgeCA+PSByZW5kZXJGcm9tQ29sOyB4LS0pIHtcbiAgICAgICAgICAgIHRlbXBYIC09IGFsbENvbHVtbnNbeF0ud2lkdGg7XG4gICAgICAgICAgICB0ZW1wVyArPSBhbGxDb2x1bW5zW3hdLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHggPSBjb2x1bW4uc291cmNlSW5kZXggKyAxOyB4IDw9IGVuZENvbDsgeCsrKSB7XG4gICAgICAgICAgICB0ZW1wVyArPSBhbGxDb2x1bW5zW3hdLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRlbnRSZWN0ID0ge1xuICAgICAgICAgICAgeDogdGVtcFgsXG4gICAgICAgICAgICB5OiBjZWxsWSxcbiAgICAgICAgICAgIHdpZHRoOiB0ZW1wVyxcbiAgICAgICAgICAgIGhlaWdodDogY2VsbEgsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChmaXJzdE5vblN0aWNreSA+IHN0YXJ0Q29sKSB7XG4gICAgICAgIGNvbnN0IHJlbmRlclRvQ29sID0gTWF0aC5taW4oZW5kQ29sLCBmaXJzdE5vblN0aWNreSAtIDEpO1xuICAgICAgICBsZXQgdGVtcFggPSBjZWxsWDtcbiAgICAgICAgbGV0IHRlbXBXID0gY2VsbFc7XG4gICAgICAgIGZvciAobGV0IHggPSBjb2x1bW4uc291cmNlSW5kZXggLSAxOyB4ID49IHN0YXJ0Q29sOyB4LS0pIHtcbiAgICAgICAgICAgIHRlbXBYIC09IGFsbENvbHVtbnNbeF0ud2lkdGg7XG4gICAgICAgICAgICB0ZW1wVyArPSBhbGxDb2x1bW5zW3hdLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHggPSBjb2x1bW4uc291cmNlSW5kZXggKyAxOyB4IDw9IHJlbmRlclRvQ29sOyB4KyspIHtcbiAgICAgICAgICAgIHRlbXBXICs9IGFsbENvbHVtbnNbeF0ud2lkdGg7XG4gICAgICAgIH1cbiAgICAgICAgZnJvemVuUmVjdCA9IHtcbiAgICAgICAgICAgIHg6IHRlbXBYLFxuICAgICAgICAgICAgeTogY2VsbFksXG4gICAgICAgICAgICB3aWR0aDogdGVtcFcsXG4gICAgICAgICAgICBoZWlnaHQ6IGNlbGxILFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gW2Zyb3plblJlY3QsIGNvbnRlbnRSZWN0XTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGEtZ3JpZC1yZW5kZXIud2Fsay5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid.render.rings.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid.render.rings.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawColumnResizeOutline: () => (/* binding */ drawColumnResizeOutline),\n/* harmony export */   drawFillHandle: () => (/* binding */ drawFillHandle),\n/* harmony export */   drawHighlightRings: () => (/* binding */ drawHighlightRings)\n/* harmony export */ });\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _color_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color-parser.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/color-parser.js\");\n/* harmony import */ var _common_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/math.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/math.js\");\n/* harmony import */ var _data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-grid-render.walk.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-render.walk.js\");\n/* eslint-disable sonarjs/no-duplicate-string */\n/* eslint-disable unicorn/no-for-loop */\n\n\n\n\n\n\n\nfunction drawHighlightRings(ctx, width, height, cellXOffset, cellYOffset, translateX, translateY, mappedColumns, freezeColumns, headerHeight, groupHeaderHeight, rowHeight, freezeTrailingRows, rows, allHighlightRegions, theme) {\n    const highlightRegions = allHighlightRegions?.filter(x => x.style !== \"no-outline\");\n    if (highlightRegions === undefined || highlightRegions.length === 0)\n        return undefined;\n    const freezeLeft = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.getStickyWidth)(mappedColumns);\n    const freezeBottom = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.getFreezeTrailingHeight)(rows, freezeTrailingRows, rowHeight);\n    const splitIndicies = [freezeColumns, 0, mappedColumns.length, rows - freezeTrailingRows];\n    const splitLocations = [freezeLeft, 0, width, height - freezeBottom];\n    const drawRects = highlightRegions.map(h => {\n        const r = h.range;\n        const style = h.style ?? \"dashed\";\n        return (0,_common_math_js__WEBPACK_IMPORTED_MODULE_1__.splitRectIntoRegions)(r, splitIndicies, width, height, splitLocations).map(arg => {\n            const rect = arg.rect;\n            const topLeftBounds = (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.computeBounds)(rect.x, rect.y, width, height, groupHeaderHeight, headerHeight + groupHeaderHeight, cellXOffset, cellYOffset, translateX, translateY, rows, freezeColumns, freezeTrailingRows, mappedColumns, rowHeight);\n            const bottomRightBounds = rect.width === 1 && rect.height === 1\n                ? topLeftBounds\n                : (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.computeBounds)(rect.x + rect.width - 1, rect.y + rect.height - 1, width, height, groupHeaderHeight, headerHeight + groupHeaderHeight, cellXOffset, cellYOffset, translateX, translateY, rows, freezeColumns, freezeTrailingRows, mappedColumns, rowHeight);\n            if (rect.x + rect.width >= mappedColumns.length) {\n                bottomRightBounds.width -= 1;\n            }\n            if (rect.y + rect.height >= rows) {\n                bottomRightBounds.height -= 1;\n            }\n            return {\n                color: h.color,\n                style,\n                clip: arg.clip,\n                rect: (0,_common_math_js__WEBPACK_IMPORTED_MODULE_1__.hugRectToTarget)({\n                    x: topLeftBounds.x,\n                    y: topLeftBounds.y,\n                    width: bottomRightBounds.x + bottomRightBounds.width - topLeftBounds.x,\n                    height: bottomRightBounds.y + bottomRightBounds.height - topLeftBounds.y,\n                }, width, height, 8),\n            };\n        });\n    });\n    const drawCb = () => {\n        ctx.lineWidth = 1;\n        let dashed = false;\n        for (const dr of drawRects) {\n            for (const s of dr) {\n                if (s?.rect !== undefined &&\n                    (0,_common_math_js__WEBPACK_IMPORTED_MODULE_1__.intersectRect)(0, 0, width, height, s.rect.x, s.rect.y, s.rect.width, s.rect.height)) {\n                    const wasDashed = dashed;\n                    const needsClip = !(0,_common_math_js__WEBPACK_IMPORTED_MODULE_1__.rectContains)(s.clip, s.rect);\n                    if (needsClip) {\n                        ctx.save();\n                        ctx.rect(s.clip.x, s.clip.y, s.clip.width, s.clip.height);\n                        ctx.clip();\n                    }\n                    if (s.style === \"dashed\" && !dashed) {\n                        ctx.setLineDash([5, 3]);\n                        dashed = true;\n                    }\n                    else if ((s.style === \"solid\" || s.style === \"solid-outline\") && dashed) {\n                        ctx.setLineDash([]);\n                        dashed = false;\n                    }\n                    ctx.strokeStyle =\n                        s.style === \"solid-outline\"\n                            ? (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_2__.blend)((0,_color_parser_js__WEBPACK_IMPORTED_MODULE_2__.blend)(s.color, theme.borderColor), theme.bgCell)\n                            : (0,_color_parser_js__WEBPACK_IMPORTED_MODULE_2__.withAlpha)(s.color, 1);\n                    ctx.strokeRect(s.rect.x + 0.5, s.rect.y + 0.5, s.rect.width - 1, s.rect.height - 1);\n                    if (needsClip) {\n                        ctx.restore();\n                        dashed = wasDashed;\n                    }\n                }\n            }\n        }\n        if (dashed) {\n            ctx.setLineDash([]);\n        }\n    };\n    drawCb();\n    return drawCb;\n}\nfunction drawColumnResizeOutline(ctx, yOffset, xOffset, height, style) {\n    ctx.beginPath();\n    ctx.moveTo(yOffset, xOffset);\n    ctx.lineTo(yOffset, height);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n}\nfunction drawFillHandle(ctx, width, height, cellYOffset, translateX, translateY, effectiveCols, allColumns, theme, totalHeaderHeight, selectedCell, getRowHeight, getCellContent, freezeTrailingRows, hasAppendRow, fillHandle, rows) {\n    if (selectedCell.current === undefined)\n        return undefined;\n    const range = selectedCell.current.range;\n    const currentItem = selectedCell.current.cell;\n    const fillHandleTarget = [range.x + range.width - 1, range.y + range.height - 1];\n    // if the currentItem row greater than rows and the fill handle row is greater than rows, we dont need to draw\n    if (currentItem[1] >= rows && fillHandleTarget[1] >= rows)\n        return undefined;\n    const mustDraw = effectiveCols.some(c => c.sourceIndex === currentItem[0] || c.sourceIndex === fillHandleTarget[0]);\n    if (!mustDraw)\n        return undefined;\n    const [targetCol, targetRow] = selectedCell.current.cell;\n    const cell = getCellContent(selectedCell.current.cell);\n    const targetColSpan = cell.span ?? [targetCol, targetCol];\n    const isStickyRow = targetRow >= rows - freezeTrailingRows;\n    const stickRowHeight = freezeTrailingRows > 0 && !isStickyRow\n        ? (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_0__.getFreezeTrailingHeight)(rows, freezeTrailingRows, getRowHeight) - 1\n        : 0;\n    const fillHandleRow = fillHandleTarget[1];\n    let drawHandleCb = undefined;\n    (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_3__.walkColumns)(effectiveCols, cellYOffset, translateX, translateY, totalHeaderHeight, (col, drawX, colDrawY, clipX, startRow) => {\n        clipX;\n        if (col.sticky && targetCol > col.sourceIndex)\n            return;\n        const isBeforeTarget = col.sourceIndex < targetColSpan[0];\n        const isAfterTarget = col.sourceIndex > targetColSpan[1];\n        const isFillHandleCol = col.sourceIndex === fillHandleTarget[0];\n        if (!isFillHandleCol && (isBeforeTarget || isAfterTarget)) {\n            // we dont need to do any drawing on this column but may yet need to draw\n            return;\n        }\n        (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_3__.walkRowsInCol)(startRow, colDrawY, height, rows, getRowHeight, freezeTrailingRows, hasAppendRow, undefined, (drawY, row, rh) => {\n            if (row !== targetRow && row !== fillHandleRow)\n                return;\n            let cellX = drawX;\n            let cellWidth = col.width;\n            if (cell.span !== undefined) {\n                const areas = (0,_data_grid_render_walk_js__WEBPACK_IMPORTED_MODULE_3__.getSpanBounds)(cell.span, drawX, drawY, col.width, rh, col, allColumns);\n                const area = col.sticky ? areas[0] : areas[1];\n                if (area !== undefined) {\n                    cellX = area.x;\n                    cellWidth = area.width;\n                }\n            }\n            const doHandle = row === fillHandleRow && isFillHandleCol && fillHandle;\n            if (doHandle) {\n                drawHandleCb = () => {\n                    if (clipX > cellX && !col.sticky) {\n                        ctx.beginPath();\n                        ctx.rect(clipX, 0, width - clipX, height);\n                        ctx.clip();\n                    }\n                    ctx.beginPath();\n                    ctx.rect(cellX + cellWidth - 4, drawY + rh - 4, 4, 4);\n                    ctx.fillStyle = col.themeOverride?.accentColor ?? theme.accentColor;\n                    ctx.fill();\n                };\n            }\n            return drawHandleCb !== undefined;\n        });\n        return drawHandleCb !== undefined;\n    });\n    if (drawHandleCb === undefined)\n        return undefined;\n    const result = () => {\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(0, totalHeaderHeight, width, height - totalHeaderHeight - stickRowHeight);\n        ctx.clip();\n        drawHandleCb?.();\n        ctx.restore();\n    };\n    result();\n    return result;\n}\n//# sourceMappingURL=data-grid.render.rings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid.render.rings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawCheckbox: () => (/* binding */ drawCheckbox)\n/* harmony export */ });\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-lib.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/data-grid-lib.js\");\n/* harmony import */ var _data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\n\n\nfunction drawCheckbox(ctx, theme, checked, x, y, width, height, highlighted, hoverX = -20, hoverY = -20, maxSize = 32, alignment = \"center\", style = \"square\") {\n    const centerY = Math.floor(y + height / 2);\n    const rectBordRadius = style === \"circle\" ? 10000 : theme.roundingRadius ?? 4;\n    let checkBoxWidth = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.getSquareWidth)(maxSize, height, theme.cellVerticalPadding);\n    let checkBoxHalfWidth = checkBoxWidth / 2;\n    const posX = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.getSquareXPosFromAlign)(alignment, x, width, theme.cellHorizontalPadding, checkBoxWidth);\n    const bb = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.getSquareBB)(posX, centerY, checkBoxWidth);\n    const hovered = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_0__.pointIsWithinBB)(x + hoverX, y + hoverY, bb);\n    switch (checked) {\n        case true: {\n            ctx.beginPath();\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.roundedRect)(ctx, posX - checkBoxWidth / 2, centerY - checkBoxWidth / 2, checkBoxWidth, checkBoxWidth, rectBordRadius);\n            if (style === \"circle\") {\n                checkBoxHalfWidth *= 0.8;\n                checkBoxWidth *= 0.8;\n            }\n            ctx.fillStyle = highlighted ? theme.accentColor : theme.textMedium;\n            ctx.fill();\n            ctx.beginPath();\n            ctx.moveTo(posX - checkBoxHalfWidth + checkBoxWidth / 4.23, centerY - checkBoxHalfWidth + checkBoxWidth / 1.97);\n            ctx.lineTo(posX - checkBoxHalfWidth + checkBoxWidth / 2.42, centerY - checkBoxHalfWidth + checkBoxWidth / 1.44);\n            ctx.lineTo(posX - checkBoxHalfWidth + checkBoxWidth / 1.29, centerY - checkBoxHalfWidth + checkBoxWidth / 3.25);\n            ctx.strokeStyle = theme.bgCell;\n            ctx.lineJoin = \"round\";\n            ctx.lineCap = \"round\";\n            ctx.lineWidth = 1.9;\n            ctx.stroke();\n            break;\n        }\n        case _data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.BooleanEmpty:\n        case false: {\n            ctx.beginPath();\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.roundedRect)(ctx, posX - checkBoxWidth / 2 + 0.5, centerY - checkBoxWidth / 2 + 0.5, checkBoxWidth - 1, checkBoxWidth - 1, rectBordRadius);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = hovered ? theme.textDark : theme.textMedium;\n            ctx.stroke();\n            break;\n        }\n        case _data_grid_types_js__WEBPACK_IMPORTED_MODULE_2__.BooleanIndeterminate: {\n            ctx.beginPath();\n            (0,_data_grid_lib_js__WEBPACK_IMPORTED_MODULE_1__.roundedRect)(ctx, posX - checkBoxWidth / 2, centerY - checkBoxWidth / 2, checkBoxWidth, checkBoxWidth, rectBordRadius);\n            ctx.fillStyle = hovered ? theme.textMedium : theme.textLight;\n            ctx.fill();\n            if (style === \"circle\") {\n                checkBoxHalfWidth *= 0.8;\n                checkBoxWidth *= 0.8;\n            }\n            ctx.beginPath();\n            ctx.moveTo(posX - checkBoxWidth / 3, centerY);\n            ctx.lineTo(posX + checkBoxWidth / 3, centerY);\n            ctx.strokeStyle = theme.bgCell;\n            ctx.lineCap = \"round\";\n            ctx.lineWidth = 1.9;\n            ctx.stroke();\n            break;\n        }\n        default:\n            (0,_common_support_js__WEBPACK_IMPORTED_MODULE_3__.assertNever)(checked);\n    }\n}\n//# sourceMappingURL=draw-checkbox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL3JlbmRlci9kcmF3LWNoZWNrYm94LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlEO0FBQ3VEO0FBQy9EO0FBQzBCO0FBQ3BFO0FBQ1A7QUFDQTtBQUNBLHdCQUF3QixnRUFBYztBQUN0QztBQUNBLGlCQUFpQix3RUFBc0I7QUFDdkMsZUFBZSw2REFBVztBQUMxQixvQkFBb0IsaUVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4REFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw2REFBWTtBQUN6QjtBQUNBO0FBQ0EsWUFBWSw4REFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxRUFBb0I7QUFDakM7QUFDQSxZQUFZLDhEQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBVztBQUN2QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQvcmVuZGVyL2RyYXctY2hlY2tib3guanM/ZmJmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnROZXZlciB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vc3VwcG9ydC5qc1wiO1xuaW1wb3J0IHsgZ2V0U3F1YXJlV2lkdGgsIGdldFNxdWFyZVhQb3NGcm9tQWxpZ24sIGdldFNxdWFyZUJCLCBwb2ludElzV2l0aGluQkIgfSBmcm9tIFwiLi4vLi4vLi4vY29tbW9uL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyByb3VuZGVkUmVjdCB9IGZyb20gXCIuL2RhdGEtZ3JpZC1saWIuanNcIjtcbmltcG9ydCB7IEJvb2xlYW5FbXB0eSwgQm9vbGVhbkluZGV0ZXJtaW5hdGUgfSBmcm9tIFwiLi4vZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZHJhd0NoZWNrYm94KGN0eCwgdGhlbWUsIGNoZWNrZWQsIHgsIHksIHdpZHRoLCBoZWlnaHQsIGhpZ2hsaWdodGVkLCBob3ZlclggPSAtMjAsIGhvdmVyWSA9IC0yMCwgbWF4U2l6ZSA9IDMyLCBhbGlnbm1lbnQgPSBcImNlbnRlclwiLCBzdHlsZSA9IFwic3F1YXJlXCIpIHtcbiAgICBjb25zdCBjZW50ZXJZID0gTWF0aC5mbG9vcih5ICsgaGVpZ2h0IC8gMik7XG4gICAgY29uc3QgcmVjdEJvcmRSYWRpdXMgPSBzdHlsZSA9PT0gXCJjaXJjbGVcIiA/IDEwMDAwIDogdGhlbWUucm91bmRpbmdSYWRpdXMgPz8gNDtcbiAgICBsZXQgY2hlY2tCb3hXaWR0aCA9IGdldFNxdWFyZVdpZHRoKG1heFNpemUsIGhlaWdodCwgdGhlbWUuY2VsbFZlcnRpY2FsUGFkZGluZyk7XG4gICAgbGV0IGNoZWNrQm94SGFsZldpZHRoID0gY2hlY2tCb3hXaWR0aCAvIDI7XG4gICAgY29uc3QgcG9zWCA9IGdldFNxdWFyZVhQb3NGcm9tQWxpZ24oYWxpZ25tZW50LCB4LCB3aWR0aCwgdGhlbWUuY2VsbEhvcml6b250YWxQYWRkaW5nLCBjaGVja0JveFdpZHRoKTtcbiAgICBjb25zdCBiYiA9IGdldFNxdWFyZUJCKHBvc1gsIGNlbnRlclksIGNoZWNrQm94V2lkdGgpO1xuICAgIGNvbnN0IGhvdmVyZWQgPSBwb2ludElzV2l0aGluQkIoeCArIGhvdmVyWCwgeSArIGhvdmVyWSwgYmIpO1xuICAgIHN3aXRjaCAoY2hlY2tlZCkge1xuICAgICAgICBjYXNlIHRydWU6IHtcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIHJvdW5kZWRSZWN0KGN0eCwgcG9zWCAtIGNoZWNrQm94V2lkdGggLyAyLCBjZW50ZXJZIC0gY2hlY2tCb3hXaWR0aCAvIDIsIGNoZWNrQm94V2lkdGgsIGNoZWNrQm94V2lkdGgsIHJlY3RCb3JkUmFkaXVzKTtcbiAgICAgICAgICAgIGlmIChzdHlsZSA9PT0gXCJjaXJjbGVcIikge1xuICAgICAgICAgICAgICAgIGNoZWNrQm94SGFsZldpZHRoICo9IDAuODtcbiAgICAgICAgICAgICAgICBjaGVja0JveFdpZHRoICo9IDAuODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSBoaWdobGlnaHRlZCA/IHRoZW1lLmFjY2VudENvbG9yIDogdGhlbWUudGV4dE1lZGl1bTtcbiAgICAgICAgICAgIGN0eC5maWxsKCk7XG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICBjdHgubW92ZVRvKHBvc1ggLSBjaGVja0JveEhhbGZXaWR0aCArIGNoZWNrQm94V2lkdGggLyA0LjIzLCBjZW50ZXJZIC0gY2hlY2tCb3hIYWxmV2lkdGggKyBjaGVja0JveFdpZHRoIC8gMS45Nyk7XG4gICAgICAgICAgICBjdHgubGluZVRvKHBvc1ggLSBjaGVja0JveEhhbGZXaWR0aCArIGNoZWNrQm94V2lkdGggLyAyLjQyLCBjZW50ZXJZIC0gY2hlY2tCb3hIYWxmV2lkdGggKyBjaGVja0JveFdpZHRoIC8gMS40NCk7XG4gICAgICAgICAgICBjdHgubGluZVRvKHBvc1ggLSBjaGVja0JveEhhbGZXaWR0aCArIGNoZWNrQm94V2lkdGggLyAxLjI5LCBjZW50ZXJZIC0gY2hlY2tCb3hIYWxmV2lkdGggKyBjaGVja0JveFdpZHRoIC8gMy4yNSk7XG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGVtZS5iZ0NlbGw7XG4gICAgICAgICAgICBjdHgubGluZUpvaW4gPSBcInJvdW5kXCI7XG4gICAgICAgICAgICBjdHgubGluZUNhcCA9IFwicm91bmRcIjtcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxLjk7XG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIEJvb2xlYW5FbXB0eTpcbiAgICAgICAgY2FzZSBmYWxzZToge1xuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgcm91bmRlZFJlY3QoY3R4LCBwb3NYIC0gY2hlY2tCb3hXaWR0aCAvIDIgKyAwLjUsIGNlbnRlclkgLSBjaGVja0JveFdpZHRoIC8gMiArIDAuNSwgY2hlY2tCb3hXaWR0aCAtIDEsIGNoZWNrQm94V2lkdGggLSAxLCByZWN0Qm9yZFJhZGl1cyk7XG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMTtcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGhvdmVyZWQgPyB0aGVtZS50ZXh0RGFyayA6IHRoZW1lLnRleHRNZWRpdW07XG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIEJvb2xlYW5JbmRldGVybWluYXRlOiB7XG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICByb3VuZGVkUmVjdChjdHgsIHBvc1ggLSBjaGVja0JveFdpZHRoIC8gMiwgY2VudGVyWSAtIGNoZWNrQm94V2lkdGggLyAyLCBjaGVja0JveFdpZHRoLCBjaGVja0JveFdpZHRoLCByZWN0Qm9yZFJhZGl1cyk7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gaG92ZXJlZCA/IHRoZW1lLnRleHRNZWRpdW0gOiB0aGVtZS50ZXh0TGlnaHQ7XG4gICAgICAgICAgICBjdHguZmlsbCgpO1xuICAgICAgICAgICAgaWYgKHN0eWxlID09PSBcImNpcmNsZVwiKSB7XG4gICAgICAgICAgICAgICAgY2hlY2tCb3hIYWxmV2lkdGggKj0gMC44O1xuICAgICAgICAgICAgICAgIGNoZWNrQm94V2lkdGggKj0gMC44O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgY3R4Lm1vdmVUbyhwb3NYIC0gY2hlY2tCb3hXaWR0aCAvIDMsIGNlbnRlclkpO1xuICAgICAgICAgICAgY3R4LmxpbmVUbyhwb3NYICsgY2hlY2tCb3hXaWR0aCAvIDMsIGNlbnRlclkpO1xuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gdGhlbWUuYmdDZWxsO1xuICAgICAgICAgICAgY3R4LmxpbmVDYXAgPSBcInJvdW5kXCI7XG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMS45O1xuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGFzc2VydE5ldmVyKGNoZWNrZWQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYXctY2hlY2tib3guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/render/draw-checkbox.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/sprites.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/sprites.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sprites: () => (/* binding */ sprites)\n/* harmony export */ });\nconst iconHead = `<svg width=\"20\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">`;\nconst headerRowID = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}<rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/><path d=\"M15.75 4h-1.5a.25.25 0 0 0-.177.074L9.308 8.838a3.75 3.75 0 1 0 1.854 1.854l1.155-1.157.967.322a.5.5 0 0 0 .65-.55l-.18-1.208.363-.363.727.331a.5.5 0 0 0 .69-.59l-.254-.904.647-.647A.25.25 0 0 0 16 5.75v-1.5a.25.25 0 0 0-.25-.25zM7.5 13.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0z\" fill=\"${fg}\"/></svg>`;\n};\nconst headerCode = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}<rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"4\" fill=\"${bg}\"/><path d=\"m12.223 13.314 3.052-2.826a.65.65 0 0 0 0-.984l-3.052-2.822c-.27-.25-.634-.242-.865.022-.232.263-.206.636.056.882l2.601 2.41-2.601 2.41c-.262.245-.288.619-.056.882.231.263.595.277.865.026Zm-4.444.005c.266.25.634.241.866-.027.231-.263.206-.636-.06-.882L5.983 10l2.602-2.405c.266-.25.291-.62.06-.887-.232-.263-.596-.272-.866-.022L4.723 9.51a.653.653 0 0 0 0 .983l3.056 2.827Z\" fill=\"${fg}\"/></svg>`;\n};\nconst headerNumber = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M6.52 12.78H5.51V8.74l-1.33.47v-.87l2.29-.83h.05v5.27zm5.2 0H8.15v-.69l1.7-1.83a6.38 6.38 0 0 0 .34-.4c.09-.11.16-.22.22-.32s.1-.19.12-.27a.9.9 0 0 0 0-.56.63.63 0 0 0-.15-.23.58.58 0 0 0-.22-.15.75.75 0 0 0-.29-.05c-.27 0-.48.08-.62.23a.95.95 0 0 0-.2.65H8.03c0-.24.04-.46.13-.67a1.67 1.67 0 0 1 .97-.91c.23-.1.49-.14.77-.14.26 0 .5.04.7.11.21.08.38.18.52.32.14.13.25.3.32.48a1.74 1.74 0 0 1 .03 1.13 2.05 2.05 0 0 1-.24.47 4.16 4.16 0 0 1-.35.47l-.47.5-1 1.05h2.32v.8zm1.8-3.08h.55c.28 0 .48-.06.61-.2a.76.76 0 0 0 .2-.55.8.8 0 0 0-.05-.28.56.56 0 0 0-.13-.22.6.6 0 0 0-.23-.15.93.93 0 0 0-.32-.05.92.92 0 0 0-.29.05.72.72 0 0 0-.23.12.57.57 0 0 0-.21.46H12.4a1.3 1.3 0 0 1 .5-1.04c.15-.13.33-.23.54-.3a2.48 2.48 0 0 1 1.4 0c.2.06.4.15.55.28.15.13.27.28.36.47.08.19.13.4.13.65a1.15 1.15 0 0 1-.2.65 1.36 1.36 0 0 1-.58.49c.15.05.28.12.38.2a1.14 1.14 0 0 1 .43.62c.03.13.05.26.05.4 0 .25-.05.47-.14.66a1.42 1.42 0 0 1-.4.49c-.16.13-.35.23-.58.3a2.51 2.51 0 0 1-.73.1c-.22 0-.44-.03-.65-.09a1.8 1.8 0 0 1-.57-.28 1.43 1.43 0 0 1-.4-.47 1.41 1.41 0 0 1-.15-.66h1a.66.66 0 0 0 .22.5.87.87 0 0 0 .58.2c.25 0 .45-.07.6-.2a.71.71 0 0 0 .21-.56.97.97 0 0 0-.06-.36.61.61 0 0 0-.18-.25.74.74 0 0 0-.28-.15 1.33 1.33 0 0 0-.37-.04h-.55V9.7z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerString = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M8.182 12.4h3.636l.655 1.6H14l-3.454-8H9.455L6 14h1.527l.655-1.6zM10 7.44l1.36 3.651H8.64L10 7.441z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerBoolean = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path\n        d=\"M16.2222 2H3.77778C2.8 2 2 2.8 2 3.77778V16.2222C2 17.2 2.8 18 3.77778 18H16.2222C17.2 18 17.9911 17.2 17.9911 16.2222L18 3.77778C18 2.8 17.2 2 16.2222 2Z\"\n        fill=\"${bg}\"\n    />\n    <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M7.66667 6.66669C5.73368 6.66669 4.16667 8.15907 4.16667 10C4.16667 11.841 5.73368 13.3334 7.66667 13.3334H12.3333C14.2663 13.3334 15.8333 11.841 15.8333 10C15.8333 8.15907 14.2663 6.66669 12.3333 6.66669H7.66667ZM12.5 12.5C13.8807 12.5 15 11.3807 15 10C15 8.61931 13.8807 7.50002 12.5 7.50002C11.1193 7.50002 10 8.61931 10 10C10 11.3807 11.1193 12.5 12.5 12.5Z\"\n        fill=\"${fg}\"\n    />\n</svg>`;\n};\nconst headerUri = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n<path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.29 4.947a3.368 3.368 0 014.723.04 3.375 3.375 0 01.041 4.729l-.009.009-1.596 1.597a3.367 3.367 0 01-5.081-.364.71.71 0 011.136-.85 1.95 1.95 0 002.942.21l1.591-1.593a1.954 1.954 0 00-.027-2.733 1.95 1.95 0 00-2.732-.027l-.91.907a.709.709 0 11-1.001-1.007l.915-.911.007-.007z\" fill=\"${fg}\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.55 8.678a3.368 3.368 0 015.082.364.71.71 0 01-1.136.85 1.95 1.95 0 00-2.942-.21l-1.591 1.593a1.954 1.954 0 00.027 2.733 1.95 1.95 0 002.73.028l.906-.906a.709.709 0 111.003 1.004l-.91.91-.008.01a3.368 3.368 0 01-4.724-.042 3.375 3.375 0 01-.041-4.728l.009-.009L6.55 8.678z\" fill=\"${fg}\"/>\n</svg>\n  `;\n};\nconst renameIcon = (props) => {\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path stroke=\"${bg}\" stroke-width=\"2\" d=\"M12 3v14\"/>\n    <path stroke=\"${bg}\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M10 4h4m-4 12h4\"/>\n    <path d=\"M11 14h4a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3h-4v2h4a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-4v2ZM9.5 8H5a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h4.5v2H5a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h4.5v2Z\" fill=\"${bg}\"/>\n  </svg>\n`;\n};\nconst headerAudioUri = headerUri;\nconst headerVideoUri = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 13.138a.5.5 0 00.748.434l5.492-3.138a.5.5 0 000-.868L7.748 6.427A.5.5 0 007 6.862v6.276z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerEmoji = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M10 5a5 5 0 1 0 0 10 5 5 0 0 0 0-10zm0 9.17A4.17 4.17 0 0 1 5.83 10 4.17 4.17 0 0 1 10 5.83 4.17 4.17 0 0 1 14.17 10 4.17 4.17 0 0 1 10 14.17z\" fill=\"${fg}\"/>\n    <path d=\"M8.33 8.21a.83.83 0 1 0-.03 1.67.83.83 0 0 0 .03-1.67zm3.34 0a.83.83 0 1 0-.04 1.67.83.83 0 0 0 .04-1.67z\" fill=\"${fg}\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.53 13.9a2.82 2.82 0 0 1-5.06 0l.77-.38a1.97 1.97 0 0 0 3.52 0l.77.39z\" fill=\"${fg}\"/>\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 4a6 6 0 1 0 0 12 6 6 0 0 0 0-12zm0 11a5 5 0 1 1 .01-10.01A5 5 0 0 1 10 15z\" fill=\"${fg}\"/>\n    <path d=\"M8 7.86a1 1 0 1 0-.04 2 1 1 0 0 0 .04-2zm4 0a1 1 0 1 0-.04 2 1 1 0 0 0 .04-2z\" fill=\"${fg}\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.53 11.9a2.82 2.82 0 0 1-5.06 0l.77-.38a1.97 1.97 0 0 0 3.52 0l.77.39z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerImage = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path opacity=\".5\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.499 10.801a.5.5 0 01.835 0l2.698 4.098a.5.5 0 01-.418.775H10.22a.5.5 0 01-.417-.775l2.697-4.098z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.07 8.934a.5.5 0 01.824 0l4.08 5.958a.5.5 0 01-.412.782h-8.16a.5.5 0 01-.413-.782l4.08-5.958zM13.75 8.333a2.083 2.083 0 100-4.166 2.083 2.083 0 000 4.166z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerPhone = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path fill=\"${fg}\" d=\"M3 3h14v14H3z\"/>\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2zm-7.24 9.78h1.23c.15 0 .27.06.36.18l.98 1.28a.43.43 0 0 1-.05.58l-1.2 1.21a.45.45 0 0 1-.6.04A6.72 6.72 0 0 1 7.33 10c0-.61.1-1.2.25-1.78a6.68 6.68 0 0 1 2.12-3.3.44.44 0 0 1 .6.04l1.2 1.2c.16.17.18.42.05.59l-.98 1.29a.43.43 0 0 1-.36.17H8.98A5.38 5.38 0 0 0 8.67 10c0 .62.11 1.23.3 1.79z\" fill=\"${bg}\"/>\n  </svg>`;\n};\nconst headerMarkdown = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"m13.49 13.15-2.32-3.27h1.4V7h1.86v2.88h1.4l-2.34 3.27zM11 13H9v-3l-1.5 1.92L6 10v3H4V7h2l1.5 2L9 7h2v6z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerDate = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M14.8 4.182h-.6V3H13v1.182H7V3H5.8v1.182h-.6c-.66 0-1.2.532-1.2 1.182v9.454C4 15.468 4.54 16 5.2 16h9.6c.66 0 1.2-.532 1.2-1.182V5.364c0-.65-.54-1.182-1.2-1.182zm0 10.636H5.2V7.136h9.6v7.682z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerTime = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 4a6 6 0 0 0-6 6 6 6 0 0 0 6 6 6 6 0 0 0 6-6 6 6 0 0 0-6-6zm0 10.8A4.8 4.8 0 0 1 5.2 10a4.8 4.8 0 1 1 4.8 4.8z\" fill=\"${fg}\"/>\n    <path d=\"M10 7H9v3.93L12.5 13l.5-.8-3-1.76V7z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerEmail = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 8.643a1.357 1.357 0 100 2.714 1.357 1.357 0 000-2.714zM7.357 10a2.643 2.643 0 115.286 0 2.643 2.643 0 01-5.286 0z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.589 4.898A5.643 5.643 0 0115.643 10v.5a2.143 2.143 0 01-4.286 0V8a.643.643 0 011.286 0v2.5a.857.857 0 001.714 0V10a4.357 4.357 0 10-1.708 3.46.643.643 0 01.782 1.02 5.643 5.643 0 11-5.842-9.582z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerReference = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"8\" width=\"10\" height=\"8\" rx=\"2\" fill=\"${bg}\"/>\n    <rect x=\"8\" y=\"4\" width=\"10\" height=\"8\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M10.68 7.73V6l2.97 3.02-2.97 3.02v-1.77c-2.13 0-3.62.7-4.68 2.2.43-2.15 1.7-4.31 4.68-4.74z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerIfThenElse = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path fill=\"${fg}\" d=\"M4 3h12v14H4z\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.6 2A1.6 1.6 0 002 3.6v12.8A1.6 1.6 0 003.6 18h12.8a1.6 1.6 0 001.6-1.6V3.6A1.6 1.6 0 0016.4 2H3.6zm11.3 10.8a.7.7 0 01.7.7v1.4a.7.7 0 01-.7.7h-1.4a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.6-.693.117.117 0 00.1-.115V10.35a.117.117 0 00-.117-.116h-2.8a.117.117 0 00-.117.116v2.333c0 .064.053.117.117.117h.117a.7.7 0 01.7.7v1.4a.7.7 0 01-.7.7H9.3a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.7-.7h.117a.117.117 0 00.117-.117V10.35a.117.117 0 00-.117-.117h-2.8a.117.117 0 00-.117.117v2.342c0 .058.042.106.1.115a.7.7 0 01.6.693v1.4a.7.7 0 01-.7.7H5.1a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.7-.7h.35a.116.116 0 00.116-.117v-2.45c0-.515.418-.933.934-.933h2.917a.117.117 0 00.117-.117V6.85a.117.117 0 00-.117-.116h-2.45a.7.7 0 01-.7-.7V5.1a.7.7 0 01.7-.7h6.067a.7.7 0 01.7.7v.934a.7.7 0 01-.7.7h-2.45a.117.117 0 00-.118.116v2.333c0 .064.053.117.117.117H13.5c.516 0 .934.418.934.934v2.45c0 .063.052.116.116.116h.35z\" fill=\"${bg}\"/>\n</svg>`;\n};\nconst headerSingleValue = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M9.98 13.33c.45 0 .74-.3.73-.75l-.01-.1-.16-1.67 1.45 1.05a.81.81 0 0 0 .5.18c.37 0 .72-.32.72-.76 0-.3-.17-.54-.49-.68l-1.63-.77 1.63-.77c.32-.14.49-.37.49-.67 0-.45-.34-.76-.71-.76a.81.81 0 0 0-.5.18l-1.47 1.03.16-1.74.01-.08c.01-.46-.27-.76-.72-.76-.46 0-.76.32-.75.76l.01.08.16 1.74-1.47-1.03a.77.77 0 0 0-.5-.18.74.74 0 0 0-.72.76c0 .3.17.53.49.67l1.63.77-1.62.77c-.32.14-.5.37-.5.68 0 .44.35.75.72.75a.78.78 0 0 0 .5-.17L9.4 10.8l-.16 1.68v.09c-.02.44.28.75.74.75z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerLookup = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M8 5.83H5.83a.83.83 0 0 0 0 1.67h1.69A4.55 4.55 0 0 1 8 5.83zm-.33 3.34H5.83a.83.83 0 0 0 0 1.66h2.72a4.57 4.57 0 0 1-.88-1.66zM5.83 12.5a.83.83 0 0 0 0 1.67h7.5a.83.83 0 1 0 0-1.67h-7.5zm8.8-2.9a3.02 3.02 0 0 0 .46-1.6c0-1.66-1.32-3-2.94-3C10.52 5 9.2 6.34 9.2 8s1.31 3 2.93 3c.58 0 1.11-.17 1.56-.47l2.04 2.08.93-.94-2.04-2.08zm-2.48.07c-.9 0-1.63-.75-1.63-1.67s.73-1.67 1.63-1.67c.9 0 1.63.75 1.63 1.67s-.73 1.67-1.63 1.67z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerTextTemplate = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path d=\"M7.676 4.726V3l2.976 3.021-2.976 3.022v-1.77c-2.125 0-3.613.69-4.676 2.201.425-2.158 1.7-4.316 4.676-4.748zM10.182 14.4h3.636l.655 1.6H16l-3.454-8h-1.091L8 16h1.527l.655-1.6zM12 9.44l1.36 3.65h-2.72L12 9.44z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerMath = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.167 5.417a.833.833 0 100 1.666h4.166a.833.833 0 100-1.666H4.167z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.083 4.167a.833.833 0 10-1.666 0v4.166a.833.833 0 101.666 0V4.167zM11.667 5.417a.833.833 0 100 1.666h4.166a.833.833 0 100-1.666h-4.166zM5.367 11.688a.833.833 0 00-1.179 1.179l2.947 2.946a.833.833 0 001.178-1.178l-2.946-2.947z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.313 12.867a.833.833 0 10-1.178-1.179l-2.947 2.947a.833.833 0 101.179 1.178l2.946-2.946z\" fill=\"${fg}\"/>\n  <path d=\"M10.833 12.5c0-.46.373-.833.834-.833h4.166a.833.833 0 110 1.666h-4.166a.833.833 0 01-.834-.833zM10.833 15c0-.46.373-.833.834-.833h4.166a.833.833 0 110 1.666h-4.166a.833.833 0 01-.834-.833z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerRollup = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 8.84a1.16 1.16 0 1 0 0 2.32 1.16 1.16 0 0 0 0-2.32zm3.02 3.61a3.92 3.92 0 0 0 .78-3.28.49.49 0 1 0-.95.2c.19.87-.02 1.78-.58 2.47a2.92 2.92 0 1 1-4.13-4.08 2.94 2.94 0 0 1 2.43-.62.49.49 0 1 0 .17-.96 3.89 3.89 0 1 0 2.28 6.27zM10 4.17a5.84 5.84 0 0 0-5.44 7.93.49.49 0 1 0 .9-.35 4.86 4.86 0 1 1 2.5 2.67.49.49 0 1 0-.4.88c.76.35 1.6.54 2.44.53a5.83 5.83 0 0 0 0-11.66zm3.02 3.5a.7.7 0 1 0-1.4 0 .7.7 0 0 0 1.4 0zm-6.97 5.35a.7.7 0 1 1 0 1.4.7.7 0 0 1 0-1.4z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerJoinStrings = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path d=\"M12.4 13.565c1.865-.545 3.645-2.083 3.645-4.396 0-1.514-.787-2.604-2.071-2.604C12.69 6.565 12 7.63 12 8.939c1.114.072 1.865.726 1.865 1.683 0 .933-.8 1.647-1.84 2.023l.375.92zM4 5h6v2H4zM4 9h5v2H4zM4 13h4v2H4z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerSplitString = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M12.4 13.56c1.86-.54 3.65-2.08 3.65-4.4 0-1.5-.8-2.6-2.08-2.6S12 7.64 12 8.95c1.11.07 1.86.73 1.86 1.68 0 .94-.8 1.65-1.83 2.03l.37.91zM4 5h6v2H4zm0 4h5v2H4zm0 4h4v2H4z\" fill=\"${fg}\"/>\n  </svg>`;\n};\nconst headerGeoDistance = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M10 7a1 1 0 100-2v2zm0 6a1 1 0 100 2v-2zm0-8H7v2h3V5zm-3 6h5V9H7v2zm5 2h-2v2h2v-2zm1-1a1 1 0 01-1 1v2a3 3 0 003-3h-2zm-1-1a1 1 0 011 1h2a3 3 0 00-3-3v2zM4 8a3 3 0 003 3V9a1 1 0 01-1-1H4zm3-3a3 3 0 00-3 3h2a1 1 0 011-1V5z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.856 12.014a.5.5 0 00-.712.702L5.409 14l-1.265 1.284a.5.5 0 00.712.702l1.255-1.274 1.255 1.274a.5.5 0 00.712-.702L6.813 14l1.265-1.284a.5.5 0 00-.712-.702L6.11 13.288l-1.255-1.274zM12.856 4.014a.5.5 0 00-.712.702L13.409 6l-1.265 1.284a.5.5 0 10.712.702l1.255-1.274 1.255 1.274a.5.5 0 10.712-.702L14.813 6l1.265-1.284a.5.5 0 00-.712-.702L14.11 5.288l-1.255-1.274z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst headerArray = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.25 7.25a.75.75 0 000-1.5h-6.5a.75.75 0 100 1.5h6.5zM15 10a.75.75 0 01-.75.75h-6.5a.75.75 0 010-1.5h6.5A.75.75 0 0115 10zm-.75 4.25a.75.75 0 000-1.5h-6.5a.75.75 0 000 1.5h6.5zm-8.987-7a.75.75 0 100-1.5.75.75 0 000 1.5zm.75 2.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 4.25a.75.75 0 100-1.5.75.75 0 000 1.5z\" fill=\"${fg}\"/>\n</svg>`;\n};\nconst rowOwnerOverlay = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    <svg width=\"18\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 15v1h14v-2.5c0-.87-.44-1.55-.98-2.04a6.19 6.19 0 0 0-1.9-1.14 12.1 12.1 0 0 0-2.48-.67A4 4 0 1 0 5 6a4 4 0 0 0 2.36 3.65c-.82.13-1.7.36-2.48.67-.69.28-1.37.65-1.9 1.13A2.8 2.8 0 0 0 2 13.5V15z\" fill=\"${bg}\" stroke=\"${fg}\" stroke-width=\"2\"/>\n  </svg>`;\n};\nconst protectedColumnOverlay = (props) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    <svg width=\"18\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12.43 6.04v-.18a3.86 3.86 0 0 0-7.72 0v.18A2.15 2.15 0 0 0 3 8.14v5.72C3 15.04 3.96 16 5.14 16H12c1.18 0 2.14-.96 2.14-2.14V8.14c0-1.03-.73-1.9-1.71-2.1zM7.86 6v-.14a.71.71 0 1 1 1.43 0V6H7.86z\" fill=\"${bg}\" stroke=\"${fg}\" stroke-width=\"2\"/>\n  </svg>\n`;\n};\nconst sprites = {\n    headerRowID,\n    headerNumber,\n    headerCode,\n    headerString,\n    headerBoolean,\n    headerAudioUri,\n    headerVideoUri,\n    headerEmoji,\n    headerImage,\n    headerUri,\n    headerPhone,\n    headerMarkdown,\n    headerDate,\n    headerTime,\n    headerEmail,\n    headerReference,\n    headerIfThenElse,\n    headerSingleValue,\n    headerLookup,\n    headerTextTemplate,\n    headerMath,\n    headerRollup,\n    headerJoinStrings,\n    headerSplitString,\n    headerGeoDistance,\n    headerArray,\n    rowOwnerOverlay,\n    protectedColumnOverlay,\n    renameIcon,\n};\n//# sourceMappingURL=sprites.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/sprites.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-animation-queue.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-animation-queue.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAnimationQueue: () => (/* binding */ useAnimationQueue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _cell_set_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cell-set.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/cell-set.js\");\n/* harmony import */ var _common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/render-state-provider.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/render-state-provider.js\");\n\n\n\n\nfunction useAnimationQueue(draw) {\n    const queue = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const seq = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const drawRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(draw);\n    drawRef.current = draw;\n    const loop = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        const requeue = () => window.requestAnimationFrame(fn);\n        const fn = () => {\n            const toDraw = queue.current.map(_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.unpackNumberToColRow);\n            queue.current = [];\n            drawRef.current(new _cell_set_js__WEBPACK_IMPORTED_MODULE_2__.CellSet(toDraw));\n            if (queue.current.length > 0) {\n                seq.current++;\n            }\n            else {\n                seq.current = 0;\n            }\n        };\n        window.requestAnimationFrame(seq.current > 600 ? requeue : fn);\n    }, []);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((item) => {\n        if (queue.current.length === 0)\n            loop();\n        const packed = (0,_common_render_state_provider_js__WEBPACK_IMPORTED_MODULE_1__.packColRowToNumber)(item[0], item[1]);\n        if (queue.current.includes(packed))\n            return;\n        queue.current.push(packed);\n    }, [loop]);\n}\n//# sourceMappingURL=use-animation-queue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL3VzZS1hbmltYXRpb24tcXVldWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNPO0FBQ0U7QUFDeUQ7QUFDMUY7QUFDUCxrQkFBa0IseUNBQVk7QUFDOUIsZ0JBQWdCLHlDQUFZO0FBQzVCLG9CQUFvQix5Q0FBWTtBQUNoQztBQUNBLGlCQUFpQiw4Q0FBaUI7QUFDbEM7QUFDQTtBQUNBLDZDQUE2QyxrRkFBb0I7QUFDakU7QUFDQSxnQ0FBZ0MsaURBQU87QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLDhDQUFpQjtBQUM1QjtBQUNBO0FBQ0EsdUJBQXVCLG9GQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL2RhdGEtZ3JpZC91c2UtYW5pbWF0aW9uLXF1ZXVlLmpzPzBjYzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge30gZnJvbSBcIi4vZGF0YS1ncmlkLXR5cGVzLmpzXCI7XG5pbXBvcnQgeyBDZWxsU2V0IH0gZnJvbSBcIi4vY2VsbC1zZXQuanNcIjtcbmltcG9ydCB7IHBhY2tDb2xSb3dUb051bWJlciwgdW5wYWNrTnVtYmVyVG9Db2xSb3cgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3JlbmRlci1zdGF0ZS1wcm92aWRlci5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUFuaW1hdGlvblF1ZXVlKGRyYXcpIHtcbiAgICBjb25zdCBxdWV1ZSA9IFJlYWN0LnVzZVJlZihbXSk7XG4gICAgY29uc3Qgc2VxID0gUmVhY3QudXNlUmVmKDApO1xuICAgIGNvbnN0IGRyYXdSZWYgPSBSZWFjdC51c2VSZWYoZHJhdyk7XG4gICAgZHJhd1JlZi5jdXJyZW50ID0gZHJhdztcbiAgICBjb25zdCBsb29wID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBjb25zdCByZXF1ZXVlID0gKCkgPT4gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmbik7XG4gICAgICAgIGNvbnN0IGZuID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdG9EcmF3ID0gcXVldWUuY3VycmVudC5tYXAodW5wYWNrTnVtYmVyVG9Db2xSb3cpO1xuICAgICAgICAgICAgcXVldWUuY3VycmVudCA9IFtdO1xuICAgICAgICAgICAgZHJhd1JlZi5jdXJyZW50KG5ldyBDZWxsU2V0KHRvRHJhdykpO1xuICAgICAgICAgICAgaWYgKHF1ZXVlLmN1cnJlbnQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHNlcS5jdXJyZW50Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXEuY3VycmVudCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2VxLmN1cnJlbnQgPiA2MDAgPyByZXF1ZXVlIDogZm4pO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gUmVhY3QudXNlQ2FsbGJhY2soKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKHF1ZXVlLmN1cnJlbnQubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgbG9vcCgpO1xuICAgICAgICBjb25zdCBwYWNrZWQgPSBwYWNrQ29sUm93VG9OdW1iZXIoaXRlbVswXSwgaXRlbVsxXSk7XG4gICAgICAgIGlmIChxdWV1ZS5jdXJyZW50LmluY2x1ZGVzKHBhY2tlZCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHF1ZXVlLmN1cnJlbnQucHVzaChwYWNrZWQpO1xuICAgIH0sIFtsb29wXSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2UtYW5pbWF0aW9uLXF1ZXVlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-animation-queue.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-selection-behavior.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-selection-behavior.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSelectionBehavior: () => (/* binding */ useSelectionBehavior)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grid-types.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/data-grid-types.js\");\n\n\nfunction useSelectionBehavior(gridSelection, setGridSelection, rangeBehavior, columnBehavior, rowBehavior, rangeSelect) {\n    // if append is true, the current range will be added to the rangeStack\n    const setCurrent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((value, expand, append, trigger) => {\n        if ((rangeSelect === \"cell\" || rangeSelect === \"multi-cell\") && value !== undefined) {\n            value = {\n                ...value,\n                range: {\n                    x: value.cell[0],\n                    y: value.cell[1],\n                    width: 1,\n                    height: 1,\n                },\n            };\n        }\n        const rangeMixable = rangeBehavior === \"mixed\" && (append || trigger === \"drag\");\n        const allowColumnCoSelect = columnBehavior === \"mixed\" && rangeMixable;\n        const allowRowCoSelect = rowBehavior === \"mixed\" && rangeMixable;\n        let newVal = {\n            current: value === undefined\n                ? undefined\n                : {\n                    ...value,\n                    rangeStack: trigger === \"drag\" ? gridSelection.current?.rangeStack ?? [] : [],\n                },\n            columns: allowColumnCoSelect ? gridSelection.columns : _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n            rows: allowRowCoSelect ? gridSelection.rows : _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n        };\n        const addLastRange = append && (rangeSelect === \"multi-rect\" || rangeSelect === \"multi-cell\");\n        if (addLastRange && newVal.current !== undefined && gridSelection.current !== undefined) {\n            newVal = {\n                ...newVal,\n                current: {\n                    ...newVal.current,\n                    rangeStack: [...gridSelection.current.rangeStack, gridSelection.current.range],\n                },\n            };\n        }\n        setGridSelection(newVal, expand);\n    }, [columnBehavior, gridSelection, rangeBehavior, rangeSelect, rowBehavior, setGridSelection]);\n    const setSelectedRows = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newRows, append, allowMixed) => {\n        newRows = newRows ?? gridSelection.rows;\n        if (append !== undefined) {\n            newRows = newRows.add(append);\n        }\n        let newVal;\n        if (rowBehavior === \"exclusive\" && newRows.length > 0) {\n            newVal = {\n                current: undefined,\n                columns: _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n                rows: newRows,\n            };\n        }\n        else {\n            const rangeMixed = allowMixed && rangeBehavior === \"mixed\";\n            const columnMixed = allowMixed && columnBehavior === \"mixed\";\n            const current = !rangeMixed ? undefined : gridSelection.current;\n            newVal = {\n                current,\n                columns: columnMixed ? gridSelection.columns : _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n                rows: newRows,\n            };\n        }\n        setGridSelection(newVal, false);\n    }, [columnBehavior, gridSelection, rangeBehavior, rowBehavior, setGridSelection]);\n    const setSelectedColumns = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newCols, append, allowMixed) => {\n        newCols = newCols ?? gridSelection.columns;\n        if (append !== undefined) {\n            newCols = newCols.add(append);\n        }\n        let newVal;\n        if (columnBehavior === \"exclusive\" && newCols.length > 0) {\n            newVal = {\n                current: undefined,\n                rows: _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n                columns: newCols,\n            };\n        }\n        else {\n            const rangeMixed = allowMixed && rangeBehavior === \"mixed\";\n            const rowMixed = allowMixed && rowBehavior === \"mixed\";\n            const current = !rangeMixed ? undefined : gridSelection.current;\n            newVal = {\n                current,\n                rows: rowMixed ? gridSelection.rows : _data_grid_types_js__WEBPACK_IMPORTED_MODULE_1__.CompactSelection.empty(),\n                columns: newCols,\n            };\n        }\n        setGridSelection(newVal, false);\n    }, [columnBehavior, gridSelection, rangeBehavior, rowBehavior, setGridSelection]);\n    return [setCurrent, setSelectedRows, setSelectedColumns];\n}\n//# sourceMappingURL=use-selection-behavior.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZGF0YS1ncmlkL3VzZS1zZWxlY3Rpb24tYmVoYXZpb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQzhCO0FBQ2pEO0FBQ1A7QUFDQSx1QkFBdUIsOENBQWlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixtRUFBbUUsaUVBQWdCO0FBQ25GLDBEQUEwRCxpRUFBZ0I7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNEJBQTRCLDhDQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlFQUFnQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsaUVBQWdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtCQUErQiw4Q0FBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpRUFBZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGlFQUFnQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9kYXRhLWdyaWQvdXNlLXNlbGVjdGlvbi1iZWhhdmlvci5qcz8wNjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENvbXBhY3RTZWxlY3Rpb24gfSBmcm9tIFwiLi9kYXRhLWdyaWQtdHlwZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VTZWxlY3Rpb25CZWhhdmlvcihncmlkU2VsZWN0aW9uLCBzZXRHcmlkU2VsZWN0aW9uLCByYW5nZUJlaGF2aW9yLCBjb2x1bW5CZWhhdmlvciwgcm93QmVoYXZpb3IsIHJhbmdlU2VsZWN0KSB7XG4gICAgLy8gaWYgYXBwZW5kIGlzIHRydWUsIHRoZSBjdXJyZW50IHJhbmdlIHdpbGwgYmUgYWRkZWQgdG8gdGhlIHJhbmdlU3RhY2tcbiAgICBjb25zdCBzZXRDdXJyZW50ID0gUmVhY3QudXNlQ2FsbGJhY2soKHZhbHVlLCBleHBhbmQsIGFwcGVuZCwgdHJpZ2dlcikgPT4ge1xuICAgICAgICBpZiAoKHJhbmdlU2VsZWN0ID09PSBcImNlbGxcIiB8fCByYW5nZVNlbGVjdCA9PT0gXCJtdWx0aS1jZWxsXCIpICYmIHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHZhbHVlID0ge1xuICAgICAgICAgICAgICAgIC4uLnZhbHVlLFxuICAgICAgICAgICAgICAgIHJhbmdlOiB7XG4gICAgICAgICAgICAgICAgICAgIHg6IHZhbHVlLmNlbGxbMF0sXG4gICAgICAgICAgICAgICAgICAgIHk6IHZhbHVlLmNlbGxbMV0sXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmFuZ2VNaXhhYmxlID0gcmFuZ2VCZWhhdmlvciA9PT0gXCJtaXhlZFwiICYmIChhcHBlbmQgfHwgdHJpZ2dlciA9PT0gXCJkcmFnXCIpO1xuICAgICAgICBjb25zdCBhbGxvd0NvbHVtbkNvU2VsZWN0ID0gY29sdW1uQmVoYXZpb3IgPT09IFwibWl4ZWRcIiAmJiByYW5nZU1peGFibGU7XG4gICAgICAgIGNvbnN0IGFsbG93Um93Q29TZWxlY3QgPSByb3dCZWhhdmlvciA9PT0gXCJtaXhlZFwiICYmIHJhbmdlTWl4YWJsZTtcbiAgICAgICAgbGV0IG5ld1ZhbCA9IHtcbiAgICAgICAgICAgIGN1cnJlbnQ6IHZhbHVlID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VTdGFjazogdHJpZ2dlciA9PT0gXCJkcmFnXCIgPyBncmlkU2VsZWN0aW9uLmN1cnJlbnQ/LnJhbmdlU3RhY2sgPz8gW10gOiBbXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29sdW1uczogYWxsb3dDb2x1bW5Db1NlbGVjdCA/IGdyaWRTZWxlY3Rpb24uY29sdW1ucyA6IENvbXBhY3RTZWxlY3Rpb24uZW1wdHkoKSxcbiAgICAgICAgICAgIHJvd3M6IGFsbG93Um93Q29TZWxlY3QgPyBncmlkU2VsZWN0aW9uLnJvd3MgOiBDb21wYWN0U2VsZWN0aW9uLmVtcHR5KCksXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGFkZExhc3RSYW5nZSA9IGFwcGVuZCAmJiAocmFuZ2VTZWxlY3QgPT09IFwibXVsdGktcmVjdFwiIHx8IHJhbmdlU2VsZWN0ID09PSBcIm11bHRpLWNlbGxcIik7XG4gICAgICAgIGlmIChhZGRMYXN0UmFuZ2UgJiYgbmV3VmFsLmN1cnJlbnQgIT09IHVuZGVmaW5lZCAmJiBncmlkU2VsZWN0aW9uLmN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbmV3VmFsID0ge1xuICAgICAgICAgICAgICAgIC4uLm5ld1ZhbCxcbiAgICAgICAgICAgICAgICBjdXJyZW50OiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLm5ld1ZhbC5jdXJyZW50LFxuICAgICAgICAgICAgICAgICAgICByYW5nZVN0YWNrOiBbLi4uZ3JpZFNlbGVjdGlvbi5jdXJyZW50LnJhbmdlU3RhY2ssIGdyaWRTZWxlY3Rpb24uY3VycmVudC5yYW5nZV0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgc2V0R3JpZFNlbGVjdGlvbihuZXdWYWwsIGV4cGFuZCk7XG4gICAgfSwgW2NvbHVtbkJlaGF2aW9yLCBncmlkU2VsZWN0aW9uLCByYW5nZUJlaGF2aW9yLCByYW5nZVNlbGVjdCwgcm93QmVoYXZpb3IsIHNldEdyaWRTZWxlY3Rpb25dKTtcbiAgICBjb25zdCBzZXRTZWxlY3RlZFJvd3MgPSBSZWFjdC51c2VDYWxsYmFjaygobmV3Um93cywgYXBwZW5kLCBhbGxvd01peGVkKSA9PiB7XG4gICAgICAgIG5ld1Jvd3MgPSBuZXdSb3dzID8/IGdyaWRTZWxlY3Rpb24ucm93cztcbiAgICAgICAgaWYgKGFwcGVuZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBuZXdSb3dzID0gbmV3Um93cy5hZGQoYXBwZW5kKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbmV3VmFsO1xuICAgICAgICBpZiAocm93QmVoYXZpb3IgPT09IFwiZXhjbHVzaXZlXCIgJiYgbmV3Um93cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBuZXdWYWwgPSB7XG4gICAgICAgICAgICAgICAgY3VycmVudDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGNvbHVtbnM6IENvbXBhY3RTZWxlY3Rpb24uZW1wdHkoKSxcbiAgICAgICAgICAgICAgICByb3dzOiBuZXdSb3dzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHJhbmdlTWl4ZWQgPSBhbGxvd01peGVkICYmIHJhbmdlQmVoYXZpb3IgPT09IFwibWl4ZWRcIjtcbiAgICAgICAgICAgIGNvbnN0IGNvbHVtbk1peGVkID0gYWxsb3dNaXhlZCAmJiBjb2x1bW5CZWhhdmlvciA9PT0gXCJtaXhlZFwiO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudCA9ICFyYW5nZU1peGVkID8gdW5kZWZpbmVkIDogZ3JpZFNlbGVjdGlvbi5jdXJyZW50O1xuICAgICAgICAgICAgbmV3VmFsID0ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQsXG4gICAgICAgICAgICAgICAgY29sdW1uczogY29sdW1uTWl4ZWQgPyBncmlkU2VsZWN0aW9uLmNvbHVtbnMgOiBDb21wYWN0U2VsZWN0aW9uLmVtcHR5KCksXG4gICAgICAgICAgICAgICAgcm93czogbmV3Um93cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgc2V0R3JpZFNlbGVjdGlvbihuZXdWYWwsIGZhbHNlKTtcbiAgICB9LCBbY29sdW1uQmVoYXZpb3IsIGdyaWRTZWxlY3Rpb24sIHJhbmdlQmVoYXZpb3IsIHJvd0JlaGF2aW9yLCBzZXRHcmlkU2VsZWN0aW9uXSk7XG4gICAgY29uc3Qgc2V0U2VsZWN0ZWRDb2x1bW5zID0gUmVhY3QudXNlQ2FsbGJhY2soKG5ld0NvbHMsIGFwcGVuZCwgYWxsb3dNaXhlZCkgPT4ge1xuICAgICAgICBuZXdDb2xzID0gbmV3Q29scyA/PyBncmlkU2VsZWN0aW9uLmNvbHVtbnM7XG4gICAgICAgIGlmIChhcHBlbmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbmV3Q29scyA9IG5ld0NvbHMuYWRkKGFwcGVuZCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5ld1ZhbDtcbiAgICAgICAgaWYgKGNvbHVtbkJlaGF2aW9yID09PSBcImV4Y2x1c2l2ZVwiICYmIG5ld0NvbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgbmV3VmFsID0ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICByb3dzOiBDb21wYWN0U2VsZWN0aW9uLmVtcHR5KCksXG4gICAgICAgICAgICAgICAgY29sdW1uczogbmV3Q29scyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCByYW5nZU1peGVkID0gYWxsb3dNaXhlZCAmJiByYW5nZUJlaGF2aW9yID09PSBcIm1peGVkXCI7XG4gICAgICAgICAgICBjb25zdCByb3dNaXhlZCA9IGFsbG93TWl4ZWQgJiYgcm93QmVoYXZpb3IgPT09IFwibWl4ZWRcIjtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSAhcmFuZ2VNaXhlZCA/IHVuZGVmaW5lZCA6IGdyaWRTZWxlY3Rpb24uY3VycmVudDtcbiAgICAgICAgICAgIG5ld1ZhbCA9IHtcbiAgICAgICAgICAgICAgICBjdXJyZW50LFxuICAgICAgICAgICAgICAgIHJvd3M6IHJvd01peGVkID8gZ3JpZFNlbGVjdGlvbi5yb3dzIDogQ29tcGFjdFNlbGVjdGlvbi5lbXB0eSgpLFxuICAgICAgICAgICAgICAgIGNvbHVtbnM6IG5ld0NvbHMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHNldEdyaWRTZWxlY3Rpb24obmV3VmFsLCBmYWxzZSk7XG4gICAgfSwgW2NvbHVtbkJlaGF2aW9yLCBncmlkU2VsZWN0aW9uLCByYW5nZUJlaGF2aW9yLCByb3dCZWhhdmlvciwgc2V0R3JpZFNlbGVjdGlvbl0pO1xuICAgIHJldHVybiBbc2V0Q3VycmVudCwgc2V0U2VsZWN0ZWRSb3dzLCBzZXRTZWxlY3RlZENvbHVtbnNdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlLXNlbGVjdGlvbi1iZWhhdmlvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid/use-selection-behavior.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry-style.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry-style.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GrowingEntryStyle: () => (/* binding */ GrowingEntryStyle),\n/* harmony export */   InputBox: () => (/* binding */ InputBox),\n/* harmony export */   ShadowBox: () => (/* binding */ ShadowBox)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst InputBox = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('textarea')({\n  name: \"InputBox\",\n  class: \"gdg-izpuzkl\",\n  propsAsIs: false\n});\nconst ShadowBox = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"ShadowBox\",\n  class: \"gdg-s69h75o\",\n  propsAsIs: false\n});\nconst GrowingEntryStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"GrowingEntryStyle\",\n  class: \"gdg-g1y0xocz\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZ3Jvd2luZy1lbnRyeS9ncm93aW5nLWVudHJ5LXN0eWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDakMsOEJBQThCLHNEQUFNO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSwrQkFBK0Isc0RBQU07QUFDNUM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLHVDQUF1QyxzREFBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZ3Jvd2luZy1lbnRyeS9ncm93aW5nLWVudHJ5LXN0eWxlLmpzPzI5MTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgSW5wdXRCb3ggPSAvKiNfX1BVUkVfXyovc3R5bGVkKCd0ZXh0YXJlYScpKHtcbiAgbmFtZTogXCJJbnB1dEJveFwiLFxuICBjbGFzczogXCJnZGctaXpwdXprbFwiLFxuICBwcm9wc0FzSXM6IGZhbHNlXG59KTtcbmV4cG9ydCBjb25zdCBTaGFkb3dCb3ggPSAvKiNfX1BVUkVfXyovc3R5bGVkKCdkaXYnKSh7XG4gIG5hbWU6IFwiU2hhZG93Qm94XCIsXG4gIGNsYXNzOiBcImdkZy1zNjloNzVvXCIsXG4gIHByb3BzQXNJczogZmFsc2Vcbn0pO1xuZXhwb3J0IGNvbnN0IEdyb3dpbmdFbnRyeVN0eWxlID0gLyojX19QVVJFX18qL3N0eWxlZCgnZGl2Jykoe1xuICBuYW1lOiBcIkdyb3dpbmdFbnRyeVN0eWxlXCIsXG4gIGNsYXNzOiBcImdkZy1nMXkweG9jelwiLFxuICBwcm9wc0FzSXM6IGZhbHNlXG59KTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry-style.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GrowingEntry: () => (/* binding */ GrowingEntry)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _growing_entry_style_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./growing-entry-style.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry-style.js\");\n/* harmony import */ var _common_support_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/support.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/support.js\");\n\n\n\nlet globalInputID = 0;\n/** @category Renderers */\nconst GrowingEntry = (props) => {\n    const { placeholder, value, onKeyDown, highlight, altNewline, validatedSelection, ...rest } = props;\n    const { onChange, className } = rest;\n    const inputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const useText = value ?? \"\";\n    (0,_common_support_js__WEBPACK_IMPORTED_MODULE_1__.assert)(onChange !== undefined, \"GrowingEntry must be a controlled input area\");\n    // 10 million id's aught to be enough for anybody\n    const [inputID] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => \"input-box-\" + (globalInputID = (globalInputID + 1) % 10000000));\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        const ta = inputRef.current;\n        if (ta === null)\n            return;\n        if (ta.disabled)\n            return;\n        const length = useText.toString().length;\n        ta.focus();\n        ta.setSelectionRange(highlight ? 0 : length, length);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n        if (validatedSelection !== undefined) {\n            const range = typeof validatedSelection === \"number\" ? [validatedSelection, null] : validatedSelection;\n            inputRef.current?.setSelectionRange(range[0], range[1]);\n        }\n    }, [validatedSelection]);\n    const onKeyDownInner = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(e => {\n        if (e.key === \"Enter\" && e.shiftKey && altNewline === true) {\n            return;\n        }\n        onKeyDown?.(e);\n    }, [altNewline, onKeyDown]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_growing_entry_style_js__WEBPACK_IMPORTED_MODULE_2__.GrowingEntryStyle, { className: \"gdg-growing-entry\" },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_growing_entry_style_js__WEBPACK_IMPORTED_MODULE_2__.ShadowBox, { className: className }, useText + \"\\n\"),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_growing_entry_style_js__WEBPACK_IMPORTED_MODULE_2__.InputBox, { ...rest, className: (className ?? \"\") + \" gdg-input\", id: inputID, ref: inputRef, onKeyDown: onKeyDownInner, value: useText, placeholder: placeholder, dir: \"auto\" })));\n};\n//# sourceMappingURL=growing-entry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvZ3Jvd2luZy1lbnRyeS9ncm93aW5nLWVudHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFDbUQ7QUFDakM7QUFDakQ7QUFDQTtBQUNPO0FBQ1AsWUFBWSxvRkFBb0Y7QUFDaEcsWUFBWSxzQkFBc0I7QUFDbEMscUJBQXFCLHlDQUFZO0FBQ2pDO0FBQ0EsSUFBSSwwREFBTTtBQUNWO0FBQ0Esc0JBQXNCLDJDQUFjO0FBQ3BDLElBQUksNENBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksa0RBQXFCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDJCQUEyQiw4Q0FBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWSxnREFBbUIsQ0FBQyxzRUFBaUIsSUFBSSxnQ0FBZ0M7QUFDckYsUUFBUSxnREFBbUIsQ0FBQyw4REFBUyxJQUFJLHNCQUFzQjtBQUMvRCxRQUFRLGdEQUFtQixDQUFDLDZEQUFRLElBQUksb0tBQW9LO0FBQzVNO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3Jpem9uLXRhaWx3aW5kLXJlYWN0LW5leHRqcy8uL25vZGVfbW9kdWxlcy9AZ2xpZGVhcHBzL2dsaWRlLWRhdGEtZ3JpZC9kaXN0L2VzbS9pbnRlcm5hbC9ncm93aW5nLWVudHJ5L2dyb3dpbmctZW50cnkuanM/NWUzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEdyb3dpbmdFbnRyeVN0eWxlLCBTaGFkb3dCb3gsIElucHV0Qm94IH0gZnJvbSBcIi4vZ3Jvd2luZy1lbnRyeS1zdHlsZS5qc1wiO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9zdXBwb3J0LmpzXCI7XG5sZXQgZ2xvYmFsSW5wdXRJRCA9IDA7XG4vKiogQGNhdGVnb3J5IFJlbmRlcmVycyAqL1xuZXhwb3J0IGNvbnN0IEdyb3dpbmdFbnRyeSA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgcGxhY2Vob2xkZXIsIHZhbHVlLCBvbktleURvd24sIGhpZ2hsaWdodCwgYWx0TmV3bGluZSwgdmFsaWRhdGVkU2VsZWN0aW9uLCAuLi5yZXN0IH0gPSBwcm9wcztcbiAgICBjb25zdCB7IG9uQ2hhbmdlLCBjbGFzc05hbWUgfSA9IHJlc3Q7XG4gICAgY29uc3QgaW5wdXRSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3QgdXNlVGV4dCA9IHZhbHVlID8/IFwiXCI7XG4gICAgYXNzZXJ0KG9uQ2hhbmdlICE9PSB1bmRlZmluZWQsIFwiR3Jvd2luZ0VudHJ5IG11c3QgYmUgYSBjb250cm9sbGVkIGlucHV0IGFyZWFcIik7XG4gICAgLy8gMTAgbWlsbGlvbiBpZCdzIGF1Z2h0IHRvIGJlIGVub3VnaCBmb3IgYW55Ym9keVxuICAgIGNvbnN0IFtpbnB1dElEXSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IFwiaW5wdXQtYm94LVwiICsgKGdsb2JhbElucHV0SUQgPSAoZ2xvYmFsSW5wdXRJRCArIDEpICUgMTAwMDAwMDApKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB0YSA9IGlucHV0UmVmLmN1cnJlbnQ7XG4gICAgICAgIGlmICh0YSA9PT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKHRhLmRpc2FibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsZW5ndGggPSB1c2VUZXh0LnRvU3RyaW5nKCkubGVuZ3RoO1xuICAgICAgICB0YS5mb2N1cygpO1xuICAgICAgICB0YS5zZXRTZWxlY3Rpb25SYW5nZShoaWdobGlnaHQgPyAwIDogbGVuZ3RoLCBsZW5ndGgpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgfSwgW10pO1xuICAgIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh2YWxpZGF0ZWRTZWxlY3Rpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSB0eXBlb2YgdmFsaWRhdGVkU2VsZWN0aW9uID09PSBcIm51bWJlclwiID8gW3ZhbGlkYXRlZFNlbGVjdGlvbiwgbnVsbF0gOiB2YWxpZGF0ZWRTZWxlY3Rpb247XG4gICAgICAgICAgICBpbnB1dFJlZi5jdXJyZW50Py5zZXRTZWxlY3Rpb25SYW5nZShyYW5nZVswXSwgcmFuZ2VbMV0pO1xuICAgICAgICB9XG4gICAgfSwgW3ZhbGlkYXRlZFNlbGVjdGlvbl0pO1xuICAgIGNvbnN0IG9uS2V5RG93bklubmVyID0gUmVhY3QudXNlQ2FsbGJhY2soZSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiICYmIGUuc2hpZnRLZXkgJiYgYWx0TmV3bGluZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG9uS2V5RG93bj8uKGUpO1xuICAgIH0sIFthbHROZXdsaW5lLCBvbktleURvd25dKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoR3Jvd2luZ0VudHJ5U3R5bGUsIHsgY2xhc3NOYW1lOiBcImdkZy1ncm93aW5nLWVudHJ5XCIgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTaGFkb3dCb3gsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWUgfSwgdXNlVGV4dCArIFwiXFxuXCIpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KElucHV0Qm94LCB7IC4uLnJlc3QsIGNsYXNzTmFtZTogKGNsYXNzTmFtZSA/PyBcIlwiKSArIFwiIGdkZy1pbnB1dFwiLCBpZDogaW5wdXRJRCwgcmVmOiBpbnB1dFJlZiwgb25LZXlEb3duOiBvbktleURvd25Jbm5lciwgdmFsdWU6IHVzZVRleHQsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgZGlyOiBcImF1dG9cIiB9KSkpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyb3dpbmctZW50cnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/growing-entry/growing-entry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/markdown-div.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/markdown-div.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MarkdownDiv)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! marked */ \"(ssr)/./node_modules/marked/lib/marked.esm.js\");\n/* harmony import */ var _private_markdown_container_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/markdown-container.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/private/markdown-container.js\");\n\n\n\n/** @category Renderers */\nclass MarkdownDiv extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    targetElement = null;\n    renderMarkdownIntoDiv() {\n        const { targetElement, props } = this;\n        if (targetElement === null)\n            return;\n        const { contents, createNode } = props;\n        const innerHTML = (0,marked__WEBPACK_IMPORTED_MODULE_1__.marked)(contents);\n        const childRange = document.createRange();\n        childRange.selectNodeContents(targetElement);\n        childRange.deleteContents();\n        let newChild = createNode?.(innerHTML);\n        if (newChild === undefined) {\n            const childDoc = document.createElement(\"template\");\n            childDoc.innerHTML = innerHTML;\n            newChild = childDoc.content;\n        }\n        targetElement.append(newChild);\n        const tags = targetElement.getElementsByTagName(\"a\");\n        for (const tag of tags) {\n            tag.target = \"_blank\";\n            tag.rel = \"noreferrer noopener\";\n        }\n    }\n    containerRefHook = (element) => {\n        this.targetElement = element;\n        this.renderMarkdownIntoDiv();\n    };\n    render() {\n        // Doing this in the ref hook works great when we first render, but never again.\n        // This only works great after the first render, but not in the first render.\n        // Putting the two together makes the full solution.\n        this.renderMarkdownIntoDiv();\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_private_markdown_container_js__WEBPACK_IMPORTED_MODULE_2__.MarkdownContainer, { ref: this.containerRefHook });\n    }\n}\n//# sourceMappingURL=markdown-div.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvbWFya2Rvd24tZGl2L21hcmtkb3duLWRpdi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBCO0FBQ007QUFDb0M7QUFDcEU7QUFDZSwwQkFBMEIsZ0RBQW1CO0FBQzVEO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDLDBCQUEwQiw4Q0FBTTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQW1CLENBQUMsNkVBQWlCLElBQUksNEJBQTRCO0FBQ3BGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL21hcmtkb3duLWRpdi9tYXJrZG93bi1kaXYuanM/ODAzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBtYXJrZWQgfSBmcm9tIFwibWFya2VkXCI7XG5pbXBvcnQgeyBNYXJrZG93bkNvbnRhaW5lciB9IGZyb20gXCIuL3ByaXZhdGUvbWFya2Rvd24tY29udGFpbmVyLmpzXCI7XG4vKiogQGNhdGVnb3J5IFJlbmRlcmVycyAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFya2Rvd25EaXYgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50IHtcbiAgICB0YXJnZXRFbGVtZW50ID0gbnVsbDtcbiAgICByZW5kZXJNYXJrZG93bkludG9EaXYoKSB7XG4gICAgICAgIGNvbnN0IHsgdGFyZ2V0RWxlbWVudCwgcHJvcHMgfSA9IHRoaXM7XG4gICAgICAgIGlmICh0YXJnZXRFbGVtZW50ID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB7IGNvbnRlbnRzLCBjcmVhdGVOb2RlIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaW5uZXJIVE1MID0gbWFya2VkKGNvbnRlbnRzKTtcbiAgICAgICAgY29uc3QgY2hpbGRSYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgIGNoaWxkUmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKHRhcmdldEVsZW1lbnQpO1xuICAgICAgICBjaGlsZFJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgIGxldCBuZXdDaGlsZCA9IGNyZWF0ZU5vZGU/Lihpbm5lckhUTUwpO1xuICAgICAgICBpZiAobmV3Q2hpbGQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgY2hpbGREb2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7XG4gICAgICAgICAgICBjaGlsZERvYy5pbm5lckhUTUwgPSBpbm5lckhUTUw7XG4gICAgICAgICAgICBuZXdDaGlsZCA9IGNoaWxkRG9jLmNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0RWxlbWVudC5hcHBlbmQobmV3Q2hpbGQpO1xuICAgICAgICBjb25zdCB0YWdzID0gdGFyZ2V0RWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImFcIik7XG4gICAgICAgIGZvciAoY29uc3QgdGFnIG9mIHRhZ3MpIHtcbiAgICAgICAgICAgIHRhZy50YXJnZXQgPSBcIl9ibGFua1wiO1xuICAgICAgICAgICAgdGFnLnJlbCA9IFwibm9yZWZlcnJlciBub29wZW5lclwiO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnRhaW5lclJlZkhvb2sgPSAoZWxlbWVudCkgPT4ge1xuICAgICAgICB0aGlzLnRhcmdldEVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLnJlbmRlck1hcmtkb3duSW50b0RpdigpO1xuICAgIH07XG4gICAgcmVuZGVyKCkge1xuICAgICAgICAvLyBEb2luZyB0aGlzIGluIHRoZSByZWYgaG9vayB3b3JrcyBncmVhdCB3aGVuIHdlIGZpcnN0IHJlbmRlciwgYnV0IG5ldmVyIGFnYWluLlxuICAgICAgICAvLyBUaGlzIG9ubHkgd29ya3MgZ3JlYXQgYWZ0ZXIgdGhlIGZpcnN0IHJlbmRlciwgYnV0IG5vdCBpbiB0aGUgZmlyc3QgcmVuZGVyLlxuICAgICAgICAvLyBQdXR0aW5nIHRoZSB0d28gdG9nZXRoZXIgbWFrZXMgdGhlIGZ1bGwgc29sdXRpb24uXG4gICAgICAgIHRoaXMucmVuZGVyTWFya2Rvd25JbnRvRGl2KCk7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE1hcmtkb3duQ29udGFpbmVyLCB7IHJlZjogdGhpcy5jb250YWluZXJSZWZIb29rIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcmtkb3duLWRpdi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/markdown-div.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/private/markdown-container.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/private/markdown-container.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkdownContainer: () => (/* binding */ MarkdownContainer)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n\nconst MarkdownContainer = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_0__.styled)('div')({\n  name: \"MarkdownContainer\",\n  class: \"gdg-mnuv029\",\n  propsAsIs: false\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvbWFya2Rvd24tZGl2L3ByaXZhdGUvbWFya2Rvd24tY29udGFpbmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ2pDLHVDQUF1QyxzREFBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9yaXpvbi10YWlsd2luZC1yZWFjdC1uZXh0anMvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvbWFya2Rvd24tZGl2L3ByaXZhdGUvbWFya2Rvd24tY29udGFpbmVyLmpzPzM1M2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5leHBvcnQgY29uc3QgTWFya2Rvd25Db250YWluZXIgPSAvKiNfX1BVUkVfXyovc3R5bGVkKCdkaXYnKSh7XG4gIG5hbWU6IFwiTWFya2Rvd25Db250YWluZXJcIixcbiAgY2xhc3M6IFwiZ2RnLW1udXYwMjlcIixcbiAgcHJvcHNBc0lzOiBmYWxzZVxufSk7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/markdown-div/private/markdown-container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/infinite-scroller.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/infinite-scroller.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfiniteScroller: () => (/* binding */ InfiniteScroller)\n/* harmony export */ });\n/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @linaria/react */ \"(ssr)/./node_modules/@linaria/react/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _common_resize_detector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/resize-detector.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/resize-detector.js\");\n/* harmony import */ var _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/browser-detect.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/browser-detect.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/common/utils.js\");\n/* harmony import */ var _use_kinetic_scroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-kinetic-scroll.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/use-kinetic-scroll.js\");\n\n\n\n\n\n\nconst _exp = /*#__PURE__*/() => p => p.isSafari ? \"scroll\" : \"auto\";\nconst ScrollRegionStyle = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_1__.styled)('div')({\n  name: \"ScrollRegionStyle\",\n  class: \"gdg-s1dgczr6\",\n  propsAsIs: false,\n  vars: {\n    \"s1dgczr6-0\": [_exp()]\n  }\n});\nfunction useTouchUpDelayed(delay) {\n  const [hasTouches, setHasTouches] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const safeWindow = typeof window === \"undefined\" ? null : window;\n  const cbTimer = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.useEventListener)(\"touchstart\", react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    window.clearTimeout(cbTimer.current);\n    setHasTouches(true);\n  }, []), safeWindow, true, false);\n  (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.useEventListener)(\"touchend\", react__WEBPACK_IMPORTED_MODULE_0__.useCallback(e => {\n    if (e.touches.length === 0) {\n      cbTimer.current = window.setTimeout(() => setHasTouches(false), delay);\n    }\n  }, [delay]), safeWindow, true, false);\n  return hasTouches;\n}\nconst InfiniteScroller = p => {\n  const {\n    children,\n    clientHeight,\n    scrollHeight,\n    scrollWidth,\n    update,\n    draggable,\n    className,\n    preventDiagonalScrolling = false,\n    paddingBottom = 0,\n    paddingRight = 0,\n    rightElement,\n    rightElementProps,\n    kineticScrollPerfHack = false,\n    scrollRef,\n    initialSize\n  } = p;\n  const padders = [];\n  const rightElementSticky = rightElementProps?.sticky ?? false;\n  const rightElementFill = rightElementProps?.fill ?? false;\n  const offsetY = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  const lastScrollY = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  const scroller = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const dpr = typeof window === \"undefined\" ? 1 : window.devicePixelRatio;\n  const lastScrollPosition = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n    scrollLeft: 0,\n    scrollTop: 0,\n    lockDirection: undefined\n  });\n  const rightWrapRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  const hasTouches = useTouchUpDelayed(200);\n  const [isIdle, setIsIdle] = react__WEBPACK_IMPORTED_MODULE_0__.useState(true);\n  const idleTimer = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    if (!isIdle || hasTouches || lastScrollPosition.current.lockDirection === undefined) return;\n    const el = scroller.current;\n    if (el === null) return;\n    const [lx, ly] = lastScrollPosition.current.lockDirection;\n    if (lx !== undefined) {\n      el.scrollLeft = lx;\n    } else if (ly !== undefined) {\n      el.scrollTop = ly;\n    }\n    lastScrollPosition.current.lockDirection = undefined;\n  }, [hasTouches, isIdle]);\n  const onScroll = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((scrollLeft, scrollTop) => {\n    const el = scroller.current;\n    if (el === null) return;\n    scrollTop = scrollTop ?? el.scrollTop;\n    scrollLeft = scrollLeft ?? el.scrollLeft;\n    const lastScrollTop = lastScrollPosition.current.scrollTop;\n    const lastScrollLeft = lastScrollPosition.current.scrollLeft;\n    const dx = scrollLeft - lastScrollLeft;\n    const dy = scrollTop - lastScrollTop;\n    if (hasTouches && dx !== 0 && dy !== 0 && (Math.abs(dx) > 3 || Math.abs(dy) > 3) && preventDiagonalScrolling && lastScrollPosition.current.lockDirection === undefined) {\n      lastScrollPosition.current.lockDirection = Math.abs(dx) < Math.abs(dy) ? [lastScrollLeft, undefined] : [undefined, lastScrollTop];\n    }\n    const lock = lastScrollPosition.current.lockDirection;\n    scrollLeft = lock?.[0] ?? scrollLeft;\n    scrollTop = lock?.[1] ?? scrollTop;\n    lastScrollPosition.current.scrollLeft = scrollLeft;\n    lastScrollPosition.current.scrollTop = scrollTop;\n    const cWidth = el.clientWidth;\n    const cHeight = el.clientHeight;\n    const newY = scrollTop;\n    const delta = lastScrollY.current - newY;\n    const scrollableHeight = el.scrollHeight - cHeight;\n    lastScrollY.current = newY;\n    if (scrollableHeight > 0 && (Math.abs(delta) > 2000 || newY === 0 || newY === scrollableHeight) && scrollHeight > el.scrollHeight + 5) {\n      const prog = newY / scrollableHeight;\n      const recomputed = (scrollHeight - cHeight) * prog;\n      offsetY.current = recomputed - newY;\n    }\n    if (lock !== undefined) {\n      window.clearTimeout(idleTimer.current);\n      setIsIdle(false);\n      idleTimer.current = window.setTimeout(() => setIsIdle(true), 200);\n    }\n    update({\n      x: scrollLeft,\n      y: newY + offsetY.current,\n      width: cWidth - paddingRight,\n      height: cHeight - paddingBottom,\n      paddingRight: rightWrapRef.current?.clientWidth ?? 0\n    });\n  }, [paddingBottom, paddingRight, scrollHeight, update, preventDiagonalScrolling, hasTouches]);\n  (0,_use_kinetic_scroll_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(kineticScrollPerfHack && _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_4__.browserIsSafari.value, onScroll, scroller);\n  const onScrollRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onScroll);\n  onScrollRef.current = onScroll;\n  const lastProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  const didFirstScroll = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  // if this is not a layout effect there will be a flicker when changing the number of freezeColumns\n  // we need to document what this is needed at all.\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n    if (didFirstScroll.current) onScroll();else didFirstScroll.current = true;\n  }, [onScroll, paddingBottom, paddingRight]);\n  const setRefs = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(instance => {\n    scroller.current = instance;\n    if (scrollRef !== undefined) {\n      scrollRef.current = instance;\n    }\n  }, [scrollRef]);\n  let key = 0;\n  let h = 0;\n  padders.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    key: key++,\n    style: {\n      width: scrollWidth,\n      height: 0\n    }\n  }));\n  while (h < scrollHeight) {\n    const toAdd = Math.min(5000000, scrollHeight - h);\n    padders.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      key: key++,\n      style: {\n        width: 0,\n        height: toAdd\n      }\n    }));\n    h += toAdd;\n  }\n  const {\n    ref,\n    width,\n    height\n  } = (0,_common_resize_detector_js__WEBPACK_IMPORTED_MODULE_5__.useResizeDetector)(initialSize);\n  if (typeof window !== \"undefined\" && (lastProps.current?.height !== height || lastProps.current?.width !== width)) {\n    window.setTimeout(() => onScrollRef.current(), 0);\n    lastProps.current = {\n      width,\n      height\n    };\n  }\n  if ((width ?? 0) === 0 || (height ?? 0) === 0) return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    ref: ref\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    ref: ref\n  }, react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScrollRegionStyle, {\n    isSafari: _common_browser_detect_js__WEBPACK_IMPORTED_MODULE_4__.browserIsSafari.value\n  }, react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"dvn-underlay\"\n  }, children), react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    ref: setRefs,\n    style: lastProps.current,\n    draggable: draggable,\n    onDragStart: e => {\n      if (!draggable) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    },\n    className: \"dvn-scroller \" + (className ?? \"\"),\n    onScroll: () => onScroll()\n  }, react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"dvn-scroll-inner\" + (rightElement === undefined ? \" dvn-hidden\" : \"\")\n  }, react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"dvn-stack\"\n  }, padders), rightElement !== undefined && react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, !rightElementFill && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"dvn-spacer\"\n  }), react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    ref: rightWrapRef,\n    style: {\n      height,\n      maxHeight: clientHeight - Math.ceil(dpr % 1),\n      position: \"sticky\",\n      top: 0,\n      paddingLeft: 1,\n      marginBottom: -40,\n      marginRight: paddingRight,\n      flexGrow: rightElementFill ? 1 : undefined,\n      right: rightElementSticky ? paddingRight ?? 0 : undefined,\n      pointerEvents: \"auto\"\n    }\n  }, rightElement))))));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvc2Nyb2xsaW5nLWRhdGEtZ3JpZC9pbmZpbml0ZS1zY3JvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXdDO0FBQ1Q7QUFDcUM7QUFDSDtBQUNSO0FBQ0Y7QUFDdkQ7QUFDQSx1Q0FBdUMsc0RBQU07QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0Esc0NBQXNDLDJDQUFjO0FBQ3BEO0FBQ0Esa0JBQWtCLHlDQUFZO0FBQzlCLEVBQUUsa0VBQWdCLGVBQWUsOENBQWlCO0FBQ2xEO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRSxrRUFBZ0IsYUFBYSw4Q0FBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBWTtBQUM5QixzQkFBc0IseUNBQVk7QUFDbEMsbUJBQW1CLHlDQUFZO0FBQy9CO0FBQ0EsNkJBQTZCLHlDQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCx1QkFBdUIseUNBQVk7QUFDbkM7QUFDQSw4QkFBOEIsMkNBQWM7QUFDNUMsb0JBQW9CLHlDQUFZO0FBQ2hDLEVBQUUsa0RBQXFCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsbUJBQW1CLDhDQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxFQUFFLGtFQUFnQiwwQkFBMEIsc0VBQWU7QUFDM0Qsc0JBQXNCLHlDQUFZO0FBQ2xDO0FBQ0Esb0JBQW9CLHlDQUFZO0FBQ2hDLHlCQUF5Qix5Q0FBWTtBQUNyQztBQUNBO0FBQ0EsRUFBRSxrREFBcUI7QUFDdkIsMkNBQTJDO0FBQzNDLEdBQUc7QUFDSCxrQkFBa0IsOENBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxlQUFlLGdEQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxFQUFFLDZFQUFpQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxnREFBbUI7QUFDM0U7QUFDQSxHQUFHO0FBQ0gsU0FBUyxnREFBbUI7QUFDNUI7QUFDQSxHQUFHLEVBQUUsZ0RBQW1CO0FBQ3hCLGNBQWMsc0VBQWU7QUFDN0IsR0FBRyxFQUFFLGdEQUFtQjtBQUN4QjtBQUNBLEdBQUcsYUFBYSxnREFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRyxFQUFFLGdEQUFtQjtBQUN4QjtBQUNBLEdBQUcsRUFBRSxnREFBbUI7QUFDeEI7QUFDQSxHQUFHLDBDQUEwQyxnREFBbUIsQ0FBQywyQ0FBYyw2QkFBNkIsZ0RBQW1CO0FBQy9IO0FBQ0EsR0FBRyxHQUFHLGdEQUFtQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL3Njcm9sbGluZy1kYXRhLWdyaWQvaW5maW5pdGUtc2Nyb2xsZXIuanM/ZDAzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQGxpbmFyaWEvcmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUmVzaXplRGV0ZWN0b3IgfSBmcm9tIFwiLi4vLi4vY29tbW9uL3Jlc2l6ZS1kZXRlY3Rvci5qc1wiO1xuaW1wb3J0IHsgYnJvd3NlcklzU2FmYXJpIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9icm93c2VyLWRldGVjdC5qc1wiO1xuaW1wb3J0IHsgdXNlRXZlbnRMaXN0ZW5lciB9IGZyb20gXCIuLi8uLi9jb21tb24vdXRpbHMuanNcIjtcbmltcG9ydCB1c2VLaW5ldGljU2Nyb2xsIGZyb20gXCIuL3VzZS1raW5ldGljLXNjcm9sbC5qc1wiO1xuY29uc3QgX2V4cCA9IC8qI19fUFVSRV9fKi8oKSA9PiBwID0+IHAuaXNTYWZhcmkgPyBcInNjcm9sbFwiIDogXCJhdXRvXCI7XG5jb25zdCBTY3JvbGxSZWdpb25TdHlsZSA9IC8qI19fUFVSRV9fKi9zdHlsZWQoJ2RpdicpKHtcbiAgbmFtZTogXCJTY3JvbGxSZWdpb25TdHlsZVwiLFxuICBjbGFzczogXCJnZGctczFkZ2N6cjZcIixcbiAgcHJvcHNBc0lzOiBmYWxzZSxcbiAgdmFyczoge1xuICAgIFwiczFkZ2N6cjYtMFwiOiBbX2V4cCgpXVxuICB9XG59KTtcbmZ1bmN0aW9uIHVzZVRvdWNoVXBEZWxheWVkKGRlbGF5KSB7XG4gIGNvbnN0IFtoYXNUb3VjaGVzLCBzZXRIYXNUb3VjaGVzXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3Qgc2FmZVdpbmRvdyA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBudWxsIDogd2luZG93O1xuICBjb25zdCBjYlRpbWVyID0gUmVhY3QudXNlUmVmKDApO1xuICB1c2VFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgd2luZG93LmNsZWFyVGltZW91dChjYlRpbWVyLmN1cnJlbnQpO1xuICAgIHNldEhhc1RvdWNoZXModHJ1ZSk7XG4gIH0sIFtdKSwgc2FmZVdpbmRvdywgdHJ1ZSwgZmFsc2UpO1xuICB1c2VFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgUmVhY3QudXNlQ2FsbGJhY2soZSA9PiB7XG4gICAgaWYgKGUudG91Y2hlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNiVGltZXIuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHNldEhhc1RvdWNoZXMoZmFsc2UpLCBkZWxheSk7XG4gICAgfVxuICB9LCBbZGVsYXldKSwgc2FmZVdpbmRvdywgdHJ1ZSwgZmFsc2UpO1xuICByZXR1cm4gaGFzVG91Y2hlcztcbn1cbmV4cG9ydCBjb25zdCBJbmZpbml0ZVNjcm9sbGVyID0gcCA9PiB7XG4gIGNvbnN0IHtcbiAgICBjaGlsZHJlbixcbiAgICBjbGllbnRIZWlnaHQsXG4gICAgc2Nyb2xsSGVpZ2h0LFxuICAgIHNjcm9sbFdpZHRoLFxuICAgIHVwZGF0ZSxcbiAgICBkcmFnZ2FibGUsXG4gICAgY2xhc3NOYW1lLFxuICAgIHByZXZlbnREaWFnb25hbFNjcm9sbGluZyA9IGZhbHNlLFxuICAgIHBhZGRpbmdCb3R0b20gPSAwLFxuICAgIHBhZGRpbmdSaWdodCA9IDAsXG4gICAgcmlnaHRFbGVtZW50LFxuICAgIHJpZ2h0RWxlbWVudFByb3BzLFxuICAgIGtpbmV0aWNTY3JvbGxQZXJmSGFjayA9IGZhbHNlLFxuICAgIHNjcm9sbFJlZixcbiAgICBpbml0aWFsU2l6ZVxuICB9ID0gcDtcbiAgY29uc3QgcGFkZGVycyA9IFtdO1xuICBjb25zdCByaWdodEVsZW1lbnRTdGlja3kgPSByaWdodEVsZW1lbnRQcm9wcz8uc3RpY2t5ID8/IGZhbHNlO1xuICBjb25zdCByaWdodEVsZW1lbnRGaWxsID0gcmlnaHRFbGVtZW50UHJvcHM/LmZpbGwgPz8gZmFsc2U7XG4gIGNvbnN0IG9mZnNldFkgPSBSZWFjdC51c2VSZWYoMCk7XG4gIGNvbnN0IGxhc3RTY3JvbGxZID0gUmVhY3QudXNlUmVmKDApO1xuICBjb25zdCBzY3JvbGxlciA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgZHByID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiA/IDEgOiB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbztcbiAgY29uc3QgbGFzdFNjcm9sbFBvc2l0aW9uID0gUmVhY3QudXNlUmVmKHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMCxcbiAgICBsb2NrRGlyZWN0aW9uOiB1bmRlZmluZWRcbiAgfSk7XG4gIGNvbnN0IHJpZ2h0V3JhcFJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgaGFzVG91Y2hlcyA9IHVzZVRvdWNoVXBEZWxheWVkKDIwMCk7XG4gIGNvbnN0IFtpc0lkbGUsIHNldElzSWRsZV0gPSBSZWFjdC51c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgaWRsZVRpbWVyID0gUmVhY3QudXNlUmVmKDApO1xuICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghaXNJZGxlIHx8IGhhc1RvdWNoZXMgfHwgbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQubG9ja0RpcmVjdGlvbiA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG4gICAgY29uc3QgZWwgPSBzY3JvbGxlci5jdXJyZW50O1xuICAgIGlmIChlbCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgIGNvbnN0IFtseCwgbHldID0gbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQubG9ja0RpcmVjdGlvbjtcbiAgICBpZiAobHggIT09IHVuZGVmaW5lZCkge1xuICAgICAgZWwuc2Nyb2xsTGVmdCA9IGx4O1xuICAgIH0gZWxzZSBpZiAobHkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZWwuc2Nyb2xsVG9wID0gbHk7XG4gICAgfVxuICAgIGxhc3RTY3JvbGxQb3NpdGlvbi5jdXJyZW50LmxvY2tEaXJlY3Rpb24gPSB1bmRlZmluZWQ7XG4gIH0sIFtoYXNUb3VjaGVzLCBpc0lkbGVdKTtcbiAgY29uc3Qgb25TY3JvbGwgPSBSZWFjdC51c2VDYWxsYmFjaygoc2Nyb2xsTGVmdCwgc2Nyb2xsVG9wKSA9PiB7XG4gICAgY29uc3QgZWwgPSBzY3JvbGxlci5jdXJyZW50O1xuICAgIGlmIChlbCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgIHNjcm9sbFRvcCA9IHNjcm9sbFRvcCA/PyBlbC5zY3JvbGxUb3A7XG4gICAgc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQgPz8gZWwuc2Nyb2xsTGVmdDtcbiAgICBjb25zdCBsYXN0U2Nyb2xsVG9wID0gbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IGxhc3RTY3JvbGxMZWZ0ID0gbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQuc2Nyb2xsTGVmdDtcbiAgICBjb25zdCBkeCA9IHNjcm9sbExlZnQgLSBsYXN0U2Nyb2xsTGVmdDtcbiAgICBjb25zdCBkeSA9IHNjcm9sbFRvcCAtIGxhc3RTY3JvbGxUb3A7XG4gICAgaWYgKGhhc1RvdWNoZXMgJiYgZHggIT09IDAgJiYgZHkgIT09IDAgJiYgKE1hdGguYWJzKGR4KSA+IDMgfHwgTWF0aC5hYnMoZHkpID4gMykgJiYgcHJldmVudERpYWdvbmFsU2Nyb2xsaW5nICYmIGxhc3RTY3JvbGxQb3NpdGlvbi5jdXJyZW50LmxvY2tEaXJlY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQubG9ja0RpcmVjdGlvbiA9IE1hdGguYWJzKGR4KSA8IE1hdGguYWJzKGR5KSA/IFtsYXN0U2Nyb2xsTGVmdCwgdW5kZWZpbmVkXSA6IFt1bmRlZmluZWQsIGxhc3RTY3JvbGxUb3BdO1xuICAgIH1cbiAgICBjb25zdCBsb2NrID0gbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQubG9ja0RpcmVjdGlvbjtcbiAgICBzY3JvbGxMZWZ0ID0gbG9jaz8uWzBdID8/IHNjcm9sbExlZnQ7XG4gICAgc2Nyb2xsVG9wID0gbG9jaz8uWzFdID8/IHNjcm9sbFRvcDtcbiAgICBsYXN0U2Nyb2xsUG9zaXRpb24uY3VycmVudC5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdDtcbiAgICBsYXN0U2Nyb2xsUG9zaXRpb24uY3VycmVudC5zY3JvbGxUb3AgPSBzY3JvbGxUb3A7XG4gICAgY29uc3QgY1dpZHRoID0gZWwuY2xpZW50V2lkdGg7XG4gICAgY29uc3QgY0hlaWdodCA9IGVsLmNsaWVudEhlaWdodDtcbiAgICBjb25zdCBuZXdZID0gc2Nyb2xsVG9wO1xuICAgIGNvbnN0IGRlbHRhID0gbGFzdFNjcm9sbFkuY3VycmVudCAtIG5ld1k7XG4gICAgY29uc3Qgc2Nyb2xsYWJsZUhlaWdodCA9IGVsLnNjcm9sbEhlaWdodCAtIGNIZWlnaHQ7XG4gICAgbGFzdFNjcm9sbFkuY3VycmVudCA9IG5ld1k7XG4gICAgaWYgKHNjcm9sbGFibGVIZWlnaHQgPiAwICYmIChNYXRoLmFicyhkZWx0YSkgPiAyMDAwIHx8IG5ld1kgPT09IDAgfHwgbmV3WSA9PT0gc2Nyb2xsYWJsZUhlaWdodCkgJiYgc2Nyb2xsSGVpZ2h0ID4gZWwuc2Nyb2xsSGVpZ2h0ICsgNSkge1xuICAgICAgY29uc3QgcHJvZyA9IG5ld1kgLyBzY3JvbGxhYmxlSGVpZ2h0O1xuICAgICAgY29uc3QgcmVjb21wdXRlZCA9IChzY3JvbGxIZWlnaHQgLSBjSGVpZ2h0KSAqIHByb2c7XG4gICAgICBvZmZzZXRZLmN1cnJlbnQgPSByZWNvbXB1dGVkIC0gbmV3WTtcbiAgICB9XG4gICAgaWYgKGxvY2sgIT09IHVuZGVmaW5lZCkge1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dChpZGxlVGltZXIuY3VycmVudCk7XG4gICAgICBzZXRJc0lkbGUoZmFsc2UpO1xuICAgICAgaWRsZVRpbWVyLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiBzZXRJc0lkbGUodHJ1ZSksIDIwMCk7XG4gICAgfVxuICAgIHVwZGF0ZSh7XG4gICAgICB4OiBzY3JvbGxMZWZ0LFxuICAgICAgeTogbmV3WSArIG9mZnNldFkuY3VycmVudCxcbiAgICAgIHdpZHRoOiBjV2lkdGggLSBwYWRkaW5nUmlnaHQsXG4gICAgICBoZWlnaHQ6IGNIZWlnaHQgLSBwYWRkaW5nQm90dG9tLFxuICAgICAgcGFkZGluZ1JpZ2h0OiByaWdodFdyYXBSZWYuY3VycmVudD8uY2xpZW50V2lkdGggPz8gMFxuICAgIH0pO1xuICB9LCBbcGFkZGluZ0JvdHRvbSwgcGFkZGluZ1JpZ2h0LCBzY3JvbGxIZWlnaHQsIHVwZGF0ZSwgcHJldmVudERpYWdvbmFsU2Nyb2xsaW5nLCBoYXNUb3VjaGVzXSk7XG4gIHVzZUtpbmV0aWNTY3JvbGwoa2luZXRpY1Njcm9sbFBlcmZIYWNrICYmIGJyb3dzZXJJc1NhZmFyaS52YWx1ZSwgb25TY3JvbGwsIHNjcm9sbGVyKTtcbiAgY29uc3Qgb25TY3JvbGxSZWYgPSBSZWFjdC51c2VSZWYob25TY3JvbGwpO1xuICBvblNjcm9sbFJlZi5jdXJyZW50ID0gb25TY3JvbGw7XG4gIGNvbnN0IGxhc3RQcm9wcyA9IFJlYWN0LnVzZVJlZigpO1xuICBjb25zdCBkaWRGaXJzdFNjcm9sbCA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gIC8vIGlmIHRoaXMgaXMgbm90IGEgbGF5b3V0IGVmZmVjdCB0aGVyZSB3aWxsIGJlIGEgZmxpY2tlciB3aGVuIGNoYW5naW5nIHRoZSBudW1iZXIgb2YgZnJlZXplQ29sdW1uc1xuICAvLyB3ZSBuZWVkIHRvIGRvY3VtZW50IHdoYXQgdGhpcyBpcyBuZWVkZWQgYXQgYWxsLlxuICBSZWFjdC51c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChkaWRGaXJzdFNjcm9sbC5jdXJyZW50KSBvblNjcm9sbCgpO2Vsc2UgZGlkRmlyc3RTY3JvbGwuY3VycmVudCA9IHRydWU7XG4gIH0sIFtvblNjcm9sbCwgcGFkZGluZ0JvdHRvbSwgcGFkZGluZ1JpZ2h0XSk7XG4gIGNvbnN0IHNldFJlZnMgPSBSZWFjdC51c2VDYWxsYmFjayhpbnN0YW5jZSA9PiB7XG4gICAgc2Nyb2xsZXIuY3VycmVudCA9IGluc3RhbmNlO1xuICAgIGlmIChzY3JvbGxSZWYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgc2Nyb2xsUmVmLmN1cnJlbnQgPSBpbnN0YW5jZTtcbiAgICB9XG4gIH0sIFtzY3JvbGxSZWZdKTtcbiAgbGV0IGtleSA9IDA7XG4gIGxldCBoID0gMDtcbiAgcGFkZGVycy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGtleToga2V5KyssXG4gICAgc3R5bGU6IHtcbiAgICAgIHdpZHRoOiBzY3JvbGxXaWR0aCxcbiAgICAgIGhlaWdodDogMFxuICAgIH1cbiAgfSkpO1xuICB3aGlsZSAoaCA8IHNjcm9sbEhlaWdodCkge1xuICAgIGNvbnN0IHRvQWRkID0gTWF0aC5taW4oNTAwMDAwMCwgc2Nyb2xsSGVpZ2h0IC0gaCk7XG4gICAgcGFkZGVycy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAga2V5OiBrZXkrKyxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIHdpZHRoOiAwLFxuICAgICAgICBoZWlnaHQ6IHRvQWRkXG4gICAgICB9XG4gICAgfSkpO1xuICAgIGggKz0gdG9BZGQ7XG4gIH1cbiAgY29uc3Qge1xuICAgIHJlZixcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IHVzZVJlc2l6ZURldGVjdG9yKGluaXRpYWxTaXplKTtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgKGxhc3RQcm9wcy5jdXJyZW50Py5oZWlnaHQgIT09IGhlaWdodCB8fCBsYXN0UHJvcHMuY3VycmVudD8ud2lkdGggIT09IHdpZHRoKSkge1xuICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IG9uU2Nyb2xsUmVmLmN1cnJlbnQoKSwgMCk7XG4gICAgbGFzdFByb3BzLmN1cnJlbnQgPSB7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodFxuICAgIH07XG4gIH1cbiAgaWYgKCh3aWR0aCA/PyAwKSA9PT0gMCB8fCAoaGVpZ2h0ID8/IDApID09PSAwKSByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgcmVmOiByZWZcbiAgfSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IHJlZlxuICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFNjcm9sbFJlZ2lvblN0eWxlLCB7XG4gICAgaXNTYWZhcmk6IGJyb3dzZXJJc1NhZmFyaS52YWx1ZVxuICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZHZuLXVuZGVybGF5XCJcbiAgfSwgY2hpbGRyZW4pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IHNldFJlZnMsXG4gICAgc3R5bGU6IGxhc3RQcm9wcy5jdXJyZW50LFxuICAgIGRyYWdnYWJsZTogZHJhZ2dhYmxlLFxuICAgIG9uRHJhZ1N0YXJ0OiBlID0+IHtcbiAgICAgIGlmICghZHJhZ2dhYmxlKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNsYXNzTmFtZTogXCJkdm4tc2Nyb2xsZXIgXCIgKyAoY2xhc3NOYW1lID8/IFwiXCIpLFxuICAgIG9uU2Nyb2xsOiAoKSA9PiBvblNjcm9sbCgpXG4gIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJkdm4tc2Nyb2xsLWlubmVyXCIgKyAocmlnaHRFbGVtZW50ID09PSB1bmRlZmluZWQgPyBcIiBkdm4taGlkZGVuXCIgOiBcIlwiKVxuICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZHZuLXN0YWNrXCJcbiAgfSwgcGFkZGVycyksIHJpZ2h0RWxlbWVudCAhPT0gdW5kZWZpbmVkICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsICFyaWdodEVsZW1lbnRGaWxsICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJkdm4tc3BhY2VyXCJcbiAgfSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHJlZjogcmlnaHRXcmFwUmVmLFxuICAgIHN0eWxlOiB7XG4gICAgICBoZWlnaHQsXG4gICAgICBtYXhIZWlnaHQ6IGNsaWVudEhlaWdodCAtIE1hdGguY2VpbChkcHIgJSAxKSxcbiAgICAgIHBvc2l0aW9uOiBcInN0aWNreVwiLFxuICAgICAgdG9wOiAwLFxuICAgICAgcGFkZGluZ0xlZnQ6IDEsXG4gICAgICBtYXJnaW5Cb3R0b206IC00MCxcbiAgICAgIG1hcmdpblJpZ2h0OiBwYWRkaW5nUmlnaHQsXG4gICAgICBmbGV4R3JvdzogcmlnaHRFbGVtZW50RmlsbCA/IDEgOiB1bmRlZmluZWQsXG4gICAgICByaWdodDogcmlnaHRFbGVtZW50U3RpY2t5ID8gcGFkZGluZ1JpZ2h0ID8/IDAgOiB1bmRlZmluZWQsXG4gICAgICBwb2ludGVyRXZlbnRzOiBcImF1dG9cIlxuICAgIH1cbiAgfSwgcmlnaHRFbGVtZW50KSkpKSkpO1xufTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/infinite-scroller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/scrolling-data-grid.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/scrolling-data-grid.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _data_grid_dnd_data_grid_dnd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data-grid-dnd/data-grid-dnd.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-dnd/data-grid-dnd.js\");\n/* harmony import */ var _infinite_scroller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infinite-scroller.js */ \"(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/infinite-scroller.js\");\n\n\n\nconst GridScroller = p => {\n    const { columns, rows, rowHeight, headerHeight, groupHeaderHeight, enableGroups, freezeColumns, experimental, nonGrowWidth, clientSize, className, onVisibleRegionChanged, scrollRef, preventDiagonalScrolling, rightElement, rightElementProps, overscrollX, overscrollY, initialSize, smoothScrollX = false, smoothScrollY = false, isDraggable, } = p;\n    const { paddingRight, paddingBottom } = experimental ?? {};\n    const [clientWidth, clientHeight] = clientSize;\n    const last = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const lastX = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const lastY = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const lastSize = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const width = nonGrowWidth + Math.max(0, overscrollX ?? 0);\n    let height = enableGroups ? headerHeight + groupHeaderHeight : headerHeight;\n    if (typeof rowHeight === \"number\") {\n        height += rows * rowHeight;\n    }\n    else {\n        for (let r = 0; r < rows; r++) {\n            height += rowHeight(r);\n        }\n    }\n    if (overscrollY !== undefined) {\n        height += overscrollY;\n    }\n    const lastArgs = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const processArgs = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (lastArgs.current === undefined)\n            return;\n        const args = { ...lastArgs.current };\n        let x = 0;\n        let tx = args.x < 0 ? -args.x : 0;\n        let cellRight = 0;\n        let cellX = 0;\n        args.x = args.x < 0 ? 0 : args.x;\n        let stickyColWidth = 0;\n        for (let i = 0; i < freezeColumns; i++) {\n            stickyColWidth += columns[i].width;\n        }\n        for (const c of columns) {\n            const cx = x - stickyColWidth;\n            if (args.x >= cx + c.width) {\n                x += c.width;\n                cellX++;\n                cellRight++;\n            }\n            else if (args.x > cx) {\n                x += c.width;\n                if (smoothScrollX) {\n                    tx += cx - args.x;\n                }\n                else {\n                    cellX++;\n                }\n                cellRight++;\n            }\n            else if (args.x + args.width > cx) {\n                x += c.width;\n                cellRight++;\n            }\n            else {\n                break;\n            }\n        }\n        let ty = 0;\n        let cellY = 0;\n        let cellBottom = 0;\n        if (typeof rowHeight === \"number\") {\n            if (smoothScrollY) {\n                cellY = Math.floor(args.y / rowHeight);\n                ty = cellY * rowHeight - args.y;\n            }\n            else {\n                cellY = Math.ceil(args.y / rowHeight);\n            }\n            cellBottom = Math.ceil(args.height / rowHeight) + cellY;\n            if (ty < 0)\n                cellBottom++;\n        }\n        else {\n            let y = 0;\n            for (let row = 0; row < rows; row++) {\n                const rh = rowHeight(row);\n                const cy = y + (smoothScrollY ? 0 : rh / 2);\n                if (args.y >= y + rh) {\n                    y += rh;\n                    cellY++;\n                    cellBottom++;\n                }\n                else if (args.y > cy) {\n                    y += rh;\n                    if (smoothScrollY) {\n                        ty += cy - args.y;\n                    }\n                    else {\n                        cellY++;\n                    }\n                    cellBottom++;\n                }\n                else if (args.y + args.height > rh / 2 + y) {\n                    y += rh;\n                    cellBottom++;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        const rect = {\n            x: cellX,\n            y: cellY,\n            width: cellRight - cellX,\n            height: cellBottom - cellY,\n        };\n        const oldRect = last.current;\n        if (oldRect === undefined ||\n            oldRect.y !== rect.y ||\n            oldRect.x !== rect.x ||\n            oldRect.height !== rect.height ||\n            oldRect.width !== rect.width ||\n            lastX.current !== tx ||\n            lastY.current !== ty ||\n            args.width !== lastSize.current?.[0] ||\n            args.height !== lastSize.current?.[1]) {\n            onVisibleRegionChanged?.({\n                x: cellX,\n                y: cellY,\n                width: cellRight - cellX,\n                height: cellBottom - cellY,\n            }, args.width, args.height, args.paddingRight ?? 0, tx, ty);\n            last.current = rect;\n            lastX.current = tx;\n            lastY.current = ty;\n            lastSize.current = [args.width, args.height];\n        }\n    }, [columns, rowHeight, rows, onVisibleRegionChanged, freezeColumns, smoothScrollX, smoothScrollY]);\n    const onScrollUpdate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((args) => {\n        lastArgs.current = args;\n        processArgs();\n    }, [processArgs]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        processArgs();\n    }, [processArgs]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_infinite_scroller_js__WEBPACK_IMPORTED_MODULE_1__.InfiniteScroller, { scrollRef: scrollRef, className: className, kineticScrollPerfHack: experimental?.kineticScrollPerfHack, preventDiagonalScrolling: preventDiagonalScrolling, draggable: isDraggable === true || typeof isDraggable === \"string\", scrollWidth: width + (paddingRight ?? 0), scrollHeight: height + (paddingBottom ?? 0), clientHeight: clientHeight, rightElement: rightElement, paddingBottom: paddingBottom, paddingRight: paddingRight, rightElementProps: rightElementProps, update: onScrollUpdate, initialSize: initialSize },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_data_grid_dnd_data_grid_dnd_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { eventTargetRef: scrollRef, width: clientWidth, height: clientHeight, accessibilityHeight: p.accessibilityHeight, canvasRef: p.canvasRef, cellXOffset: p.cellXOffset, cellYOffset: p.cellYOffset, columns: p.columns, disabledRows: p.disabledRows, enableGroups: p.enableGroups, fillHandle: p.fillHandle, firstColAccessible: p.firstColAccessible, fixedShadowX: p.fixedShadowX, fixedShadowY: p.fixedShadowY, freezeColumns: p.freezeColumns, getCellContent: p.getCellContent, getCellRenderer: p.getCellRenderer, getGroupDetails: p.getGroupDetails, getRowThemeOverride: p.getRowThemeOverride, groupHeaderHeight: p.groupHeaderHeight, headerHeight: p.headerHeight, highlightRegions: p.highlightRegions, imageWindowLoader: p.imageWindowLoader, isFilling: p.isFilling, isFocused: p.isFocused, lockColumns: p.lockColumns, maxColumnWidth: p.maxColumnWidth, minColumnWidth: p.minColumnWidth, onHeaderMenuClick: p.onHeaderMenuClick, onMouseMove: p.onMouseMove, prelightCells: p.prelightCells, rowHeight: p.rowHeight, rows: p.rows, selection: p.selection, theme: p.theme, freezeTrailingRows: p.freezeTrailingRows, hasAppendRow: p.hasAppendRow, translateX: p.translateX, translateY: p.translateY, onColumnProposeMove: p.onColumnProposeMove, verticalBorder: p.verticalBorder, drawFocusRing: p.drawFocusRing, drawHeader: p.drawHeader, drawCell: p.drawCell, experimental: p.experimental, gridRef: p.gridRef, headerIcons: p.headerIcons, isDraggable: p.isDraggable, onCanvasBlur: p.onCanvasBlur, onCanvasFocused: p.onCanvasFocused, onCellFocused: p.onCellFocused, onColumnMoved: p.onColumnMoved, onColumnResize: p.onColumnResize, onColumnResizeEnd: p.onColumnResizeEnd, onColumnResizeStart: p.onColumnResizeStart, onContextMenu: p.onContextMenu, onDragEnd: p.onDragEnd, onDragLeave: p.onDragLeave, onDragOverCell: p.onDragOverCell, onDragStart: p.onDragStart, onDrop: p.onDrop, onItemHovered: p.onItemHovered, onKeyDown: p.onKeyDown, onKeyUp: p.onKeyUp, onMouseDown: p.onMouseDown, onMouseUp: p.onMouseUp, onRowMoved: p.onRowMoved, smoothScrollX: p.smoothScrollX, smoothScrollY: p.smoothScrollY })));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridScroller);\n//# sourceMappingURL=scrolling-data-grid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/scrolling-data-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/use-kinetic-scroll.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/use-kinetic-scroll.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nconst useKineticScroll = (isEnabled, callback, targetScroller) => {\n    const rafId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isTouching = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const lastScrollPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const sameCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n    callbackRef.current = callback;\n    const scrollEl = targetScroller.current;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const handleScroll = () => {\n            if (isTouching.current === false && scrollEl !== null) {\n                const currentScrollPosition = [scrollEl.scrollLeft, scrollEl.scrollTop];\n                if (lastScrollPosition.current?.[0] === currentScrollPosition[0] &&\n                    lastScrollPosition.current?.[1] === currentScrollPosition[1]) {\n                    if (sameCount.current > 10) {\n                        // Scroll position hasn't changed, stop the animation frame\n                        lastScrollPosition.current = null;\n                        isTouching.current = null;\n                        return;\n                    }\n                    else {\n                        sameCount.current++;\n                    }\n                }\n                else {\n                    sameCount.current = 0;\n                    callbackRef.current(currentScrollPosition[0], currentScrollPosition[1]);\n                    lastScrollPosition.current = currentScrollPosition;\n                }\n                rafId.current = window.setTimeout(handleScroll, 1000 / 120);\n            }\n        };\n        const startTouch = () => {\n            isTouching.current = true;\n            lastScrollPosition.current = null; // Reset last scroll position on touch start\n            if (rafId.current !== null) {\n                window.clearTimeout(rafId.current);\n                rafId.current = null;\n            }\n        };\n        const endTouch = (event) => {\n            if (event.touches.length === 0) {\n                // All touches have ended\n                isTouching.current = false;\n                sameCount.current = 0;\n                rafId.current = window.setTimeout(handleScroll, 1000 / 120);\n            }\n        };\n        if (isEnabled && scrollEl !== null) {\n            const element = scrollEl;\n            element.addEventListener(\"touchstart\", startTouch);\n            element.addEventListener(\"touchend\", endTouch);\n            return () => {\n                element.removeEventListener(\"touchstart\", startTouch);\n                element.removeEventListener(\"touchend\", endTouch);\n                if (rafId.current !== null) {\n                    window.clearTimeout(rafId.current);\n                }\n            };\n        }\n    }, [isEnabled, scrollEl]);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useKineticScroll);\n//# sourceMappingURL=use-kinetic-scroll.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGdsaWRlYXBwcy9nbGlkZS1kYXRhLWdyaWQvZGlzdC9lc20vaW50ZXJuYWwvc2Nyb2xsaW5nLWRhdGEtZ3JpZC91c2Uta2luZXRpYy1zY3JvbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQSxrQkFBa0IsNkNBQU07QUFDeEIsdUJBQXVCLDZDQUFNO0FBQzdCLCtCQUErQiw2Q0FBTTtBQUNyQyxzQkFBc0IsNkNBQU07QUFDNUIsd0JBQXdCLDZDQUFNO0FBQzlCO0FBQ0E7QUFDQSxJQUFJLGdEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpRUFBZSxnQkFBZ0IsRUFBQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvcml6b24tdGFpbHdpbmQtcmVhY3QtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0BnbGlkZWFwcHMvZ2xpZGUtZGF0YS1ncmlkL2Rpc3QvZXNtL2ludGVybmFsL3Njcm9sbGluZy1kYXRhLWdyaWQvdXNlLWtpbmV0aWMtc2Nyb2xsLmpzP2YwMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmNvbnN0IHVzZUtpbmV0aWNTY3JvbGwgPSAoaXNFbmFibGVkLCBjYWxsYmFjaywgdGFyZ2V0U2Nyb2xsZXIpID0+IHtcbiAgICBjb25zdCByYWZJZCA9IHVzZVJlZihudWxsKTtcbiAgICBjb25zdCBpc1RvdWNoaW5nID0gdXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGxhc3RTY3JvbGxQb3NpdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgICBjb25zdCBzYW1lQ291bnQgPSB1c2VSZWYoMCk7XG4gICAgY29uc3QgY2FsbGJhY2tSZWYgPSB1c2VSZWYoY2FsbGJhY2spO1xuICAgIGNhbGxiYWNrUmVmLmN1cnJlbnQgPSBjYWxsYmFjaztcbiAgICBjb25zdCBzY3JvbGxFbCA9IHRhcmdldFNjcm9sbGVyLmN1cnJlbnQ7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgaGFuZGxlU2Nyb2xsID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlzVG91Y2hpbmcuY3VycmVudCA9PT0gZmFsc2UgJiYgc2Nyb2xsRWwgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U2Nyb2xsUG9zaXRpb24gPSBbc2Nyb2xsRWwuc2Nyb2xsTGVmdCwgc2Nyb2xsRWwuc2Nyb2xsVG9wXTtcbiAgICAgICAgICAgICAgICBpZiAobGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQ/LlswXSA9PT0gY3VycmVudFNjcm9sbFBvc2l0aW9uWzBdICYmXG4gICAgICAgICAgICAgICAgICAgIGxhc3RTY3JvbGxQb3NpdGlvbi5jdXJyZW50Py5bMV0gPT09IGN1cnJlbnRTY3JvbGxQb3NpdGlvblsxXSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2FtZUNvdW50LmN1cnJlbnQgPiAxMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2Nyb2xsIHBvc2l0aW9uIGhhc24ndCBjaGFuZ2VkLCBzdG9wIHRoZSBhbmltYXRpb24gZnJhbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RTY3JvbGxQb3NpdGlvbi5jdXJyZW50ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVG91Y2hpbmcuY3VycmVudCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzYW1lQ291bnQuY3VycmVudCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzYW1lQ291bnQuY3VycmVudCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrUmVmLmN1cnJlbnQoY3VycmVudFNjcm9sbFBvc2l0aW9uWzBdLCBjdXJyZW50U2Nyb2xsUG9zaXRpb25bMV0pO1xuICAgICAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsUG9zaXRpb24uY3VycmVudCA9IGN1cnJlbnRTY3JvbGxQb3NpdGlvbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmFmSWQuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KGhhbmRsZVNjcm9sbCwgMTAwMCAvIDEyMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHN0YXJ0VG91Y2ggPSAoKSA9PiB7XG4gICAgICAgICAgICBpc1RvdWNoaW5nLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICAgICAgbGFzdFNjcm9sbFBvc2l0aW9uLmN1cnJlbnQgPSBudWxsOyAvLyBSZXNldCBsYXN0IHNjcm9sbCBwb3NpdGlvbiBvbiB0b3VjaCBzdGFydFxuICAgICAgICAgICAgaWYgKHJhZklkLmN1cnJlbnQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHJhZklkLmN1cnJlbnQpO1xuICAgICAgICAgICAgICAgIHJhZklkLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlbmRUb3VjaCA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnRvdWNoZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgLy8gQWxsIHRvdWNoZXMgaGF2ZSBlbmRlZFxuICAgICAgICAgICAgICAgIGlzVG91Y2hpbmcuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHNhbWVDb3VudC5jdXJyZW50ID0gMDtcbiAgICAgICAgICAgICAgICByYWZJZC5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoaGFuZGxlU2Nyb2xsLCAxMDAwIC8gMTIwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGlzRW5hYmxlZCAmJiBzY3JvbGxFbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHNjcm9sbEVsO1xuICAgICAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBzdGFydFRvdWNoKTtcbiAgICAgICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGVuZFRvdWNoKTtcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBzdGFydFRvdWNoKTtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLCBlbmRUb3VjaCk7XG4gICAgICAgICAgICAgICAgaWYgKHJhZklkLmN1cnJlbnQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChyYWZJZC5jdXJyZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSwgW2lzRW5hYmxlZCwgc2Nyb2xsRWxdKTtcbn07XG5leHBvcnQgZGVmYXVsdCB1c2VLaW5ldGljU2Nyb2xsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlLWtpbmV0aWMtc2Nyb2xsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@glideapps/glide-data-grid/dist/esm/internal/scrolling-data-grid/use-kinetic-scroll.js\n");

/***/ })

};
;